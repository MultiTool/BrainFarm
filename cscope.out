cscope 15 $HOME/Documents/Projects/BrainFarm               0000610066
	@/home/john/Documents/Projects/BrainFarm/Base.h

1 #i‚de‡
BASE_H_INCLUDED


2 
	#BASE_H_INCLUDED


	)

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<°döt.h
>

7 
	~<Êﬂt.h
>

9 
	#__STDC_FORMAT_MACROS


	)

10 
	~<öây≥s.h
>

11 
	~<io°ªam
>

12 
	~<ve˘‹
>

14 
	~<hash_m≠
>

16 
	~<Æg‹ôhm
>

17 
	~<m©h.h
>

18 
	~<cm©h
>

19 
	~<time.h
>

20 
	~<sys/time.h
>

21 
	~<°dio.h
>

23 
	~<°d¨g.h
>

24 
	~<c°d¨g
>

26 
	~<thªad
>

27 
	~<©omic
>

28 
	~<uni°d.h
>

30 
	~<f°ªam
>

31 
	~<s°ªam
>

33 
usög
 
«me•a˚
 
	g°d
;

35 
usög
 
«me•a˚
 
	g__gnu_cxx
;

37 #i‚de‡
Ál£


38 
	#Ál£
 0

	)

40 #i‚de‡
åue


41 
	#åue
 1

	)

44 #i‚de‡
öt8_t


45 
	#öt8_t
 

	)

47 #i‚de‡
uöt8_t


48 
	#uöt8_t
 
öt8_t


	)

50 #i‚de‡
öt32_t


51 
	#öt32_t
 

	)

54 
	#INT32_MAX
 2147483647

	)

55 
	#INT32_MIN
 (-2147483647 - 1)

	)

57 #i‚de‡
uöt32_t


58 
	#uöt32_t
 
öt32_t


	)

59 
	#INT32_MAX
 (~(
uöt32_t
)0)

	)

65 
	#Fudge
 (2.01e-010)

66 

	)

71 
	#Ælocß„
(
T
, 
num
Ë(T*)
	`mÆloc
((T)*num)

	)

72 
	#‰ìß„
(
obj
Ë
	`‰ì
(obj)

	)

73 
	#m©h_sgn
(
num
Ë(“um>0)?1:(“um<0)?-1:0))

	)

78 
	#zì
 'd'

	)

84 
uöt64_t
 
	tUidTy≥
;

85 
	g°d
::
	tve˘‹
<
	tUidTy≥
> 
	tUidVec
;

86 
	ghash_m≠
<
	tUidTy≥
, UidTy≥> 
	tUidM≠
;

87 
	ghash_m≠
<
	tUidTy≥
, UidTy≥>::
	tôî©‹
 
	tUidM≠Iãr
;

89 
UidTy≥
 
	gUidSour˚2
=0;

90 c⁄° 
UidTy≥
 
	gUidNuŒ
=0;

91 ˛as†
	cIdMakî
 {

92 
	mpublic
:

93 
UidTy≥
 
UidSour˚
;

94 
UidTy≥
 
	$MakeId
() {

96 
UidSour˚2
++;

97  
UidSour˚2
;

99 
	}
};

101 
	$‰™d
() {

102  (()
	`ønd
()Ë/ (()
RAND_MAX
);

103 
	}
}

105 #i‡
åue


106 
	#bug¥ötf
 
¥ötf


	)

108 
	$bug¥ötf
(c⁄° *
f‹m©
, ...) {

109 
d⁄e
;

112 
va_li°
 
¨g
;

114 
	`va_°¨t
 (
¨g
, 
f‹m©
);

115 
d⁄e
 = 
	`vÂrötf
 (
°dout
, 
f‹m©
, 
¨g
);

116 
	`va_íd
 (
¨g
);

118  
d⁄e
;

119 
	}
}

122 
«me•a˚
 
	gBôI¡
 {

124 
ölöe
 
TønsBô
(
vÆ
, 
bônum
) {

125  (()((
	gvÆ
 >> 
	gbônum
)&0x1)) * 2.0 - 1.0;

127 
ölöe
 
TønsI¡
(
vÆ
) {

128  (()
	gvÆ
) * 2.0 - 1.0;

130 
ölöe
 
uöt32_t
 
Bô2I¡
(
vÆ
, 
bônum
) {

131  ((
	gvÆ
 >> 
	gbônum
)&0x1);

135 
	$Di°ributi⁄
() {

136 
øysz
 = 10;

137 
numôems
 = 1;

139 
˚Œnum
 = 0; cñ um < 
øysz
; cellnum++) {

140 
øysubÀn
 = 
øysz
 - 
˚Œnum
;

141 
ö¥ob
 = 0;

142 
Á˘out
 = 0;

143 
˙t
 = 0; c¡ < 
numôems
; cnt++) {

144 
ö¥ob
 +(1.0 - 
Á˘out
Ë/ (
øysubÀn
 - 
˙t
);

145 
Á˘out
 = 
ö¥ob
;

150 
	}
}

152 c⁄° 
	gu¥ecisi⁄
 = 1000000.0;

153 
ölöe
 
	$FuŒTime
(
timevÆ
 
tm0
) {

154  
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

155 
	}
}

157 
	$DñayU¡û
(
hour
) {

158 
timevÆ
 
tim1
;

159 
tm
 *
tmutc
;

161 
	`gëtimeofday
(&
tim1
, 
NULL
);

162 
tmutc
 = 
	`gmtime
(&
tim1
.
tv_£c
);

163 
	`u¶ìp
(30*1000000L);

164 
	`¥ötf
("time:%02d:%02d:%02d\n", 
tmutc
->
tm_hour
,Åmutc->
tm_mö
,Åmutc->
tm_£c
);

165 } 
tmutc
->
tm_hour
<
hour
);

166 
	}
}

169 
	g°d
::
ve˘‹
<
°d
::
°rög
> &
•lô2
(c⁄° std::°rög &
s
, 
dñim
, std::ve˘‹<°d::°rög> &
ñems
, 
MaxDñimëîs
) {

170 
	g°d
::
°rög°ªam
 
s°ªam
(
s
);

171 
	g°d
::
°rög
 
ôem
;

172 
	g˙t
 = 0;

173 
	g°d
::
gëlöe
(
s°ªam
, 
ôem
, 
dñim
)) {

174 
	gñems
.
push_back
(
ôem
);

175 i‡(++
	g˙t
>=
MaxDñimëîs
) {;}

177 if(
	g°d
::
gëlöe
(
s°ªam
, 
ôem
)Ë{ 
	gñems
.
push_back
(item); }

178  
	gñems
;

180 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
•lô2
(c⁄° std::°rög &
s
, 
dñim
, 
MaxDñimëîs
) {

181 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ñems
;

182 
•lô2
(
s
, 
dñim
, 
ñems
, 
MaxDñimëîs
);

183  
	gñems
;

186 
	g°d
::
ve˘‹
<
°d
::
°rög
> &
•lô
(c⁄° std::°rög &
s
, 
dñim
, std::ve˘‹<°d::°rög> &
ñems
) {

187 
°d
::
°rög°ªam
 
ss
(
s
);

188 
	g°d
::
°rög
 
ôem
;

189 
	g°d
::
gëlöe
(
ss
, 
ôem
, 
dñim
)) {

190 
	gñems
.
push_back
(
ôem
);

192  
	gñems
;

194 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
•lô
(c⁄° std::°rög &
s
, 
dñim
) {

195 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ñems
;

196 
•lô
(
s
, 
dñim
, 
ñems
);

197  
	gñems
;

201 
	$föd_™d_ª∂a˚
(
°rög
& 
sour˚
, såög c⁄°& 
föd
, såög c⁄°& 
ª∂a˚
){

202 
°d
::
°rög
::
size_ty≥
 
siz
 = 0; (siz = 
sour˚
.
	`föd
(
föd
, siz)Ë!°d::°rög::
≈os
;){

203 
sour˚
.
	`ª∂a˚
(
siz
, 
föd
.
	`Àngth
(), 
ª∂a˚
);

204 
siz
 +
ª∂a˚
.
	`Àngth
(Ë- 
föd
.length() + 1;

206 
	}
}

208 c⁄° 
	g°d
::
°rög
 
WhôeS∑˚s
( " \f\n\r\t\v" );

209 
TrimRight
–
°d
::
°rög
& 
°r
, c⁄° std::°rög& 
TrimCh¨s
 = 
WhôeS∑˚s
 )

211 
°d
::
°rög
::
size_ty≥
 
pos
 = 
°r
.
föd_œ°_nŸ_of
–
TrimCh¨s
 );

212 
	g°r
.
îa£
–
pos
 + 1 );

214 
TrimLe·
–
°d
::
°rög
& 
°r
, c⁄° std::°rög& 
TrimCh¨s
 = 
WhôeS∑˚s
 )

216 
°d
::
°rög
::
size_ty≥
 
pos
 = 
°r
.
föd_fú°_nŸ_of
–
TrimCh¨s
 );

217 
	g°r
.
îa£
–0, 
pos
 );

219 
Trim
–
°d
::
°rög
& 
°r
, c⁄° std::°rög& 
TrimCh¨s
 = 
WhôeS∑˚s
 )

221 
TrimRight
–
°r
, 
TrimCh¨s
 );

222 
TrimLe·
–
°r
, 
TrimCh¨s
 );

225 #i‡
Ál£


227 
	$Di°ributi⁄
()

229 
øysz
 = 10;

230 
numôems
 = 5;

232 
Te°Numî
, 
Te°Díom
, 
ShaveNum
, 
ShaveDíom
;

234 
ShaveNum
 = 9; 
ShaveDíom
 = 10;

236 
Te°Numî
 = 9 * 8 * 7 * 6 * 5; 
Te°Díom
 = 10 * 9 * 8 * 7 * 6;

249 
˚Œnum
 = 0; cñ um < 
øysz
; cellnum++)

251 
øysubÀn
 = 
øysz
 - 
˚Œnum
;

252 i‡(
øysubÀn
 < 
numôems
)

256 
ö¥ob
 = 0;

257 
Á˘out
 = 0;

258 
˙t
 = 0; c¡ < 
numôems
; cnt++)

260 
ö¥ob
 +(1.0 - 
Á˘out
Ë/ (
øysubÀn
 - 
˙t
);

261 
Á˘out
 = 
ö¥ob
;

264 
Te°Numî
 = 
	`SubFa˘‹ül
(
numôems
, 
øysubÀn
 - 1);

265 
Te°Díom
 = 
	`SubFa˘‹ül
(
numôems
 + 1, 
øysubÀn
);

266 
‰a˘
 = 
Te°Numî
 / 
Te°Díom
;

270 
Sy°em
.
C⁄sﬁe
.
	`WrôeLöe
("˚Œnum:{0},ÑaysubÀn:{1}, ouçrob:{2}, fø˘:{3}", 
˚Œnum
, 
øysubÀn
, 1.0 - 
ö¥ob
, 
‰a˘
 - inprob);

272 
ShaveNum
--; 
ShaveDíom
--;

274 
boﬁ
 
n›
 = 
åue
;

282 
	}
}

283 
	$SubFa˘‹ül
(
°¨t
, 
föish
)

285 
g©hî
 = 1.0;

286 
˙t
 = 
°¨t
; c¡ <
föish
; cnt++)

288 
g©hî
 *
˙t
;

290  
g©hî
;

291 
	}
}

	@/home/john/Documents/Projects/BrainFarm/Feed.h

1 #i‚de‡
FEED_H_INCLUDED


2 
	#FEED_H_INCLUDED


	)

4 
	~"Ba£.h
"

5 
	~"IoJack.h
"

7 
˛ass
 
	tFìd
 *
	tFìdPå
;

8 ˛as†
	cFìd
 {

9 
	mpublic
:

10 
uöt64_t
 
Gíî©i⁄
;

11 
	m°d
::
ve˘‹
<
GlobÆIoJackPå
> 
P‹ts
;

13 
	$Fìd
() {

14 
Gíî©i⁄
 = 0;

17 ~
	$Fìd
() {

18 
˙t
=0; c¡<
P‹ts
.
	`size
(); cnt++) {

19 
dñëe
 
P‹ts
.
	`©
(
˙t
);

21 
	}
}

23 
ölöe
 
GlobÆIoJackPå
 
	$©
(
size_t
 
dex
Ë{  
P‹ts
.
	`©
(dex); 
	}
}

25 
ölöe
 
size_t
 
	$size
(Ë{  
P‹ts
.
	`size
(); 
	}
}

27 
	$S‹t_P‹ts
() {

28 
°d
::
	`s‹t
 (
P‹ts
.
	`begö
(), P‹ts.
	`íd
(), 
As˚ndögP‹tId
);

29 
	}
}

31 
boﬁ
 
	$As˚ndögP‹tId
(
GlobÆIoJackPå
 
b0
, GlobÆIoJackPå 
b1
) {

32  (
b0
->
P‹tId
 < 
b1
->PortId);

33 
	}
}

35 
uöt32_t
 
	$TªeSórchP‹ts
(
uöt64_t
 
°¨çœ˚
, 
IoDexTy≥
 
èrgë
) {

36 
LoDex
, 
MedDex
, 
HiDex
;

37 
GlobÆIoJackPå
 
MedNode
;

38 
LoDex
=
°¨çœ˚
; 
HiDex
=
P‹ts
.
	`size
();

39 
LoDex
<
HiDex
) {

40 
MedDex
 = (
LoDex
+
HiDex
)/2;

41 
MedNode
 = 
P‹ts
.
	`©
(
MedDex
);

42 i‡(
èrgë
 <
MedNode
->
P‹tId
Ë{ 
HiDex
 = 
MedDex
; }

43 { 
LoDex
 = 
MedDex
+1; }

45  
LoDex
;

46 
	}
}

48 
	$Gíî©eTe°P‹ts
() {

49 
GlobÆIoJackPå
 
jack
;

50 
ch
;

51 
ch
 = 'a';

52 
ch
<=
zì
) {

53 
jack
 = 
√w
 
	`GlobÆIoJack
(); 
this
->
P‹ts
.
	`push_back
(jack);

54 
jack
->
P‹tId
 = 
ch
;

55 
ch
++;

57 
	}
}

59 
	$NextGí
() {

62 
GlobÆIoJackPå
 
Jack
;

63 
size_t
 
siz
 = 
P‹ts
.
	`size
();

64 
˙t
=0; c¡<
siz
; cnt++) {

65 
Jack
 = 
P‹ts
.
	`©
(
˙t
);

66 
Jack
->
VÆue
 = -1.0;

68 
size_t
 
LiveP‹tDex
 = 
Gíî©i⁄
 % 
siz
;

69 
Jack
 = 
P‹ts
.
	`©
(
LiveP‹tDex
);

70 
Jack
->
VÆue
 = 1.0;

71 
Gíî©i⁄
++;

72 
	}
}

	@/home/john/Documents/Projects/BrainFarm/Feeder.h

1 #i‚de‡
FEEDER_H_INCLUDED


2 
	#FEEDER_H_INCLUDED


	)

4 
	~<io°ªam
>

5 
	~<°dio.h
>

6 
	~<cuæ/cuæ.h
>

7 
	~<°rög
>

9 
	~<f°ªam
>

10 
	~<s°ªam
>

12 
	~<uni°d.h
>

13 
	~<time.h
>

14 
	~<sys/time.h
>

16 
	~<°rög
>

17 
	~<ve˘‹
>

18 
	~"Ba£.h
"

20 
usög
 
«me•a˚
 
	g°d
;

25 ˛as†
	cFìdî
 {

26 
	mpublic
:

28 
vútuÆ
 
	$O≥n
() {}

29 
vútuÆ
 
	$Clo£
(Ë{
	}
}

30 
vútuÆ
 
Fëch
(
°d
::
°rög
 &
glob
) { }

33 ˛as†
	cFûeFìdî
 : 
public
 
Fìdî
 {

34 
public
:

35 
°d
::
°rög
 
öfûï©h
 ="sample.txt";

36 
if°ªam
 
	möfûe
;

38 
vútuÆ
 
	$O≥n
() {

39 
öfûe
.
	`›í
(
öfûï©h
.
	`c_°r
());

40 i‡(
öfûe
.
	`is_›í
()) {

41 } 
cout
 << "UnableÅo open file";

44 
	$Clo£
() {

45 
öfûe
.
	`˛o£
();

46 
	}
}

48 
Fëch
(
°d
::
°rög
 &
glob
Ë
ovîride
 {

49 
°rög
 
löe
;

51 
	gglob
.
˛ór
();

52 i‡(!
	göfûe
.
is_›í
()) {

55 
boﬁ
 
	gInChunk
 = 
Ál£
;

56 
gëlöe
(
öfûe
, 
löe
)) {

57 i‡(
	gInChunk
) {

58 if(
	glöe
.
föd
("<ídcut/>"Ë!
°rög
::
≈os
) {

59 
InChunk
=
Ál£
; ;

61 
	gglob
.
≠≥nd
(
löe
); glob.append("\n");

63 if(
	glöe
.
föd
("<cut>"Ë!
°rög
::
≈os
) {

65 
InChunk
=
åue
; 
	gglob
.
˛ór
();

72 ˛as†
	cWebFìdî
 : 
public
 
Fìdî
 {

73 
public
:

74 
CURL
 *
cuæ
;

76 
	m°d
::
°rög
 
ªadBuf„r
;

77 
	m°d
::
°rög
 
ba£uæ
 = "http://finance.yahoo.com/d/quotes.csv";

78 
	m°d
::
°rög
 
biguæ
 = 
ba£uæ
 + "?s=XOM+BBD-B.TO+JNJ+MSFT+WAG+HOG+AAPL+BAC+FLPSX+VTI+RHT+NVAX+WDAY+HALO+TSLA+LNKD &f=d1t1l1yrsn";

79 
	m°d
::
ve˘‹
<
°d
::
°rög
> 
symbﬁs
 {

82 c⁄° *
	guæ
 = 
biguæ
.
c_°r
();

83 
	gFëchC¡
;

85 
	$WebFìdî
() {

86 
	`BuûdUæ
();

87 
ba£uæ
 = "http://finance.yahoo.com/d/quotes.csv";

88 
biguæ
 = 
ba£uæ
 + "?s=XOM+BBD-B.TO+JNJ+MSFT+WAG+HOG+AAPL+BAC+FLPSX+VTI+RHT+NVAX+WDAY+HALO+TSLA+LNKD &f=d1t1l1yrsn";

89 
uæ
 = 
biguæ
.
	`c_°r
();

90 
FëchC¡
 = 0;

91 
	}
}

93 
	$O≥n
(Ë
ovîride
 {

94 
	`cuæ_globÆ_öô
(
CURL_GLOBAL_ALL
);

95 
cuæ
 = 
	`cuæ_ósy_öô
();

96 if(
cuæ
) {

97 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_URL
, 
uæ
);

99 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_FOLLOWLOCATION
, 1L);

100 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
WrôeCÆlback
);

101 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEDATA
, &
ªadBuf„r
);

103 
	}
}

105 
	$Clo£
(Ë
ovîride
 {

106 
	`cuæ_ósy_˛ónup
(
cuæ
);

107 
	`cuæ_globÆ_˛ónup
();

108 
	}
}

110 
Fëch
(
°d
::
°rög
 &
glob
Ë
ovîride
 {

111 
CURLcode
 
ªs
;

112 
timevÆ
 
	gtim0
, 
	gtim1
;

113 
tm
 *
	gtmloˇl
, *
	gtmutc
;

114 
	gtimnum0
, 
	gtimnum1
;

116 
gëtimeofday
(&
tim0
, 
NULL
);

117 
	gtimnum0
 = 
FuŒTime
(
tim0
);

119 
°rög
 
	glöe
;

120 
	gglob
.
˛ór
();

122 
	gªadBuf„r
.
˛ór
();

123 
	gªs
 = 
cuæ_ósy_≥rf‹m
(
cuæ
);

124 if(
	gªs
 !
CURLE_OK
) {

125 
Ârötf
(
°dîr
, "cuæ_ósy_≥rf‹m(ËÁûed: %s\n", 
cuæ_ósy_°ªº‹
(
ªs
));

128 
gëtimeofday
(&
tim1
, 
NULL
);

129 
	gtimnum1
 = 
FuŒTime
(
tim1
);

130 
	gtmloˇl
 = 
loˇ…ime
(&
tim1
.
tv_£c
);

131 
	gtmutc
 = 
gmtime
(&
tim1
.
tv_£c
);

133 c⁄° *
	gtxt
 = 
ªadBuf„r
.
c_°r
();

136 
	gglob
 = 
ªadBuf„r
;

137 
	gFëchC¡
++;

140 
	$S‹tSymbﬁs
() {

141 
°d
::
	`s‹t
(
symbﬁs
.
	`begö
(), symbﬁs.
	`íd
());

142 
	}
}

144 
	$BuûdUæ
() {

145 
	`S‹tSymbﬁs
();

146 
°d
::
°rög
 
symtxt
;

147 
°d
::
°rög
 
UæTxt
 = 
ba£uæ
 + "?s=";

148 
size_t
 
siz
 = 
symbﬁs
.
	`size
();

149 
˙t
=0; c¡<
siz
; cnt++) {

150 
symtxt
 = 
symbﬁs
.
	`©
(
˙t
);

151 
UæTxt
.
	`≠≥nd
(
symtxt
 + "+");

153 
UæTxt
.
	`≠≥nd
(" &f=d1t1l1yrsn");

154 
	}
}

156 
size_t
 
	$WrôeCÆlback
(*
c⁄ã¡s
, 
size_t
 
size
, size_à
nmemb
, *
u£Ω
)

158 ((
°d
::
°rög
*)
u£Ω
)->
	`≠≥nd
((*)
c⁄ã¡s
, 
size
 * 
nmemb
);

159  
size
 * 
nmemb
;

160 
	}
}

162 
	$maö°r
()

164 
	`DñayU¡û
(12);

165 
timevÆ
 
tim0
, 
tim1
;

172 
tm
 *
tmloˇl
, *
tmutc
;

173 
timnum0
, 
timnum1
;

175 
	`gëtimeofday
(&
tim0
, 
NULL
);

176 
timnum0
 = 
	`FuŒTime
(
tim0
);

178 
CURLcode
 
ªs
;

179 
°d
::
°rög
 
ªadBuf„r
;

180 
	`cuæ_globÆ_öô
(
CURL_GLOBAL_ALL
);

181 
cuæ
 = 
	`cuæ_ósy_öô
();

182 if(
cuæ
) {

183 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_URL
, 
uæ
);

187 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_FOLLOWLOCATION
, 1L);

188 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
WrôeCÆlback
);

189 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEDATA
, &
ªadBuf„r
);

190 
˙t
=0;

191 
åue
) {

192 
ªadBuf„r
.
	`˛ór
();

193 
ªs
 = 
	`cuæ_ósy_≥rf‹m
(
cuæ
);

194 if(
ªs
 !
CURLE_OK
) {

195 
	`Ârötf
(
°dîr
, "cuæ_ósy_≥rf‹m(ËÁûed: %s\n", 
	`cuæ_ósy_°ªº‹
(
ªs
));

198 
	`gëtimeofday
(&
tim1
, 
NULL
);

199 
timnum1
 = 
	`FuŒTime
(
tim1
);

200 
tmloˇl
 = 
	`loˇ…ime
(&
tim1
.
tv_£c
);

201 
tmutc
 = 
	`gmtime
(&
tim1
.
tv_£c
);

204 i‡(
Ál£
) {

205 
	`¥ötf
("<cut>%06i</cut>\n", 
˙t
);

206 
°d
::
ve˘‹
<°d::
°rög
> 
chunks
 = 
	`•lô
(
ªadBuf„r
, '\n');

207 
˙t1
=0; c¡1<
chunks
.
	`size
(); cnt1++) {

208 c⁄° *
txt0
 = 
chunks
.
	`©
(
˙t1
).
	`c_°r
();

209 
	`¥ötf
("****** %†****** \n", 
txt0
);

213 c⁄° *
txt
 = 
ªadBuf„r
.
	`c_°r
();

215 
	`¥ötf
("<cut>%06i; %02d:%02d:%02d; %20.3f</cut>\n", 
˙t
, 
tmloˇl
->
tm_hour
,Åmloˇl->
tm_mö
,Åmloˇl->
tm_£c
, 
timnum1
);

217 
	`¥ötf
("%s", 
txt
);

218 
	`¥ötf
("<endcut/>\n");

223 i‡(
tmutc
->
tm_hour
>=21) {

228 
	`u¶ìp
(500000L);

233 
˙t
++;

236 
	`¥ötf
("\n\n\n");

237 
	`¥ötf
("Sec⁄d†ñ≠£d:%20.3f\n", 
timnum1
-
timnum0
);

238 
	`cuæ_ósy_˛ónup
(
cuæ
);

239 
	`cuæ_globÆ_˛ónup
();

241 
	}
}

244 ˛as†
	cJunkY¨d
 {

245 
	mpublic
:

247 
	$P¨£
() {

248 
°rög
 
löe
;

249 
°rög
 
glob
;

250 
°d
::
°rög
 
öfûï©h
 ="s2clipped.txt";

251 
if°ªam
 
	`myfûe
 (
öfûï©h
.
	`c_°r
());

252 i‡(
myfûe
.
	`is_›í
())

254  
	`gëlöe
(
myfûe
, 
löe
) ) {

255 if(
löe
.
	`föd
("<cut>"Ë!
°rög
::
≈os
) {

256 
cout
 << "<endcut/>\n";

257 
cout
 << 
löe
 << '\n';

258 
glob
.
	`˛ór
();

260 
cout
 << 
löe
 << '\n';

262 
glob
.
	`≠≥nd
(
löe
);

264 
myfûe
.
	`˛o£
();

265 } 
cout
 << "UnableÅo open file";

269 
°d
::
°rög
 
txt
 = "what:goes:here:folks";

272 
dñim
 = ':';

273 
°d
::
ve˘‹
<°d::
°rög
> 
ñems
;

274 
	`•lô2
(
txt
, 
dñim
, 
ñems
, 2);

276 
siz
 = 
ñems
.
	`size
();

277 
˙t
=0; c¡<
siz
; cnt++) {

278 
cout
 << 
ñems
.
	`©
(
˙t
) << "\n";

283 
ölöe
 
uöt64_t
 
	$Ba£N
(
chr
) {

284 
uöt64_t
 
num
 = 0;

285 i‡('0' <
chr
 && chr <= '9') {

286 
num
 = 
chr
 - 48;

287 } i‡('A' <
chr
 && chr <= 'Z') {

288 
num
 = 10 + (
chr
 - 65);

289 } i‡('a' <
chr
 && chr <= 'z') {

290 
num
 = 10 + (
chr
 - 97);

291 } i‡(
chr
 == '-') {

292 
num
 = 36;

293 } i‡(
chr
 == '.') {

294 
num
 = 37;

296 
	`¥ötf
("Character out ofÑange!");

298  
num
;

299 
	}
}

300 
	#TextRadix
 38;

	)

301 
	#Shi·Di°
 6

	)

302 
	#MaxShi·s
 ((
uöt64_t
)(((uöt64_t)*8)/
Shi·Di°
))

	)

304 
ölöe
 
uöt64_t
 
TxtDex
(c⁄° 
°d
::
°rög
 &
löe
) {

305 c⁄° *
txt
 = 
löe
.
c_°r
();

306 
uöt64_t
 
	gªtvÆ
 = 0;

307 
uöt64_t
 
	glsiz
 = 
löe
.
size
();

308 i‡(
	glsiz
>5) {

309 
¥ötf
("Symbol isÅooÜong!");

311 
	glimô
 = 
°d
::
mö
(
MaxShi·s
, 
lsiz
);

312 
	g˙t
=0; c¡<
	glimô
; cnt++) {

313 
	gªtvÆ
 *
TextRadix
;

314 
	gªtvÆ
 +
Ba£N
(
txt
[
˙t
]);

317  
	gªtvÆ
;

320 
ölöe
 
uöt64_t
 
TxtDex2
(c⁄° 
°d
::
°rög
 &
löe
) {

321 c⁄° *
txt
 = 
löe
.
c_°r
();

322 
uöt64_t
 
	gªtvÆ
 = 0;

323 
uöt64_t
 
	glsiz
 = 
löe
.
size
();

324 i‡(
	glsiz
>5) {

325 
¥ötf
("Symbol isÅooÜong!");

327 
	glimô
 = 
°d
::
mö
(
MaxShi·s
, 
lsiz
);

328 
	g˙t
=0; c¡<
	glimô
; cnt++) {

329 
	gªtvÆ
 <<
Shi·Di°
;

330 
	gªtvÆ
 |
Ba£N
(
txt
[
˙t
]);

333  
	gªtvÆ
;

336 
P¨£Yahoo
(c⁄° 
°d
::
°rög
 
txt
, 
IoJackBa£
 *
IoJack
) {

337 
°rög
 
	gglob
;

338 
	g°d
::
°rög
 
fõld
;

341 
	gdñim
 = ',';

342 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ñems
;

344 
•lô2
(
txt
, 
dñim
, 
ñems
, 6);

346 
	gsiz
 = 
ñems
.
size
();

347 
	g˙t
=0; c¡<
	gsiz
; cnt++) {

348 
Trim
(
ñems
.
©
(
˙t
));

349 
Trim
(
ñems
.
©
(
˙t
),"\"");

350 
	gfõld
 = 
ñems
.
©
(
˙t
);

352 
	gcout
 << "[" << 
	gfõld
 << "]\n";

354 
	g°d
::
°rög
 
VÆueTxt
 = 
ñems
.
©
(2);

355 
	g°d
::
°rög
 
SymbﬁTxt
 = 
ñems
.
©
(5);

357 
	gcout
 << "SymbﬁTxt[" << 
	gSymbﬁTxt
 << "]\n";

358 
	gcout
 << "VÆueTxt[" << 
	gVÆueTxt
 << "]\n";

360 
uöt64_t
 
	ghashdex
 = 
TxtDex
(
SymbﬁTxt
);

361 
	gvÆue
 = 
©of
(
VÆueTxt
.
c_°r
());

363 
	gIoJack
->
	gP‹tId
 = 
hashdex
;

364 
	gIoJack
->
	gVÆue
 = 
vÆue
;

368 
	$MaöFûe
() {

369 
°rög
 
löe
;

370 
if°ªam
 
	`myfûe
 ("example.txt");

371 i‡(
myfûe
.
	`is_›í
())

373  
	`gëlöe
 (
myfûe
,
löe
) )

375 
cout
 << 
löe
 << '\n';

377 
myfûe
.
	`˛o£
();

380 
cout
 << "UnableÅo open file";

383 
	}
}

385 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
P¨£Löe2
(c⁄° std::°rög &
löëxt
) {

386 
°d
::
ve˘‹
<°d::
°rög
> 
øy0
 = 
•lô
(
löëxt
, '"');

387 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øy1
;

388 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øyout
;

389 
	g°d
::
°rög
 
txt0
, 
	gtxt1
;

390 
boﬁ
 
	göquŸe
 = 
Ál£
;

391 
size_t
 
	gsiz0
 = 
øy0
.
size
();

393 
	gtxt0
 = 
øy0
.
©
(0);

394 
	gøy1
 = 
•lô
(
txt0
, ',');

395 
size_t
 
	gsiz1
 = 
øy1
.
size
(); siz1--;

396 
	g˙t1
=0; c¡1<
	gsiz1
; cnt1++) {

397 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

398 
	gøyout
.
push_back
(
txt1
);

400 
	göquŸe
=
åue
;

402 
	g˙t0
=1; c¡0<
	gsiz0
; cnt0++){

403 
	gtxt0
 = 
øy0
.
©
(
˙t0
);

404 i‡(!
	göquŸe
) {

405 
	gøy1
 = 
•lô
(
txt0
, ',');

406 
size_t
 
	gsiz1
 = 
øy1
.
size
(); siz1--;

407 
	g˙t1
=1; c¡1<
	gsiz1
; cnt1++) {

408 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

409 
	gøyout
.
push_back
(
txt1
);

411 
	göquŸe
=
åue
;

413 
	gøyout
.
push_back
(
txt0
);

414 
	göquŸe
=
Ál£
;

417 i‡(!
	göquŸe
){

418 
	gtxt0
 = 
øy0
.
©
(
siz0
-1);

419 
	gøy1
 = 
•lô
(
txt0
, ',');

420 
size_t
 
	gsiz1
 = 
øy1
.
size
();

421 
	g˙t1
=1; c¡1<
	gsiz1
; cnt1++) {

422 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

423 
	gøyout
.
push_back
(
txt1
);

425 
	göquŸe
=
åue
;

427 
¥ötf
("returnÑayout;\n");

428  
	gøyout
;

431 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
P¨£Löe
(c⁄° std::°rög &
löëxt
) {

432 
°d
::
ve˘‹
<°d::
°rög
> 
øy0
 = 
•lô
(
löëxt
, '"');

433 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øy1
;

434 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øyout
;

435 
	g°d
::
°rög
 
txt0
, 
	gtxt1
;

437 
size_t
 
	gsiz0
 = 
øy0
.
size
();

438 
	g˙t0
=0; c¡0<
	gsiz0
; cnt0++) {

439 
	gtxt0
 = 
øy0
.
©
(
˙t0
);

440 i‡(
	g˙t0
%2==0) {

442 
øy1
 = 
•lô
(
txt0
, ',');

443 
size_t
 
	gsiz1
 = 
øy1
.
size
();

444 
	g˙t1
=0; c¡1<
	gsiz1
; cnt1++) {

445 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

446 
	gøyout
.
push_back
(
txt1
);

450 
	gøyout
.
push_back
(
txt0
);

453 
¥ötf
("returnÑayout;\n");

454  
	gøyout
;

457 
P¨£Glob
(c⁄° 
°d
::
°rög
 &
glob
) {

459 
°d
::
ve˘‹
<°d::
°rög
> 
øy0
 = 
•lô
(
glob
, '\n');

460 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øyout
;

461 
	g°d
::
°rög
 
txt0
, 
	gtxt1
;

462 
size_t
 
	gsiz0
 = 
øy0
.
size
();

463 
	g˙t0
=0; c¡0<
	gsiz0
; cnt0++) {

464 
	gtxt0
 = 
øy0
.
©
(
˙t0
);

465 
	gøyout
 = 
P¨£Löe
(
txt0
);

466 
size_t
 
	gsiz1
 = 
øyout
.
size
();

467 
	g˙t1
=0; c¡1<
	gsiz1
; cnt1++) {

468 
	gtxt1
 = 
øyout
.
©
(
˙t1
);

469 
¥ötf
("[%s]", 
txt1
.
c_°r
());

471 
¥ötf
("\n");

475 
	$WebMaö
()

477 
cout
 << "Hñlÿw‹ld!" << 
ídl
;

478 i‡(
åue
) {

479 
°d
::
°rög
 
glob
 = "abcdefghijklmnop";

480 
FûeFìdî
 
„ed
;

481 
„ed
.
	`O≥n
();

482 
˙t
=0; cnt<6; cnt++) {

483 
„ed
.
	`Fëch
(
glob
);

484 
cout
 << "glob is:[" << 
glob
 << "]";

485 
	`¥ötf
("\n");

486 
	`P¨£Glob
(
glob
);

488 
„ed
.
	`Clo£
();

494 if(
Ál£
) {

495 
°d
::
°rög
 
txt
 = "what:goes:here:folks";

498 
dñim
 = ':';

499 
°d
::
ve˘‹
<°d::
°rög
> 
ñems
;

500 
	`•lô2
(
txt
, 
dñim
, 
ñems
, 2);

502 
siz
 = 
ñems
.
	`size
();

503 
˙t
=0; c¡<
siz
; cnt++) {

504 
cout
 << 
ñems
.
	`©
(
˙t
) << "\n";

508 
	}
}

	@/home/john/Documents/Projects/BrainFarm/FlexrayC.h

1 #i‚de‡
FLEXRAYC_H_INCLUDED


2 
	#FLEXRAYC_H_INCLUDED


	)

30 
	~<°döt.h
>

31 
	~"Ba£.h
"

33 #i‚de‡
boﬁ


34 
	#boﬁ
 

	)

35 
	#åue
 0x1

	)

36 
	#Ál£
 0x0

	)

39 
	#ã°Êex
 0

	)

41 
	#highroŸ
 1

	)

43 
	#ã°size
 1000

	)

47 
	#bôwdçow
 0x2

	)

50 
	#bôwdt
 (1<<
bôwdçow
)

	)

53 
	#bôønge
 (1<<
bôwdt
)

	)

56 
	#mask4
 (~(~(
uöt32_t
)0<<
bôwdt
))

57 

	)

59 
	#max_°øè
 ((
uöt32_t
Ë* (8>>
bôwdçow
))

	)

60 
	#œ°_°øè
 (
max_°øè
-1)

	)

65 #i‡
highroŸ


68 
	#keyof
(
key
,
˙t
Ë–(key>>((
œ°_°øè
-˙t)<<
bôwdçow
)Ë& 
mask4
 )

	)

71 
	#keyof
(
key
,
˙t
Ë–(key>>(˙t<<
bôwdçow
)Ë& 
mask4
 )

	)

74 
«me•a˚
 
	gFR
 {

78 
	gãm∂©e
 <
˛ass
 
	gLófTy≥
>

79 ˛as†
	cFÀxøy
 {

80 
	gpublic
:

81 
LófTy≥
 *
	tLófTy≥På
;

82 
uöt32_t
 
	gøm˙t
, 
	gÀa‰am˙t
;

83 
	tÊexøy_ÀafkûlT
(
	tLófTy≥
 *
	tÀaf
);

85 
	sÊexñT


90 
uöt8_t
 
	gnum_chûdªn
;

91 
	udown
 {

92 
ÊexñT
 *
	g√xt
;

94 
LófTy≥
 *
	gLóf
;

95 } 
	gdown
;

98 
ÊexñT
 
	gt›node
;

101 
FÀxøy
() {

102 
	gthis
->
Inô
();

105 ~
FÀxøy
() {

106 
	gthis
->
De°roy
(
NULL
);

108 
Inô
()

112 
	gøm˙t
=0; 
	gÀa‰am˙t
=0;

113 
	gt›node
.
	gnum_chûdªn
=0;Å›node.
	gdown
.
	g√xt
=
NULL
;

115 
boﬁ
 
In£π
(
uöt32_t
 
key
,
LófTy≥
 *
√wÀaf
)

121 
ÊexñT
 
	gãm±›
{0,
NULL
};

122 
ÊexñT
 *
	gup˚Œ
=&
ãm±›
;

123 
ÊexñT
 *
	ghód˚Œ
=&
t›node
;

124 
uöt32_t
 
	g˙t
,
	gtkey
;

125 
boﬁ
 
	gªtvÆ
=
Ál£
;

127 
	gãm±›
.
	gdown
.
	g√xt
=&
t›node
;Åem±›.
	gnum_chûdªn
=0;

129 
	g˙t
=0; c¡<
	gmax_°øè
; cnt++) {

132 i‡(
	ghód˚Œ
->
	gdown
.
	g√xt
==
NULL
) {

133 
hód˚Œ
->
down
.
√xt
=
Ælocß„
(
ÊexñT
, 
bôønge
);

134 
mem£t
(
hód˚Œ
->
down
.
√xt
,0,
bôønge
*(
ÊexñT
));

135 
	gup˚Œ
->
	gnum_chûdªn
++;

136 #i‡
bôwdçow
==0

137 
	gøm˙t
+=
bôønge
*(
ÊexñT
)-((
uöt8
)*bitrange);

139 
	gøm˙t
+=
bôønge
*(
ÊexñT
);

142 
	gtkey
=
keyof
(
key
,
˙t
);

146 
	gup˚Œ
=
hód˚Œ
;

149 
	ghód˚Œ
=&(
hód˚Œ
->
down
.
√xt
[
tkey
]);

152 i‡(
	ghód˚Œ
->
	gdown
.
	gLóf
==
NULL
) {

153 
up˚Œ
->
num_chûdªn
++;

154 
	ghód˚Œ
->
	gdown
.
	gLóf
=
√wÀaf
;

155 
	gÀa‰am˙t
+=(
LófTy≥
);

156 
	gªtvÆ
=
åue
;

158 
	gªtvÆ
=
Ál£
;

160 (
	gªtvÆ
);

163 
Recur£_De°roy
(
ÊexñT
 *
node
, 
dïth
, 
Êexøy_ÀafkûlT
 *
Àafkûl
)

168 
uöt32_t
 
	g˙t
;

169 
	gdïth
++;

170 i‡(
	gdïth
<
	gmax_°øè
) {

171 
	g˙t
=0; c¡<
	gbôønge
; cnt++) {

173 i‡(
	gnode
[
˙t
].
	gdown
.
	g√xt
!=
NULL
) {

174 
Recur£_De°roy
(
node
[
˙t
].
down
.
√xt
, 
dïth
, 
Àafkûl
);

175 
	gnode
[
˙t
].
	gdown
.
	g√xt
=
NULL
;

178 } i‡(
	gÀafkûl
!=
NULL
){

180 
˙t
=0; 
	g˙t
<
	gbôønge
; cnt++) {

182 i‡(
	gnode
[
˙t
].
	gdown
.
	gLóf
!=
NULL
) {

183 
Àafkûl
(
node
[
˙t
].
down
.
Lóf
);

188 
‰ìß„
(
node
);

191 
De°roy
(
Êexøy_ÀafkûlT
 *
Àafkûl
)

197 i‡(
	gt›node
.
	gnum_chûdªn
>0) {

198 
Recur£_De°roy
(
t›node
.
down
.
√xt
, 0, 
Àafkûl
);

199 
	gt›node
.
	gdown
.
	g√xt
=
NULL
;Å›node.
	gnum_chûdªn
=0;

203 
LófTy≥
 *
Lookup
(
uöt32_t
 
key
)

209 
ÊexñT
 
	gãm±›
{0,
NULL
},*
	ghód˚Œ
=&
ãm±›
;

210 
uöt32_t
 
	g˙t
,
	gtkey
;

212 
	ghód˚Œ
=&
t›node
;

213 
	g˙t
=0;

214 
	g˙t
<
	gmax_°øè
 && 
	ghód˚Œ
->
	gdown
.
	g√xt
!=
NULL
) {

215 
tkey
=
keyof
(
key
,
˙t
);

217 
	ghód˚Œ
=&(
hód˚Œ
->
down
.
√xt
[
tkey
]);

218 
	g˙t
++;

220 (
	ghód˚Œ
->
	gdown
.
	gLóf
);

223 
LófTy≥
 *
Remove
(
uöt32_t
 
key
)

229 
ÊexñT
 
	gãm±›
{0,
NULL
},*
	ghód˚Œ
=&
ãm±›
;

230 
ÊexñT
 *
	g°ack
[
max_°øè
];

231 
uöt32_t
 
	g˙t
,
	gtkey
;

232 
LófTy≥
 *
	gÀaf
;

234 
	ghód˚Œ
=&
t›node
;

236 
	g˙t
=0;

237 
	g˙t
<
	gmax_°øè
 && 
	ghód˚Œ
->
	gdown
.
	g√xt
!=
NULL
) {

238 
tkey
=
keyof
(
key
,
˙t
);

240 
	g°ack
[
˙t
]=
hód˚Œ
;

242 
	ghód˚Œ
=&(
hód˚Œ
->
down
.
√xt
[
tkey
]);

243 
	g˙t
++;

245 i‡(
	ghód˚Œ
->
	gdown
.
	g√xt
==
NULL
) {

246 
Àaf
=
NULL
;

248 
	gÀaf
=
hód˚Œ
->
down
.
Lóf
;

250 i‡(
	gÀaf
!=
NULL
) {

251 
hód˚Œ
->
down
.
Lóf
=
NULL
;

252 
	g˙t
=
max_°øè
;

253 
	g˙t
>0) {

254 
	g˙t
--;

257 
	g°ack
[
˙t
]->
	gnum_chûdªn
--;

258 i‡(
	g°ack
[
˙t
]->
	gnum_chûdªn
>0) ;

259 
‰ìß„
(
°ack
[
˙t
]->
down
.
√xt
); 
	g°ack
[˙t]->
	gdown
.
	g√xt
=
NULL
;

262 (
	gÀaf
);

265 
LófTy≥
 *
Êexøy_toggÀ
(
uöt32_t
 
key
,LófTy≥ *
√wÀaf
)

272 
LófTy≥
 *
	gﬁdÀaf
=
NULL
;

274 
	gﬁdÀaf
=
Remove
(
key
);

275 i‡(
	gﬁdÀaf
==
NULL
) {

276 
Êexøy_ö£π
(
key
,
√wÀaf
);

278 (
	gﬁdÀaf
);

	@/home/john/Documents/Projects/BrainFarm/IoJack.h

1 #i‚de‡
IOJACK_H_INCLUDED


2 
	#IOJACK_H_INCLUDED


	)

4 
	~"Ba£.h
"

6 
uöt64_t
 
	tIoDexTy≥
;

9 
˛ass
 
	tIoJackBa£
 *
	tIoJackBa£På
;

10 ˛as†
	cIoJackBa£
 {

11 
	mpublic
:

12 
IoDexTy≥
 
P‹tId
;

13 
	m°d
::
°rög
 
P‹tName
;

14 
uöt32_t
 
	mªf˙t
;

15 
	mVÆue
;

16 
	mUpw¨dVÆue
;

17 
boﬁ
 
	mDïªˇãd
;

18 
	$IoJackBa£
() {

19 
this
->
ªf˙t
=0;

20 
this
->
VÆue
=0;

21 
this
->
Upw¨dVÆue
=0;

22 
this
->
Dïªˇãd
 = 
Ál£
;

24 
IoJackBa£På
 
	$AddRef
() {

25 
this
->
ªf˙t
++;

26  
this
;

27 
	}
}

28 
uöt32_t
 
	$UnRef
(
IoJackBa£På
 *
mîef
) {

29 
this
->
ªf˙t
--;

30  
this
->
ªf˙t
;

31 
	}
}

32 
vútuÆ
 
	$GëVÆue
(){

34 
	}
}

48 
˛ass
 
	tIoJack
 *
	tIoJackPå
;

49 
	g°d
::
	tve˘‹
<
	tIoJackPå
> 
	tIoJackVec
;

50 ˛as†
	cIoJack
 : 
public
 
IoJackBa£
 {

51 
public
:

52 
IoJackBa£På
 
UpSåóm
;

53 
	$IoJack
() {

54 
this
->
ªf˙t
=0;

55 
this
->
VÆue
=0;

56 
this
->
UpSåóm
=
NULL
;

58 
	$GëVÆue
(Ë
ovîride
 {

59  
this
->
UpSåóm
->
VÆue
;

60 
	}
}

64 
˛ass
 
	tGlobÆIoJack
 *
	tGlobÆIoJackPå
;

65 ˛as†
	cGlobÆIoJack
 : 
public
 
IoJackBa£
 {

66 
public
:

67 
°d
::
ve˘‹
<> 
JackHi°‹y
;

68 
	$GlobÆIoJack
() {

69 
this
->
ªf˙t
=0;

70 
this
->
VÆue
=0;

72 
	$GëVÆue
(Ë
ovîride
 {

74 
	}
}

	@/home/john/Documents/Projects/BrainFarm/Lugar.h

1 #i‚de‡
LUGAR_H_INCLUDED


2 
	#LUGAR_H_INCLUDED


	)

4 
	~"Org.h
"

7 
˛ass
 
	gLug¨
;

8 
Lug¨
 *
	tLug¨På
;

9 
	g°d
::
	tve˘‹
<
	tLug¨På
> 
	tLug¨Vec
;

10 ˛as†
	cLug¨
 {

11 
	mpublic
:

12 
Org
 *
ã«¡
;

13 
Org
 *
	mã«¡_√xt
;

14 
uöt32_t
 
	mnumnbrs
;

15 
Lug¨På
 *
	mnbrs
;

16 
Lug¨Vec
 
	mnbrsv
;

18 
	$Lug¨
() {

19 
this
->
numnbrs
 = 0;

20 
this
->
nbrs
 = 
	`Ælocß„
(
Lug¨På
,Åhis->
numnbrs
);

21 
this
->
ã«¡
 = 
NULL
;

22 
this
->
ã«¡_√xt
 = 
NULL
;

25 ~
	$Lug¨
() {

26 
nbrsv
.
	`˛ór
();

27 
this
->
numnbrs
 = 0;

28 
	`‰ìß„
(
this
->
nbrs
);

29 
dñëe
 
this
->
ã«¡
;

30 
dñëe
 
this
->
ã«¡_√xt
;

31 
	}
}

33 
	$Aâach_Nbr
(
Lug¨På
 
nbr0
) {

34 
this
->
nbrsv
.
	`push_back
(
nbr0
);

35 
nbr0
->
nbrsv
.
	`push_back
(
this
);

36 
	}
}

38 
	$Aâach_Tí™t
(
Org
 *
ã«¡0
) {

39 
this
->
ã«¡
 = 
ã«¡0
;

40 
ã«¡
->
home
 = 
this
;

41 
	}
}

43 
	$Aâach_Next_Tí™t
(
Org
 *
ã«¡0
) {

44 
this
->
ã«¡_√xt
 = 
ã«¡0
;

45 
ã«¡_√xt
->
home
 = 
this
;

46 
	}
}

48 
	$Rﬁlovî_Tí™t
() {

49 
dñëe
 
this
->
ã«¡
;

50 
this
->
ã«¡
 = 
ã«¡_√xt
;

51 
this
->
ã«¡_√xt
 = 
NULL
;

52 
	}
}

	@/home/john/Documents/Projects/BrainFarm/Node.h

1 #i‚de‡
NODE_H_INCLUDED


2 
	#NODE_H_INCLUDED


	)

8 
	~<io°ªam
>

9 
	~<°dio.h
>

10 
	~<m≠
>

11 
	~<li°
>

12 
	~"Ba£.h
"

13 
	~"IoJack.h
"

15 
	#WeightAmp
 2.0;

	)

17 
	#WeightShi·Amp
 1.0;

	)

19 c⁄° 
uöt16_t
 
	gNum_IoTy≥s
 = 3;

20 
«me•a˚
 
	gIoTy≥
 {

21 
	eIoTy≥
 {
	gI¡ø
=0, 
	gGlobÆIO
=1, 
	gNbrIO
=2};

23 c⁄° 
	gDisu£Thªsh
 = 1;

28 ˛as†
	cIoTy≥2
 : 
uöt8_t
 {
I¡ø
=0, 
	mGlobÆIO
=1, 
	mNbrIO
=2};

30 
˛ass
 
	gNode
;

31 
Node
 *
	tNodePå
;

32 
	g°d
::
	tve˘‹
<
	tNodePå
> 
	tNodeVec
;

33 
	g°d
::
	tm≠
<
	tUidTy≥
, 
	tNodePå
> 
	tNodeM≠
;

34 
	g°d
::
	tm≠
<
	tUidTy≥
, 
	tNodePå
>::
	tc⁄°_ôî©‹
 
	tNodeM≠Iãøt‹
;

36 
uöt32_t
 
	gbug˙t
 = 0;

37 
	tWeightTy≥
;

39 
˛ass
 
	gLök
;

40 
Lök
 *
	tLökPå
;

41 ˛as†
	cLök
 {

42 
	mpublic
:

43 
Weight
;

44 
	mFúeVÆ
;

45 
UidTy≥
 
	mUSID
;

46 
NodePå
 
	mUSNode
,
	mDSNode
;

47 
	mDisu£
;

48 
	$Lök
() {

49 
this
->
	`CÀ¨
();

51 
LökPå
 
	$S∑wn
() {

52 
LökPå
 
chûd
 = 
√w
 
	`Lök
();

53 
chûd
->
USID
 = 
this
->USID;

54 
chûd
->
Weight
 = 
this
->Weight;

55 
chûd
->
Disu£
 = 
this
->Disuse;

56  
chûd
;

57 
	}
}

58 
ölöe
 
	$CÀ¨
() {

59 
this
->
FúeVÆ
=0.0;

60 
this
->
USNode
=
NULL
;Åhis->
DSNode
=NULL;

61 
	}
}

62 
ölöe
 
	$GëFúe
() {

63  
this
->
FúeVÆ
*this->
Weight
;

64 
	}
}

65 
LökPå
 
	$Abiogí©e
() {

66 
LökPå
 
 p
 = 
√w
 
	`Lök
();

67 
 p
->
Disu£
=0;

68 
 p
->
	`R™domize_Weight
();

69  
 p
;

70 
	}
}

71 
	$R™domize_Weight
() {

72 
this
->
Weight
 = (
	`‰™d
()-0.5Ë* 
WeightAmp
;

73 
	}
}

74 
	$Muèã_Weight
() {

75 
this
->
Weight
 +((
	`‰™d
()*2.0)-1.0Ë* 
WeightShi·Amp
;

76 
	}
}

77 
	$Muèã_Weight
(
WeightFuzzAmp
) {

78 
this
->
Weight
 +((
	`‰™d
()*2.0)-1.0Ë* 
WeightFuzzAmp
;

79 
	}
}

80 
	$Pröt_Me
() {

81 
	`bug¥ötf
(" Lök USID:%li, ", 
this
->
USID
);

82 
	`bug¥ötf
("USNode:%p, DSNode:%∞", 
this
->
USNode
,Åhis->
DSNode
);

83 
	`bug¥ötf
("Weight:%‡\n", 
this
->
Weight
);

84 
	}
}

86 
	g°d
::
	tve˘‹
<
	tLökPå
> 
	tLökVec
;

88 (
	gNode
::*
	tFúeFunc
)();

89 (*
	tFúeFunc2
)(
	tNodePå
);

92 ˛as†
	cNode
 {

93 
public
:

94 
UidTy≥
 
S≥cõsId
;

95 
IoTy≥
::IoTy≥ 
MyTy≥
;

96 
IoDexTy≥
 
IoS≥cõsId
;

97 
IoJackBa£På
 
Jack
;

99 
LökVec
 
LGíome
;

100 
LökVec
 
W‹kög_Ins
, 
W‹kög_Outs
;

101 
FúeVÆ
, 
NextFúeVÆ
;

102 
FúeFunc
 
S≥cülFúe
;

103 
FúeFunc2
 
S≥cülFúe2
;

104 
°d
::
ve˘‹
<> 
FúeHi°‹y
;

106 
	$ã°
(
ha
) {

109 
	$ã°2
(
NodePå
 
ha
) {

110 
	}
}

112 
	$Node
() {

113 
this
->
Jack
 = 
NULL
;

114 
this
->
FúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

115 
this
->
NextFúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

116 
this
->
S≥cülFúe
 = &
Node
::
ã°
;

117 
this
->
S≥cülFúe2
 = 
ã°2
;

118 
this
->
W‹kög_Ins
.
	`˛ór
();

119 
this
->
W‹kög_Outs
.
	`˛ór
();

120 
this
->
FúeHi°‹y
.
	`˛ór
();

121 
	}
}

123 
ölöe
 
	$ã°m‹e
() {

124 (*
this
.*
S≥cülFúe
)(12);

125 (
this
->*
S≥cülFúe
)(12);

127 
this
->
	`S≥cülFúe2
(this);

128 
	}
}

130 ~
	$Node
() {

131 
size_t
 
˙t
;

132 
this
->
W‹kög_Ins
.
	`˛ór
();

133 
this
->
W‹kög_Outs
.
	`˛ór
();

134 
this
->
FúeHi°‹y
.
	`˛ór
();

135 
˙t
=0; c¡<
this
->
LGíome
.
	`size
(); cnt++) {

136 
dñëe
 
this
->
LGíome
.
	`©
(
˙t
);

138 
this
->
LGíome
.
	`˛ór
();

139 
	}
}

141 
NodePå
 
	$Abiogí©e
() {

142 
NodePå
 
ndp
 = 
√w
 
	`Node
();

143 
ndp
->
Jack
 = 
NULL
;

144 
	`ønd
()%2) {

146 
ndp
->
MyTy≥
 = 
IoTy≥
::
I¡ø
;

149 
ndp
->
MyTy≥
 = 
IoTy≥
::
GlobÆIO
;

150 
ndp
->
IoS≥cõsId
 = 'a' + 
	`ønd
()%(1+
zì
-'a');

153 
ndp
->
MyTy≥
 = 
IoTy≥
::
NbrIO
;

156 
ndp
->
S≥cõsId
 = 
IdMakî
::
	`MakeId
();

157 
ndp
->
FúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

158 
ndp
->
NextFúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

159  
ndp
;

160 
	}
}

162 
NodePå
 
	$S∑wn
() {

164 
NodePå
 
∑ª¡
, 
chûd
;

165 
LökPå
 
Õ¨ít
, 
lchûd
;

166 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

167 
chûd
 = 
√w
 
	`Node
();

168 
chûd
->
MyTy≥
 = 
this
->MyType;

169 
chûd
->
S≥cõsId
 = 
this
->SpeciesId;

170 
chûd
->
IoS≥cõsId
 = 
this
->IoSpeciesId;

171 
chûd
->
LGíome
.
	`ªsize
(
siz
);

172 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

173 
Õ¨ít
 = 
this
->
LGíome
.
	`©
(
˙t
);

175 
lchûd
 = 
Õ¨ít
->
	`S∑wn
();

176 
bug˙t
++;

178 
chûd
->
LGíome
.
	`©
(
˙t
Ë
lchûd
;

180  
chûd
;

181 
	}
}

183 
	$Upd©e_From_Fìd
() {

184 i‡(
this
->
MyTy≥
 =
IoTy≥
::
GlobÆIO
) {

186 
this
->
FúeVÆ
 =Åhis->
Jack
->
VÆue
;

188 
	}
}

190 
	$A˘Fun
(
xö
) {

191 
OutVÆ
;

192 
OutVÆ
 = 
xö
 / 
	`sqπ
(1.0 + xin * xin);

193  
OutVÆ
;

195 
	}
}

197 
	$Push_Fúe
() {

198 
LökPå
 
downs
;

199 
MyFúe
=
this
->
FúeVÆ
;

200 
size_t
 
siz
 = 
this
->
W‹kög_Outs
.
	`size
();

201 
˙t
=0; c¡<
siz
; cnt++) {

202 
downs
 = 
this
->
W‹kög_Outs
.
	`©
(
˙t
);

203 
downs
->
FúeVÆ
 = 
MyFúe
;

205 
	}
}

207 
	$CﬁÀ˘_And_Fúe
() {

208 
LökPå
 
ups
;

209 
Sum
=0;

210 
size_t
 
siz
 = 
this
->
W‹kög_Ins
.
	`size
();

211 
˙t
=0; c¡<
siz
; cnt++) {

212 
ups
 = 
this
->
W‹kög_Ins
.
	`©
(
˙t
);

213 
Sum
+=
ups
->
	`GëFúe
();

215 
this
->
NextFúeVÆ
 = 
	`A˘Fun
(
Sum
);

216 
	`Exch™ge_Wôh_Fìd
();

218 
	}
}

220 
	$Exch™ge_Wôh_Fìd
() {

221 i‡(
this
->
MyTy≥
 =
IoTy≥
::
GlobÆIO
) {

222 
this
->
Jack
->
Upw¨dVÆue
 +this->
NextFúeVÆ
;

223 
this
->
FúeVÆ
 =Åhis->
Jack
->
	`GëVÆue
();

226 
this
->
FúeVÆ
 =Åhis->
NextFúeVÆ
;

228 
	}
}

230 
	$R™dom_In¸ó£
(
NodeVec
 *
Ÿhîs
, 
du≥quŸa
) {

231 
∫um
;

232 
UidTy≥
 
lid
, 
nid
;

233 
TempDex
 = 0;

234 
LDex
 = 0, 
NDex
 = 0;

235 
LSize
 = 
LGíome
.
	`size
();

236 
OSize
 = 
Ÿhîs
->
	`size
();

237 
NodePå
 
ndp
;

238 
LökPå
 
 k0
, 
 k1
;

239 
LökPå
 
ãmp
[
LSize
 + 
OSize
];

241 
LDex
 < 
LSize
 && 
NDex
 < 
OSize
) {

242 
 k0
 = 
LGíome
.
	`©
(
LDex
); 
lid
 =Ünk0->
USID
;

243 
ndp
 = 
Ÿhîs
->
	`©
(
NDex
); 
nid
 =Çdp->
S≥cõsId
;

244 i‡(
lid
 <
nid
) {

245 
ãmp
[
TempDex
] = 
 k0
; TempDex++;

246 
LDex
++;

247 i‡(
lid
 =
nid
Ë{
NDex
++;}

249 
∫um
 = 
	`‰™d
();

250 i‡(
∫um
 < 
du≥quŸa
) {

251 
 k1
 = 
Lök
::
	`Abiogí©e
();Ünk1->
USID
 = 
nid
;

252 
ãmp
[
TempDex
] = 
 k1
; TempDex++;

254 
NDex
++;

257 
LDex
 < 
LSize
) {

258 
ãmp
[
TempDex
] = 
LGíome
.
	`©
(
LDex
);

259 
LDex
++; 
TempDex
++;

261 
NDex
 < 
OSize
) {

262 
∫um
 = 
	`‰™d
();

263 i‡(
∫um
 < 
du≥quŸa
) {

264 
ndp
 = 
Ÿhîs
->
	`©
(
NDex
);

265 
 k1
 = 
Lök
::
	`Abiogí©e
();Ünk1->
USID
 = 
ndp
->
S≥cõsId
;

266 
ãmp
[
TempDex
] = 
 k1
; TempDex++;

268 
NDex
++;

270 
LGíome
.
	`ªsize
(
TempDex
);

271 
˙t
=0; c¡<
TempDex
; cnt++) {

272 
LGíome
.
	`©
(
˙t
Ë
ãmp
[cnt];

274 
	}
}

276 
boﬁ
 
	$Is_S‹ãd
() {

277 
UidTy≥
 
ID_¥ev
 = 0;

278 
LökPå
 
 p
;

279 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

280 
˙t
=0; c¡<
siz
; cnt++) {

281 
 p
 = 
this
->
LGíome
.
	`©
(
˙t
);

282 if(
ID_¥ev
>
 p
->
USID
) {

283  
Ál£
;

285 
ID_¥ev
=
 p
->
USID
;

287  
åue
;

288 
	}
}

290 
	$CÀ™_Me
() {

291 
n˙t
, 
siz
;

292 
LökPå
 
 p
;

293 
siz
 = 
this
->
LGíome
.
	`size
();

294 
KìpC¡
=0;

295 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

296 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

297 i‡(
 p
->
Disu£
 > 
Disu£Thªsh
) {

298 
	`bug¥ötf
("Disu£:%lu ",
 p
->
Disu£
);

300 i‡(
 p
->
Disu£
 >
Disu£Thªsh
) {

301 
dñëe
 
 p
;

303 
this
->
LGíome
.
	`©
(
KìpC¡
Ë
 p
;

304 
KìpC¡
++;

307 
this
->
LGíome
.
	`ªsize
(
KìpC¡
);

308 
	}
}

310 
	$CÀ™_Invít‹y
(
UidVec
 *
uvec
) {

311 
n˙t
, 
siz
, 
nsiz
;

312 
NDex
;

313 
LökPå
 
 p
;

314 
nsiz
 = 
uvec
->
	`size
();

315 
siz
 = 
this
->
LGíome
.
	`size
();

316 
KìpC¡
=0;

317 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

318 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

319 
NDex
 = 
	`TªeSórchUidLi°
(
uvec
, NDex, 
 p
->
USID
);

320 i‡(
NDex
 < 
uvec
->
	`size
(Ë&& (uvec->
	`©
(NDexË=
 p
->
USID
) ) {

321 
this
->
LGíome
.
	`©
(
KìpC¡
Ë
 p
;

322 
KìpC¡
++;

324 
dñëe
 
 p
;

327 
this
->
LGíome
.
	`ªsize
(
KìpC¡
);

328 
	}
}

330 
	$Muèã_Me
(
NodeVec
 *
Ÿhîs
) {

332 
n˙t
, 
siz
;

333 
∫um
, 
kûlquŸa
, 
du≥quŸa
, 
m⁄°îquŸa
, 
ªjackquŸa
;

334 
kûlquŸa
 = 0.0;

335 
du≥quŸa
 = 0.5;

336 
m⁄°îquŸa
 = 0.5;

337 
kûlquŸa
 = 
du≥quŸa
 = 
m⁄°îquŸa
 = 0.5;

338 
ªjackquŸa
 = 0.01;

340 
LökPå
 
 p
, 
du≥
;

341 
siz
 = 
this
->
LGíome
.
	`size
();

342 i‡(
åue
) {

343 
KìpC¡
=0;

344 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

345 
∫um
 = 
	`‰™d
();

346 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

347 i‡(
∫um
 < 
kûlquŸa
) {

348 
dñëe
 
 p
;

350 
this
->
LGíome
.
	`©
(
KìpC¡
Ë
 p
;

351 
KìpC¡
++;

354 
this
->
LGíome
.
	`ªsize
(
KìpC¡
);

355 
siz
 = 
KìpC¡
;

357 
	`R™dom_In¸ó£
(
Ÿhîs
, 
du≥quŸa
);

359 
this
->
	`S‹t_Löks
();

361 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

362 
∫um
 = 
	`‰™d
();

363 i‡(
∫um
 < 
m⁄°îquŸa
) {

364 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

365 
 p
->
	`Muèã_Weight
();

369 
∫um
 = 
	`‰™d
();

370 i‡(
∫um
 < 
ªjackquŸa
) {

371 
øndöt
 = 
	`ønd
()%
Num_IoTy≥s
;

373 
this
->
MyTy≥
=
°©ic_ˇ°
<
IoTy≥
::IoTy≥>(
øndöt
);

374 
this
->
IoS≥cõsId
 = 'a' + 
	`ønd
()%(1+
zì
-'a');

377 
	}
}

379 
boﬁ
 
	$As˚ndögLökUid
(
LökPå
 
b0
, LökPå 
b1
) {

380  (
b0
->
USID
 < 
b1
->USID);

381 
	}
}

383 
	$S‹t_Löks
() {

384 i‡(
Ál£
) {

385 if(!
	`Is_S‹ãd
()) {

386 
	`bug¥ötf
("LINKS NOT SORTED!!!");

387 
throw
 123;

390 
°d
::
	`s‹t
 (
this
->
LGíome
.
	`begö
(),Åhis->LGíome.
	`íd
(), 
As˚ndögLökUid
);

391 
	}
}

393 
	$Uncompûe_Me
() {

394 
LökPå
 
 p
;

395 
size_t
 
˙t
;

396 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

397 
this
->
W‹kög_Ins
.
	`˛ór
();

398 
this
->
W‹kög_Outs
.
	`˛ór
();

399 
˙t
=0; c¡<
siz
; cnt++) {

400 
 p
 = 
this
->
LGíome
.
	`©
(
˙t
);

401 
 p
->
	`CÀ¨
();

403 
	}
}

405 
	$Compûe_Me
(
NodeVec
 *
Ÿhîs
) {

406 
this
->
	`Uncompûe_Me
();

407 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

408 
NDex
;

409 
UidTy≥
 
NbrId
, 
NbrId_¥ev
;

410 
NodePå
 
nbr
;

411 
LökPå
 
 p
;

412 
NbrId_¥ev
 = 0;

413 
˙t
;

414 
NDex
 = 0;

415 
˙t
=0; c¡<
siz
; cnt++) {

416 
 p
 = 
this
->
LGíome
.
	`©
(
˙t
);

417 
 p
->
FúeVÆ
 = 0.0;

418 
NbrId
 = 
 p
->
USID
;

419 
NbrId_¥ev
=
NbrId
;

420 
NDex
 = 
	`TªeSórchNodeLi°
(
Ÿhîs
, NDex, 
NbrId
);

421 i‡(
NDex
 < 
Ÿhîs
->
	`size
(Ë&& ((
nbr
 = othîs->
	`©
(NDex))->
S≥cõsId
 =
NbrId
) ) {

422 
this
->
	`Aâach_US
(
nbr
, 
 p
);

424 
 p
->
USNode
 = 
NULL
;Ü≈->
DSNode
 = NULL;Ü≈->
Disu£
++;

427 
this
->
MyTy≥
) {

428 
IoTy≥
::
I¡ø
:

430 
IoTy≥
::
GlobÆIO
:

432 
IoTy≥
::
NbrIO
:

435 
	}
}

437 
	$Aâach_US
(
NodePå
 
Ÿhî
, 
LökPå
 
 p
) {

438 
this
->
W‹kög_Ins
.
	`push_back
(
 p
);

439 
Ÿhî
->
W‹kög_Outs
.
	`push_back
(
 p
);

440 
 p
->
USNode
 = 
Ÿhî
;Ü≈->
DSNode
 = 
this
;

441 
	}
}

443 
	$maöX
 () {

444 
°d
::
m≠
<,> 
mym≠
;

445 
°d
::
m≠
<,>::
ôî©‹
 
ôî
;

447 
mym≠
['a']=50;

448 
mym≠
['b']=100;

449 
mym≠
['c']=150;

450 
mym≠
['d']=200;

452 
ôî
=
mym≠
.
	`föd
('b');

453 
mym≠
.
	`îa£
 (
ôî
);

454 
mym≠
.
	`îa£
 (mym≠.
	`föd
('d'));

457 
°d
::
cout
 << "elements in mymap:" << '\n';

458 
°d
::
cout
 << "®=> " << 
mym≠
.
	`föd
('a')->
£c⁄d
 << '\n';

459 
°d
::
cout
 << "¯=> " << 
mym≠
.
	`föd
('c')->
£c⁄d
 << '\n';

462 
	}
}

464 
uöt32_t
 
	$TªeSórchUidLi°
(
UidVec
 *
NLi°
, 
uöt64_t
 
°¨çœ˚
, 
UidTy≥
 
èrgë
) {

465 
LoDex
, 
MedDex
, 
HiDex
;

466 
UidTy≥
 
MedNode
;

467 
LoDex
=
°¨çœ˚
; 
HiDex
=
NLi°
->
	`size
();

468 
LoDex
<
HiDex
) {

469 
MedDex
 = (
LoDex
+
HiDex
)/2;

470 
MedNode
 = 
NLi°
->
	`©
(
MedDex
);

471 i‡(
èrgë
 <
MedNode
Ë{ 
HiDex
 = 
MedDex
; }

472 { 
LoDex
 = 
MedDex
+1; }

474  
LoDex
;

475 
	}
}

477 
uöt32_t
 
	$TªeSórchNodeLi°
(
NodeVec
 *
NLi°
, 
uöt64_t
 
°¨çœ˚
, 
UidTy≥
 
èrgë
) {

478 
LoDex
, 
MedDex
, 
HiDex
;

479 
NodePå
 
MedNode
;

480 
LoDex
=
°¨çœ˚
; 
HiDex
=
NLi°
->
	`size
();

481 
LoDex
<
HiDex
) {

482 
MedDex
 = (
LoDex
+
HiDex
)/2;

483 
MedNode
 = 
NLi°
->
	`©
(
MedDex
);

484 i‡(
èrgë
 <
MedNode
->
S≥cõsId
Ë{ 
HiDex
 = 
MedDex
; }

485 { 
LoDex
 = 
MedDex
+1; }

487  
LoDex
;

488 
	}
}

490 
uöt32_t
 
	$TªeSórchLökLi°
(
LökVec
 *
LLi°
, 
uöt64_t
 
°¨çœ˚
, 
UidTy≥
 
èrgë
) {

491 
LoDex
, 
MedDex
, 
HiDex
;

492 
LökPå
 
MedLök
;

493 
LoDex
=
°¨çœ˚
; 
HiDex
=
LLi°
->
	`size
();

494 
LoDex
<
HiDex
) {

495 
MedDex
 = (
LoDex
+
HiDex
)/2;

496 
MedLök
 = 
LLi°
->
	`©
(
MedDex
);

497 i‡(
èrgë
 <
MedLök
->
USID
Ë{ 
HiDex
 = 
MedDex
; }

498 { 
LoDex
 = 
MedDex
+1; }

500  
LoDex
;

501 
	}
}

503 
	$Pröt_Me
() {

506 *
addªss
 = &
S≥cõsId
;

507 
	`bug¥ötf
(" NodêS≥cõsId:%li, MyTy≥:%li,Åhis:%p\n", 
this
->
S≥cõsId
,Åhis->
MyTy≥
, 
addªss
);

508 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

509 
	`bug¥ötf
("Çumlöks:%li\n", 
siz
);

510 
˙t
=0; c¡<
siz
; cnt++) {

511 
LökPå
 
 k
 = 
this
->
LGíome
.
	`©
(
˙t
);

512 
 k
->
	`Pröt_Me
();

514 
	}
}

519 #i‡
Ál£


	@/home/john/Documents/Projects/BrainFarm/Org.h

1 #i‚de‡
ORG_H_INCLUDED


2 
	#ORG_H_INCLUDED


	)

4 #i‡
Ál£


11 
	~"Ba£.h
"

12 
	~"FÀxøyC.h
"

13 
	~"Node.h
"

14 
	~"Fìd.h
"

16 
	#gíomñí
 1000

	)

17 
	#gíomñí2
 4

	)

18 
	#ba£amp
 
INT_MAX


	)

21 ˛as†
	cGíome
 {

22 
	mpublic
:

23 
˛ass
 
Org
 *
möe
;

25 c⁄° 
	gNodeNumLimô
 = 100;

27 
˛ass
 
	gOrg
;

28 
Org
 *
	tOrgPå
;

29 
	g°d
::
	tve˘‹
<
	tOrg
*> 
	tOrgVec
;

30 ˛as†
	cOrg
 {

31 
	mpublic
:

32 c⁄° 
NumSc‹es
 = 2;

33 
	mSc‹e
[
NumSc‹es
];

34 
Lug¨
 *
	mhome
;

35 
NodeVec
 
	mNGíe
;

36 
NodeVec
 *
	mNGíePå
;

37 
IoJackVec
 
	mGlobÆJackVec
;

39 
	$Org
() {

40 
NGíePå
 = &(
NGíe
);

41 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

42 
this
->
Sc‹e
[
˙t
] = 0.0;

44 
this
->
home
 = 
NULL
;

47 ~
	$Org
() {

48 
NodePå
 
ndp
;

49 
n˙t
=0;Ç˙t<
this
->
NGíe
.
	`size
();Çcnt++) {

50 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

51 
dñëe
 
ndp
;

53 
	`CÀ¨_IoNodes
();

54 
	}
}

56 
OrgPå
 
	$Abiogí©e
() {

57 
OrgPå
 
‹g
 = 
√w
 
	`Org
();

58 
‹g
->
	`Muèã_Me
(1.0);

59  
‹g
;

60 
	}
}

62 
	$Fúe_Cy˛e
() {

63 
NodePå
 
node
;

64 
size_t
 
siz
;

66 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

67 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

68 
this
->
GlobÆJackVec
.
	`©
(
n˙t
)->
Upw¨dVÆue
 = 0.0;

71 
siz
 = 
this
->
NGíe
.
	`size
();

72 
˙t
=0; c¡<
siz
; cnt++) {

73 
node
=
this
->
NGíe
.
	`©
(
˙t
);

74 
node
->
	`Push_Fúe
();

76 
˙t
=0; c¡<
siz
; cnt++) {

77 
node
=
this
->
NGíe
.
	`©
(
˙t
);

78 
node
->
	`CﬁÀ˘_And_Fúe
();

80 
	}
}

82 
	$R™d_Inô
() {

83 
this
->
	`Muèã_Me
(1.0);

84 
	}
}

86 
	$R™dom_In¸ó£
(
du≥quŸa
) {

87 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

88 
∫um
;

89 
NodePå
 
ndp
, 
du≥
;

90 i‡(
siz
==0) {

91 
this
->
NGíe
.
	`ªsize
(
gíomñí2
);

92 
n˙t
=0;Ç˙t<
gíomñí2
;Çcnt++) {

93 
du≥
 = 
Node
::
	`Abiogí©e
();

94 
this
->
NGíe
.
	`©
(
n˙t
Ë
du≥
;

96 
n˙t
=0;Ç˙t<
gíomñí2
;Çcnt++) {

97 
du≥
 = 
this
->
NGíe
.
	`©
(
n˙t
);

98 
du≥
->
	`R™dom_In¸ó£
(
this
->
NGíePå
, 1.0);

99 i‡(
du≥
->
LGíome
.
	`size
()>4) {

100 
boﬁ
 
n›
 = 
åue
;

105 
size_t
 
siz1
=
siz
;

106 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

107 
∫um
 = 
	`‰™d
();

108 i‡(
∫um
 < 
du≥quŸa
) {

110 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

111 
du≥
 = 
ndp
->
	`S∑wn
();

112 
du≥
->
S≥cõsId
 = 
IdMakî
::
	`MakeId
();

113 
this
->
NGíe
.
	`push_back
(
du≥
);

114 i‡(
this
->
NGíe
.
	`size
()>=
NodeNumLimô
) {;}

118 
	}
}

120 
	$Muèã_Me
(
MR©e
) {

122 
n˙t
, 
siz
;

123 
∫um
, 
kûlquŸa
, 
du≥quŸa
, 
m⁄°îquŸa
;

124 
kûlquŸa
 = 
du≥quŸa
 = 
m⁄°îquŸa
 = 0.5;

125 
kûlquŸa
 = 
du≥quŸa
 = 
m⁄°îquŸa
 = 
MR©e
;

126 
kûlquŸa
 = 0.5;

127 
du≥quŸa
 = 0.5;

128 
m⁄°îquŸa
 = 0.5;

129 
NodePå
 
ndp
, 
du≥
;

130 
KìpC¡
=0;

131 
siz
 = 
this
->
NGíe
.
	`size
();

135 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

136 
∫um
 = 
	`‰™d
();

137 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

138 i‡(
∫um
 < 
kûlquŸa
) {

139 
dñëe
 
ndp
;

141 
this
->
NGíe
.
	`©
(
KìpC¡
Ë
ndp
;

142 
KìpC¡
++;

145 
this
->
NGíe
.
	`ªsize
(
KìpC¡
);

146 
siz
 = 
KìpC¡
;

148 
	`R™dom_In¸ó£
(
du≥quŸa
);

149 
siz
 = 
this
->
NGíe
.
	`size
();

151 
	`S‹t_Nodes
();

154 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

155 
∫um
 = 
	`‰™d
();

156 i‡(
∫um
 < 
m⁄°îquŸa
) {

157 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

158 
ndp
->
	`Muèã_Me
(
NGíePå
);

162 
	}
}

164 
	$S‹t_Nodes
() {

165 
°d
::
	`s‹t
 (
NGíe
.
	`begö
(), NGíe.
	`íd
(), 
As˚ndögNodeUid
);

166 
	}
}

168 
OrgPå
 
	$S∑wn
() {

169 
OrgPå
 
chûd
;

170 
chûd
 = 
√w
 
	`Org
();

171 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

172 
NodePå
 
ndp
;

173 
chûd
->
NGíe
.
	`ªsize
(
siz
);

174 
˙t
=0; c¡<
siz
; cnt++) {

175 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

176 
ndp
 =Çdp->
	`S∑wn
();

177 
chûd
->
NGíe
.
	`©
(
˙t
Ë
ndp
;

179  
chûd
;

180 
	}
}

182 
boﬁ
 
	$As˚ndögNodeUid
(
NodePå
 
b0
, NodePå 
b1
) {

183  (
b0
->
S≥cõsId
 < 
b1
->SpeciesId);

184 
	}
}

186 
	$Uncompûe_Me
() {

187 
n˙t
, 
siz
;

188 
NodePå
 
ndp
;

189 
siz
 = 
this
->
NGíe
.
	`size
();

190 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

191 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

192 
ndp
->
	`Uncompûe_Me
();

194 
	}
}

196 
	$Compûe_Me
() {

197 
UidTy≥
 
ID_¥ev
;

198 
NodePå
 
ndp
;

199 if(
Ál£
) {

200 
°d
::
	`øndom_shufÊe
 ( 
NGíe
.
	`begö
(), NGíe.
	`íd
() );

201 
	`S‹t_Nodes
();

203 if(!
	`Is_S‹ãd
()) {

204 
	`bug¥ötf
("NODES NOT SORTED!!!");

205 
throw
 123;

207 i‡(
Ál£
) {

208 
	`Remove_Du∂iˇã_Nodes
();

210 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

211 
˙t
=0; c¡<
siz
; cnt++) {

212 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

213 
ndp
->
	`Compûe_Me
(
NGíePå
);

216 
	}
}

218 
	$CÀ¨_Sc‹e
() {

219 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

220 
this
->
Sc‹e
[
˙t
]=0.0;

222 
	}
}

224 
	$O√ify_Sc‹e
() {

225 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

226 
this
->
Sc‹e
[
˙t
]=1.0;

228 
	}
}

230 
	$ResˇÀ_Sc‹e
(
Fa˘‹
) {

231 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

232 
this
->
Sc‹e
[
˙t
]*=
Fa˘‹
;

234 
	}
}

237 
	$CÆcuœã_Sc‹e
() {

238 
NodePå
 
node
;

239 
Ról
, 
Gues£d
, 
Temp0
, 
Temp1
, 
SumSc‹e0
, 
SumSc‹e1
;

240 
IoJackPå
 
Jack
;

241 
size_t
 
siz
;

242 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

243 
SumSc‹e0
 = 1.0; 
SumSc‹e1
 = 0.0;

244 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

245 
Jack
 = 
this
->
GlobÆJackVec
.
	`©
(
n˙t
);

246 
Gues£d
 = 
Jack
->
Upw¨dVÆue
;

247 
Ról
 = 
Jack
->
	`GëVÆue
();

248 
Temp0
 = (2.0-
	`Ábs
(
Ról
-
Gues£d
))/2.0;

249 
Temp0
+=1.0;

250 
Temp1
 = 
	`m©h_sgn
(
Gues£d
)*m©h_sgn(
Ról
);

251 i‡(
	`Ábs
(
Temp1
)<
Fudge
) {

252 
boﬁ
 
n›
 = 
åue
;

254 
SumSc‹e0
 *
Temp0
;

255 
SumSc‹e1
 +
Temp1
;

257 
this
->
Sc‹e
[0] +
SumSc‹e0
;

258 
this
->
Sc‹e
[1] +
SumSc‹e1
;

259 
boﬁ
 
n›
 = 
åue
;

260 
	}
}

263 
	$CÆcuœã_Sc‹e
() {

264 
NodePå
 
node
;

265 
Ról
, 
Gues£d
, 
Temp0
, 
Temp1
, 
SumSc‹e0
, 
SumSc‹e1
;

266 
IoJackPå
 
Jack
;

267 
size_t
 
siz
;

268 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

269 
SumSc‹e0
 = 0.0; 
SumSc‹e1
 = 0.0;

270 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

271 
Jack
 = 
this
->
GlobÆJackVec
.
	`©
(
n˙t
);

272 
Gues£d
 = 
Jack
->
Upw¨dVÆue
;

273 
Ról
 = 
Jack
->
	`GëVÆue
();

274 
Temp0
 = 
	`m©h_sgn
(
Gues£d
)*m©h_sgn(
Ról
);

275 
Temp1
 = 
Gues£d
*
Ról
;

276 i‡(
	`Ábs
(
Temp1
)<
Fudge
) {

277 
boﬁ
 
n›
 = 
åue
;

279 
SumSc‹e0
 +
Temp0
;

280 
SumSc‹e1
 +
Temp1
;

282 
this
->
Sc‹e
[0] +
SumSc‹e0
;

283 
this
->
Sc‹e
[1] +
SumSc‹e1
;

284 
boﬁ
 
n›
 = 
åue
;

285 
	}
}

288 
	$Upd©e_From_Fìd
() {

289 
IoJackPå
 
LoˇlJack
;

290 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

291 
˙t
=0; c¡<
siz
; cnt++) {

292 
LoˇlJack
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

308 
	}
}

310 
	$G©hî_IoNodes
() {

311 
FR
::
FÀxøy
<
IoJack
> 
‰ay
;

312 
IoDexTy≥
 
IoS≥cõsId
;

313 
IoJackPå
 
jack
;

314 
NodePå
 
ndp
;

315 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

316 
˙t
=0; c¡<
siz
; cnt++) {

317 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

318 
ndp
->
MyTy≥
) {

319 
IoTy≥
::
I¡ø
:

320 
ndp
->
Jack
 = 
NULL
;

322 
IoTy≥
::
GlobÆIO
:

323 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

324 i‡((
jack
 = 
‰ay
.
	`Lookup
(
IoS≥cõsId
))==
NULL
) {

325 
jack
 = 
√w
 
	`IoJack
(); jack->
P‹tId
 = 
ndp
->
IoS≥cõsId
;

326 
‰ay
.
	`In£π
(
IoS≥cõsId
, 
jack
); 
GlobÆJackVec
.
	`push_back
(jack);

328 
ndp
->
Jack
 = 
jack
->
	`AddRef
();

330 
IoTy≥
::
NbrIO
:

331 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

336 
	}
}

338 
	$Swìp_Jacks_CÆlback
(
IoJack
 *
jack
) {

339 if(
jack
->
Dïªˇãd
Ë{ 
dñëe
 jack; }

340 
	}
}

342 
	$CÀ¨_IoNodes
() {

343 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

344 
˙t
=0; c¡<
siz
; cnt++) {

345 
dñëe
 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

347 
this
->
GlobÆJackVec
.
	`˛ór
();

348 
	}
}

350 
	$G©hî_IoNodes_And_C⁄√˘
(
FìdPå
 
food
) {

351 
FR
::
FÀxøy
<
IoJack
> 
‰ay
;

352 
size_t
 
p‹tsiz
 = 
food
->
	`size
();

353 
IoDexTy≥
 
IoS≥cõsId
;

354 
IoJackPå
 
LoˇlJack
;

355 
GlobÆIoJackPå
 
GlobÆJack
;

356 
uöt32_t
 
föddex
;

357 
NodePå
 
ndp
;

358 
	`CÀ¨_IoNodes
();

359 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

360 
˙t
=0; c¡<
siz
; cnt++) {

361 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

362 
ndp
->
MyTy≥
) {

363 
IoTy≥
::
I¡ø
:

364 
ndp
->
Jack
 = 
NULL
;

366 
IoTy≥
::
GlobÆIO
:

367 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

368 i‡((
LoˇlJack
 = 
‰ay
.
	`Lookup
(
IoS≥cõsId
))==
NULL
) {

369 
LoˇlJack
 = 
√w
 
	`IoJack
();

370 
‰ay
.
	`In£π
(
IoS≥cõsId
, 
LoˇlJack
);

372 
LoˇlJack
->
P‹tId
 = 
IoS≥cõsId
;

373 
föddex
 = 
food
->
	`TªeSórchP‹ts
(0, 
IoS≥cõsId
);

374 i‡(
föddex
<
p‹tsiz
 && (
GlobÆJack
=
food
->
P‹ts
.
	`©
(föddex))->
P‹tId
 =
IoS≥cõsId
) {

375 
LoˇlJack
->
UpSåóm
 = 
GlobÆJack
->
	`AddRef
();

376 
GlobÆJackVec
.
	`push_back
(
LoˇlJack
);

378 
LoˇlJack
->
Dïªˇãd
 = 
åue
;

382 i‡(
LoˇlJack
->
Dïªˇãd
) {

383 
ndp
->
MyTy≥
 = 
IoTy≥
::
I¡ø
;

385 
ndp
->
Jack
 = 
LoˇlJack
->
	`AddRef
();

388 
IoTy≥
::
NbrIO
:

389 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

398 
uöt32_t
 
∑ck˙t
 = 0;

399 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

400 
˙t
=0; c¡<
siz
; cnt++) {

401 
LoˇlJack
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

402 if(
LoˇlJack
->
Dïªˇãd
Ë{ 
dñëe
 LocalJack; }

404 
this
->
GlobÆJackVec
.
	`©
(
∑ck˙t
Ë
LoˇlJack
;

405 
∑ck˙t
++;

408 
this
->
GlobÆJackVec
.
	`ªsize
(
∑ck˙t
);

409 
	}
}

411 
	$C⁄√˘_Jacks
(
FìdPå
 
food
) {

412 
FR
::
FÀxøy
<
IoJack
> 
‰ay
;

413 
size_t
 
p‹tsiz
 = 
food
->
	`size
();

414 
IoDexTy≥
 
P‹tId
;

415 
IoJackPå
 
LoˇlJack
;

416 
GlobÆIoJackPå
 
GlobÆJack
;

417 
uöt32_t
 
föddex
;

418 
uöt32_t
 
∑ck˙t
 = 0;

419 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

420 
˙t
=0; c¡<
siz
; cnt++) {

421 
LoˇlJack
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

422 
P‹tId
 = 
LoˇlJack
->PortId;

423 
föddex
 = 
food
->
	`TªeSórchP‹ts
(0, 
P‹tId
);

424 i‡(
Ál£
) {

425 i‡(
föddex
<
p‹tsiz
) {

426 
GlobÆJack
=
food
->
P‹ts
.
	`©
(
föddex
);

427 i‡(
GlobÆJack
->
P‹tId
 == PortId) {

428 
LoˇlJack
->
UpSåóm
 = 
GlobÆJack
->
	`AddRef
();

429 
this
->
GlobÆJackVec
.
	`©
(
∑ck˙t
Ë
LoˇlJack
;

430 
∑ck˙t
++;

434 i‡(
föddex
<
p‹tsiz
 && (
GlobÆJack
=
food
->
P‹ts
.
	`©
(föddex))->
P‹tId
 == PortId) {

435 
LoˇlJack
->
UpSåóm
 = 
GlobÆJack
->
	`AddRef
();

436 
this
->
GlobÆJackVec
.
	`©
(
∑ck˙t
Ë
LoˇlJack
;

437 
∑ck˙t
++;

439 
LoˇlJack
->
Dïªˇãd
 = 
åue
;

443 
this
->
GlobÆJackVec
.
	`ªsize
(
∑ck˙t
);

444 
	}
}

446 
	$Remove_Du∂iˇã_Nodes
() {

447 
UidTy≥
 
ID_¥ev
;

448 
NodePå
 
ndp
;

449 
°d
::
	`øndom_shufÊe
 ( 
NGíe
.
	`begö
(), NGíe.
	`íd
() );

450 
	`S‹t_Nodes
();

451 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

452 
UniqueC¡
=0;

453 
ID_¥ev
 = 
UidNuŒ
;

454 
˙t
=0; c¡<
siz
; cnt++) {

455 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

456 i‡(
ndp
->
S≥cõsId
 !
ID_¥ev
) {

457 
this
->
NGíe
.
	`©
(
UniqueC¡
Ë
ndp
;

458 
ID_¥ev
 = 
ndp
->
S≥cõsId
;

459 
UniqueC¡
++;

461 
dñëe
 
ndp
;

464 
this
->
NGíe
.
	`ªsize
(
UniqueC¡
);

465 
	}
}

467 
boﬁ
 
	$Is_S‹ãd
() {

468 
UidTy≥
 
ID_¥ev
 = 0;

469 
NodePå
 
ndp
;

470 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

471 
˙t
=0; c¡<
siz
; cnt++) {

472 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

473 if(
ID_¥ev
>
ndp
->
S≥cõsId
) {

474  
Ál£
;

476 
ID_¥ev
=
ndp
->
S≥cõsId
;

478  
åue
;

479 
	}
}

481 
	$CÀ™_Me
() {

482 
NodePå
 
ndp
;

483 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

484 
˙t
=0; c¡<
siz
; cnt++) {

485 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

486 
ndp
->
	`CÀ™_Me
();

488 
	}
}

490 
	$CÀ™_Invít‹y
(
UidVec
 *
uvec
) {

491 
NodePå
 
ndp
;

492 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

493 
˙t
=0; c¡<
siz
; cnt++) {

494 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

495 
ndp
->
	`CÀ™_Invít‹y
(
uvec
);

497 
	}
}

499 
	$Invít‹y
(
UidVec
 *
uvec
) {

500 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

501 
˙t
=0; c¡<
siz
; cnt++) {

502 
NodePå
 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

503 
uvec
->
	`push_back
(
ndp
->
S≥cõsId
);

505 
	}
}

507 
	$Pröt_Me
() {

508 
NodePå
 
ndp
;

509 
	`bug¥ötf
("Org\n");

510 
	`Pröt_Sc‹e
();

511 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

512 
	`bug¥ötf
("numÇodes:%li\n", 
siz
);

513 
˙t
=0; c¡<
siz
; cnt++) {

514 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

515 
	`bug¥ötf
(" Nodêaddr:%p\n", 
ndp
);

516 
ndp
->
	`Pröt_Me
();

518 
	}
}

520 
	$Pröt_Jacks
() {

521 
IoJackPå
 
jckp
;

522 
ch
;

523 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

524 
˙t
=0; c¡<
siz
; cnt++) {

525 
jckp
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

526 
ch
 = 
jckp
->
P‹tId
;

527 
	`bug¥ötf
("%c, ", 
ch
);

529 
	}
}

531 
	$Pröt_Sc‹e
() {

532 
	`bug¥ötf
(" Sc‹e:%f, %f\n", 
this
->
Sc‹e
[0],Åhis->Score[1]);

533 
	}
}

535 
	$Com∑ª_Sc‹e
(
OrgPå
 
Ÿhî
) {

536 
˙t
 = 0;

537 *
Sc‹eMe
, *
Sc‹eYou
;

538 
Sc‹eMe
=
this
->
Sc‹e
; 
Sc‹eYou
=
Ÿhî
->Score;

539 
˙t
<
NumSc‹es
) {

540 i‡(
Sc‹eMe
[
˙t
]<
Sc‹eYou
[cnt]) { 1;}

541 i‡(
Sc‹eMe
[
˙t
]>
Sc‹eYou
[cnt]) { -1;}

542 
˙t
++;

545 
	}
}

546 #i‡
Ál£


548 
	$Invít‹y
(
UidM≠
 *
um≠
) {

549 
UidM≠
 
um≠2
;

550 
°d
::
∑ú
<°d::
m≠
<
UidTy≥
,UidTy≥>::
ôî©‹
,
boﬁ
> 
ªt
;

551 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

553 
˙t
=0; c¡<
siz
; cnt++) {

554 
NodePå
 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

556 i‡(
ªt
.
£c⁄d
==
Ál£
) {

557 
°d
::
cout
 << "element 'z'álreadyÉxisted";

560 
um≠2
[
ndp
->
S≥cõsId
] =Çdp->SpeciesId;

562 
	}
}

	@/home/john/Documents/Projects/BrainFarm/Pop.h

1 #i‚de‡
POP_H_INCLUDED


2 
	#POP_H_INCLUDED


	)

4 
	~"Org.h
"

5 
	~"Lug¨.h
"

8 
	#p›max
 300

	)

13 
˛ass
 
	gP›
;

14 
P›
 *
	tP›På
;

15 ˛as†
	cP›
 {

16 
	mpublic
:

17 
size_t
 
p›sz
;

18 
Lug¨Vec
 
	mf‹e°v
;

19 
OrgVec
 
	mSc‹eDexv
;

20 
	sSc‹ePaú
 { 
	mSc‹e
[2]; };

21 
	g°d
::
ve˘‹
<
Sc‹ePaú
> 
Sc‹eBuf
;

22 
uöt32_t
 
	gMaxNeuroGís
 = 2000;

23 
	gSurvivÆR©e
 = 0.5;

24 
FìdPå
 
	gGlobÆFìd
;

26 
	$P›
(Ë: 
	$P›
(
p›max
) {

27 
	}
}

29 
	$P›
(
size_t
 
p›size
) {

30 
Lug¨På
 
lug¨
;

31 
Org
 *
‹g
;

32 
size_t
 
p˙t
;

33 
this
->
p›sz
 = 
p›size
;

34 
f‹e°v
.
	`ªsize
(
p›size
);

35 
Sc‹eDexv
.
	`ªsize
(
p›size
);

36 
Sc‹eBuf
.
	`ªsize
(
p›size
);

37 
p˙t
=0;Ö˙t<
p›size
;Öcnt++) {

38 
lug¨
 = 
√w
 
	`Lug¨
();

39 
‹g
 = 
Org
::
	`Abiogí©e
(); 
lug¨
->
	`Aâach_Tí™t
(org);

40 
f‹e°v
.
	`©
(
p˙t
Ë
lug¨
;

41 
Sc‹eDexv
.
	`©
(
p˙t
Ë
‹g
;

43 
	}
}

45 ~
	$P›
() {

46 
size_t
 
siz
, 
p˙t
;

47 
siz
 = 
f‹e°v
.
	`size
();

48 
p˙t
=0;Ö˙t<
siz
;Öcnt++) {

49 
dñëe
 
f‹e°v
.
	`©
(
p˙t
);

51 
	}
}

53 
	$Aâach_GlobÆ_Fìd
(
FìdPå
 
Food
) {

54 
this
->
GlobÆFìd
 = 
Food
;

55 
	}
}

57 
	$Fúe_Cy˛e
() {

58 
Lug¨På
 
lug¨
;

59 
OrgPå
 
‹g
;

60 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

61 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

62 
lug¨
=
this
->
f‹e°v
.
	`©
(
˙t
);

63 
‹g
=
lug¨
->
ã«¡
;

64 
‹g
->
	`Fúe_Cy˛e
();

66 
	}
}

68 
	$CÀ¨_Sc‹es
() {

69 
OrgPå
 
‹g
;

70 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
();

71 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

72 
‹g
=
this
->
Sc‹eDexv
.
	`©
(
˙t
);

73 
‹g
->
	`CÀ¨_Sc‹e
();

75 
	}
}

77 
	$CÆcuœã_Sc‹es
() {

78 
OrgPå
 
‹g
;

79 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
();

80 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

81 
‹g
=
this
->
Sc‹eDexv
.
	`©
(
˙t
);

82 
‹g
->
	`CÆcuœã_Sc‹e
();

84 
	}
}

86 
	$Gí
() {

87 
uöt32_t
 
p›size
 = 
this
->
f‹e°v
.
	`size
();

88 
Fúe_Te°_Cy˛es
 = 50;

90 
Te°_Lí
 = 10;

91 
Sèπ_Te°ög
 = 
Fúe_Te°_Cy˛es
-
Te°_Lí
;

93 
Lug¨På
 
lug¨
;

94 
Org
 *
∑ª¡
, *
chûd
;

95 
uöt32_t
 
p˙t
;

96 
Lug¨På
 
∂a˚
;

98 
RTîm
 = 
	`ønd
()%7;

99 
f˙t
=0; f˙t<
RTîm
; fcnt++) {

100 
this
->
GlobÆFìd
->
	`NextGí
();

102 
	`CÀ¨_Sc‹es
();

103 
f˙t
=0; f˙t<
Fúe_Te°_Cy˛es
; fcnt++) {

104 
this
->
GlobÆFìd
->
	`NextGí
();

105 
this
->
	`Fúe_Cy˛e
();

106 i‡(
Sèπ_Te°ög
 <
f˙t
){

107 
this
->
	`CÆcuœã_Sc‹es
();

115 
	`S‹t
();

116 
	`Rec‹d_Sc‹es
();

117 
OrgPå
 
be°bó°
 = 
Sc‹eDexv
[0];

118 
OrgPå
 
Àa°bó°
 = 
Sc‹eDexv
[
this
->
p›sz
-2];

120 
	`Búth_And_Dóth
(
SurvivÆR©e
);

121 
	}
}

123 
	$AvgBó°Sc‹e
(
T›Pî˚¡
) {

124 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

125 
size_t
 
Limô
 = (
T›Pî˚¡
*()
siz
);

126 
sum
 = 0.0;

128 
˙t
=0; c¡<
Limô
; cnt++) {

130 
sum
 +
Sc‹eDexv
[
˙t
]->
Sc‹e
[1];

133 
sum
 /()
Limô
;

134  
sum
;

135 
	}
}

137 
uöt32_t
 
	$GëMaxSize
() {

138 
uöt32_t
 
MaxSize
=0, 
SumSize
=0, 
AvgSize
=0;

139 
uöt32_t
 
p›size
 = 
this
->
f‹e°v
.
	`size
();

140 
uöt32_t
 
numnodes
;

141 
Lug¨På
 
lug¨
;

142 
OrgPå
 
‹g
;

143 
uöt32_t
 
p˙t
;

144 
Lug¨På
 
∂a˚
;

145 
p˙t
=0;Ö˙t<
p›size
;Öcnt++) {

146 
lug¨
 = 
f‹e°v
[
p˙t
];

147 
‹g
 = 
lug¨
->
ã«¡
;

148 
numnodes
=
‹g
->
NGíe
.
	`size
();

149 i‡(
MaxSize
<
numnodes
) {

150 
MaxSize

numnodes
;

152 
SumSize
 +
numnodes
;

154  
MaxSize
;

155 
	}
}

157 
boﬁ
 
	$As˚ndögSc‹e
(
OrgPå
 
b0
, OrgPå 
b1
) {

158  
b0
->
	`Com∑ª_Sc‹e
(
b1
) > 0;

159 
	}
}

160 
boﬁ
 
	$Des˚ndögSc‹e
(
OrgPå
 
b0
, OrgPå 
b1
) {

161  
b1
->
	`Com∑ª_Sc‹e
(
b0
) > 0;

162 
	}
}

163 
	$S‹t
() {

164 
°d
::
	`øndom_shufÊe
(
Sc‹eDexv
.
	`begö
(), Sc‹eDexv.
	`íd
());

165 
°d
::
	`s‹t
 (
Sc‹eDexv
.
	`begö
(), Sc‹eDexv.
	`íd
(), 
Des˚ndögSc‹e
);

166 
	}
}

168 
	$Búth_And_Dóth
(
SurvivÆR©e
) {

169 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

170 
size_t
 
NumSurviv‹s
 = 
siz
 * 
SurvivÆR©e
;

171 
size_t
 
t›˙t
, 
˙t
;

172 
Lug¨På
 
home
;

173 
OrgPå
 
doomed
, 
∑ª¡
, 
chûd
;

174 
t›˙t
 = 0;

175 
˙t
=
NumSurviv‹s
; c¡<
siz
; cnt++) {

176 
doomed
 = 
Sc‹eDexv
[
˙t
]; 
home
 = doomed->home;

177 
∑ª¡
 = 
Sc‹eDexv
[
t›˙t
];

178 
chûd
 = 
∑ª¡
->
	`S∑wn
();

179 
home
->
	`Aâach_Tí™t
(
chûd
); 
Sc‹eDexv
[
˙t
] = child;

180 
dñëe
 
doomed
;

181 
t›˙t
++;

182 i‡(
t›˙t
>=
NumSurviv‹s
) {topcnt=0;}

184 
	}
}

186 
	$Rec‹d_Sc‹es
() {

187 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

188 *
De°
, *
Src
;

189 
˙t
=0; c¡<
siz
; cnt++) {

190 
Src
 = 
Sc‹eDexv
[
˙t
]->
Sc‹e
;

191 
De°
 = 
Sc‹eBuf
.
	`©
(
˙t
).
Sc‹e
;

192 
De°
[0] = 
Src
[0];

193 
De°
[1] = 
Src
[1];

195 
	}
}

197 
	$Pröt_S‹ãd_Sc‹es
() {

198 *
Sc‹e
;

199 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

200 
size_t
 
˙t
;

201 
˙t
=0; c¡<
siz
; cnt++) {

202 
Sc‹e
 = 
Sc‹eBuf
.
	`©
(
˙t
).Score;

203 
	`bug¥ötf
(" %03li, Sc‹e:%f, %f\n", 
˙t
, 
Sc‹e
[0], Score[1]);

204 i‡(
Sc‹e
[0]!=0.0) {

205 
boﬁ
 
n›
 = 
åue
;

208 
	}
}

210 
	$Muèã
(
P›_MR©e
, 
Org_MR©e
) {

211 
OrgPå
 
‹g
;

212 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
();

213 
size_t
 
Num2Muèã
 = (
P›_MR©e
 * ()
siz
);

214 
size_t
 
Fú°Org
, 
La°Org
;

215 
Fú°Org
 = 
siz
-2;

216 
La°Org
 = 
siz
-
Num2Muèã
;

217 
˙t
=
Fú°Org
; c¡>=
La°Org
; cnt--) {

218 
‹g
 = 
this
->
Sc‹eDexv
[
˙t
];

219 
‹g
->
	`Muèã_Me
(
Org_MR©e
);

221 
‹g
 = 
this
->
Sc‹eDexv
[
Fú°Org
];

222 
‹g
->
	`R™d_Inô
();

223 
	}
}

225 
	$Muèã2
(
P›_MR©e
, 
Org_MR©e
) {

226 
OrgPå
 
‹g
;

227 
size_t
 
Fú°Org
, 
La°Org
;

228 
Fú°Org
 = 10;

229 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
(); 
La°Org
 = siz-1;

230 
˙t
=
Fú°Org
; c¡<
La°Org
; cnt++) {

231 i‡(
	`‰™d
()<
P›_MR©e
) {

232 
‹g
 = 
this
->
Sc‹eDexv
[
˙t
];

233 
‹g
->
	`Muèã_Me
(
Org_MR©e
);

236 
‹g
 = 
this
->
Sc‹eDexv
[
La°Org
];

237 
‹g
->
	`R™d_Inô
();

238 
	}
}

239 #i‡
Ál£


240 
	gbøöÁrm
, 
we
 
ªÆly
 
√ed
 
good
 
	gmërics
.

241 
suc˚ss
 
is
 
dëîmöed
 
by
 
beög
 
digôÆly
 
˛o£
 
to
 
™swî
 
wôhö
 
X
 
limô
 
Y
 
time
 (
∂©óu
Ë- 
thí
 
	gquô
.

242 
but
 
óch
 
	gquô
, 
∂ay
 
game
 
ovî
 
agaö
 
‰om
 
	gs¸©ch
, 
gë
 
Z
 
åüls
 
™d
 
avg
 
	gthem
. (
maybe
 
ª≥©
 
u¡û
ávg 
is
 
	g°abÀ
.)

244 
Æso
 
™Æog
 
	g˛o£
?

246 
VERY
 
time
 
	gc⁄sumög
. 
wh©
 
∑ømëîs
 
¨e
 
mo°
 
	gimp‹è¡
?

247 
°¨t
 
wôh
 
ósy
 
	ggﬂls
, 2 
	g‹
 3 
©
 
fú°


249 
ømp
 
muèti⁄
 
p›
 
øã0
 
is
 
ovîÆl
 
avîage
 
øã


250 
	gøã2
 = 
øã0
*2;

251 
˙t
 = 0 
to
 
siz
){

252 
øã
 = ((()
˙t
Ë/ ()
siz
)*
øã2
;

253 i‡(
ønd
<
øã
){

255 
	}
}

256 
w‹ks
 
u¡û
 
øã
 
is
 
	govî
 0.5

258 
	gOR
, 
ju°
 dÿ
the
 
sﬁid
 
X
 
≥r˚¡
 
of
Åhê
	gp›
, 
°¨tög
 
©
 
	gbŸtom
. 
no
 
øndom
 
about
 
	gô
.

262 
	$C⁄√˘_Jacks
(
FìdPå
 
food
) {

263 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

264 
˙t
=0; c¡<
siz
; cnt++) {

265 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

266 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

267 
‹g
->
	`C⁄√˘_Jacks
(
food
);

269 
	}
}

271 
	$G©hî_IoNodes_And_C⁄√˘
(
FìdPå
 
food
) {

272 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

273 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

274 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

275 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

276 
‹g
->
	`G©hî_IoNodes_And_C⁄√˘
(
food
);

278 
	}
}

280 
	$Compûe_Me
() {

281 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

282 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

283 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

284 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

285 
‹g
->
	`Compûe_Me
();

287 
	}
}

289 
	$CÀ™_Me
() {

290 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

291 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

292 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

293 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

294 
‹g
->
	`CÀ™_Me
();

296 
	}
}

298 
	$CÀ™_Invít‹y
() {

299 
UidVec
 
uvec
;

300 
this
->
	`Invít‹y
(&
uvec
);

301 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

302 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

303 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

304 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

305 
‹g
->
	`CÀ™_Invít‹y
(&
uvec
);

307 
	}
}

309 
boﬁ
 
	$As˚ndögUid
(
UidTy≥
 
b0
, UidTy≥ 
b1
) {

310  (
b0
 < 
b1
);

311 
	}
}

313 
	$Invít‹y
(
UidVec
 *
uvec
) {

314 
UidTy≥
 
ndp
, 
ID_¥ev
;

315 
uvec
->
	`˛ór
();

316 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

317 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

318 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

319 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

320 
‹g
->
	`Invít‹y
(
uvec
);

322 
°d
::
	`s‹t
 (
uvec
->
	`begö
(), uvec->
	`íd
(), 
As˚ndögUid
);

323 
size_t
 
UniqueC¡
=0;

324 
ID_¥ev
 = 
UidNuŒ
;

325 
size_t
 
˙t
=0; c¡<
uvec
->
	`size
(); cnt++) {

326 
ndp
 = 
uvec
->
	`©
(
˙t
);

327 i‡(
ndp
 !
ID_¥ev
) {

328 
uvec
->
	`©
(
UniqueC¡
Ë
ndp
;

329 
ID_¥ev
 = 
ndp
;

330 
UniqueC¡
++;

333 
uvec
->
	`ªsize
(
UniqueC¡
);

334 
siz
 = 
UniqueC¡
;

335 
	}
}

	@/home/john/Documents/Projects/BrainFarm/flexray.c

32 
	~<°dlib.h
>

33 
	~<°dio.h
>

34 
	~<m©h.h
>

35 
	~<time.h
>

36 
	~"Êexøy.h
"

38 
	#ã°Êex
 0

	)

40 
	#highroŸ
 1

	)

42 
	#ã°size
 1000

	)

46 
	#bôwdçow
 0x2

	)

49 
	#bôwdt
 (1<<
bôwdçow
)

	)

52 
	#bôønge
 (1<<
bôwdt
)

	)

55 
	#mask4
 (~(~(
uöt32
)0<<
bôwdt
))

56 

	)

58 
	#max_°øè
 ((
uöt32
Ë* (8>>
bôwdçow
))

	)

59 
	#œ°_°øè
 (
max_°øè
-1)

	)

64 #i‡
highroŸ


67 
	#keyof
(
key
,
˙t
Ë–(key>>((
œ°_°øè
-˙t)<<
bôwdçow
)Ë& 
mask4
 )

	)

70 
	#keyof
(
key
,
˙t
Ë–(key>>(˙t<<
bôwdçow
)Ë& 
mask4
 )

	)

73 
uöt32
 
	gøm˙t
=0,
	gÀa‰am˙t
=0;

75 
	$Êexøy_Àaf_‰ì
(*
Àaf
)

79 
	`‰ì
(
Àaf
);

80 
	}
}

82 
	$Êex_ã°
(){

83 
	}
}

85 
boﬁ
 
	$Êexøy_ö£π
(
ÊexñT
 *
t›node
,
uöt32
 
key
,
ÀafT
 *
√wÀaf
)

91 
ÊexñT
 
ãm±›
={0,
NULL
};

92 
ÊexñT
 *
up˚Œ
=&
ãm±›
;

93 
ÊexñT
 *
hód˚Œ
=
t›node
;

94 
uöt32
 
˙t
,
tkey
;

95 
boﬁ
 
ªtvÆ
=
Ál£
;

97 
ãm±›
.
down
.
√xt
=
t›node
;Åem±›.
num_chûdªn
=0;

99 
˙t
=0;˙t<
max_°øè
;cnt++){

102 i‡(
hód˚Œ
->
down
.
√xt
==
NULL
){

103 
hód˚Œ
->
down
.
√xt
=
	`ˇŒoc
(
bôønge
,(
ÊexñT
));

104 
	`mem£t
(
hód˚Œ
->
down
.
√xt
,0,
bôønge
*(
ÊexñT
));

105 
up˚Œ
->
num_chûdªn
++;

106 #i‡
bôwdçow
==0

107 
øm˙t
+=
bôønge
*(
ÊexñT
)-((
uöt8
)*bitrange);

109 
øm˙t
+=
bôønge
*(
ÊexñT
);

112 
tkey
=
	`keyof
(
key
,
˙t
);

116 
up˚Œ
=
hód˚Œ
;

119 
hód˚Œ
=&(hód˚Œ->
down
.
√xt
[
tkey
]);

122 i‡(
hód˚Œ
->
down
.
Àaf
==
NULL
){

123 
up˚Œ
->
num_chûdªn
++;

124 
hód˚Œ
->
down
.
Àaf
=
√wÀaf
;

125 
Àa‰am˙t
+=(
ÀafT
);

126 
ªtvÆ
=
åue
;

128 
ªtvÆ
=
Ál£
;

130 (
ªtvÆ
);

131 
	}
}

133 
	$Êexøy_ªcur£_de°roy
(
ÊexñT
 *
node
,
dïth
,
Êexøy_ÀafkûlT
 *
Àafkûl
)

138 
uöt32
 
˙t
;

140 
dïth
++;

141 i‡(
dïth
<
max_°øè
){

143 
˙t
=0;˙t<
bôønge
;cnt++){

145 i‡(
node
[
˙t
].
down
.
√xt
!=
NULL
){

146 
	`Êexøy_ªcur£_de°roy
(
node
[
˙t
].
down
.
√xt
,
dïth
,
Àafkûl
);

147 
node
[
˙t
].
down
.
√xt
=
NULL
;

152 
˙t
=0;˙t<
bôønge
;cnt++){

154 i‡(
node
[
˙t
].
down
.
Àaf
!=
NULL
){

155 i‡(
Àafkûl
!=
NULL
Ë
	`Àafkûl
(
node
[
˙t
].
down
.
Àaf
);

156 
node
[
˙t
].
down
.
Àaf
=
NULL
;

160 
	`‰ì
(
node
);Çode=
NULL
;

161 
	}
}

162 
	$Êexøy_de°roy
(
ÊexñT
 *
t›node
,
Êexøy_ÀafkûlT
 *
Àafkûl
)

168 i‡(
t›node
->
num_chûdªn
>0){

169 
	`Êexøy_ªcur£_de°roy
(
t›node
->
down
.
√xt
,0,
Àafkûl
);

170 
t›node
->
down
.
√xt
=
NULL
;Å›node->
num_chûdªn
=0;

172 
	}
}

175 
ÀafT
 *
	$Êexøy_lookup
(
ÊexñT
 *
t›node
,
uöt32
 
key
)

181 
ÊexñT
 
ãm±›
={0,
NULL
},*
hód˚Œ
=&temptop;

182 
uöt32
 
˙t
,
tkey
;

184 
hód˚Œ
=
t›node
;

185 
˙t
=0;

186 
˙t
<
max_°øè
 && 
hód˚Œ
->
down
.
√xt
!=
NULL
){

187 
tkey
=
	`keyof
(
key
,
˙t
);

189 
hód˚Œ
=&(hód˚Œ->
down
.
√xt
[
tkey
]);

190 
˙t
++;

192 (
hód˚Œ
->
down
.
Àaf
);

193 
	}
}

195 
ÀafT
 *
	$Êexøy_ªmove
(
ÊexñT
 *
t›node
,
uöt32
 
key
)

201 
ÊexñT
 
ãm±›
={0,
NULL
},*
hód˚Œ
=&temptop;

202 
ÊexñT
 *
°ack
[
max_°øè
];

203 
uöt32
 
˙t
,
tkey
;

204 
ÀafT
 *
Àaf
;

206 
hód˚Œ
=
t›node
;

208 
˙t
=0;

209 
˙t
<
max_°øè
 && 
hód˚Œ
->
down
.
√xt
!=
NULL
){

210 
tkey
=
	`keyof
(
key
,
˙t
);

212 
°ack
[
˙t
]=
hód˚Œ
;

214 
hód˚Œ
=&(hód˚Œ->
down
.
√xt
[
tkey
]);

215 
˙t
++;

217 i‡(
hód˚Œ
->
down
.
√xt
==
NULL
){

218 
Àaf
=
NULL
;

220 
Àaf
=
hód˚Œ
->
down
.leaf;

222 i‡(
Àaf
!=
NULL
){

223 
hód˚Œ
->
down
.
Àaf
=
NULL
;

224 
˙t
=
max_°øè
;

225 
˙t
>0){

226 
˙t
--;

229 
°ack
[
˙t
]->
num_chûdªn
--;

230 i‡(
°ack
[
˙t
]->
num_chûdªn
>0) ;

231 
	`‰ì
(
°ack
[
˙t
]->
down
.
√xt
); sèck[˙t]->down.√xt=
NULL
;

234 (
Àaf
);

235 
	}
}

237 
ÀafT
 *
	$Êexøy_toggÀ
(
ÊexñT
 *
t›node
,
uöt32
 
key
,
ÀafT
 *
√wÀaf
)

244 
ÀafT
 *
ﬁdÀaf
=
NULL
;

246 
ﬁdÀaf
=
	`Êexøy_ªmove
(
t›node
,
key
);

247 i‡(
ﬁdÀaf
==
NULL
){

248 
	`Êexøy_ö£π
(
t›node
,
key
,
√wÀaf
);

250 (
ﬁdÀaf
);

251 
	}
}

253 
	$Êexøy_öô
(
ÊexñT
 *
t›node
)

257 
t›node
->
num_chûdªn
=0;Å›node->
down
.
√xt
=
NULL
;

258 
	}
}

260 #i‡
ã°Êex


261 
	$øndã°
()

265 
uöt32
 
˙t
,
dex
;

266 
ÊexñT
 
t›node
;

267 
ÀafT
 *
√wÀaf
;

269 
	`Êexøy_öô
(&
t›node
);

270 
˙t
=0;˙t<
ã°size
;cnt++){

271 
dex
=
	`øndom
()%
maxuöt32
;

272 
√wÀaf
=
	`mÆloc
((
ÀafT
));ÇewÀaf->
vÆue
=
˙t
;

273 
	`Êexøy_ö£π
(&
t›node
,
dex
,
√wÀaf
);

275 
	`bug¥ötf
("øm˙t:%u,Üó‰am˙t:%u.\n",
øm˙t
,
Àa‰am˙t
);

277 
˙t
=0;˙t<
ã°size
;cnt+=1){

278 
dex
=
	`øndom
()%
maxuöt32
;

279 
√wÀaf
=
	`Êexøy_ªmove
(&
t›node
,
dex
);

280 i‡(
√wÀaf
!=
NULL
Ë
	`‰ì
(newleaf);

282 
	`bug¥ötf
("randomsÑemoved.\n");

283 
	`Êexøy_de°roy
(&
t›node
,&
Êexøy_Àaf_‰ì
);

284 
	}
}

286 
	$c⁄£c_ã°
()

290 
uöt32
 
˙t
;

291 
ÊexñT
 
t›node
;

292 
ÀafT
 *
√wÀaf
;

294 
	`Êexøy_öô
(&
t›node
);

296 
˙t
=0;˙t<
ã°size
;cnt++){

297 
√wÀaf
=
	`mÆloc
((
ÀafT
));ÇewÀaf->
vÆue
=
˙t
;

298 
	`Êexøy_ö£π
(&
t›node
,
˙t
,
√wÀaf
);

300 
	`bug¥ötf
("øm˙t:%u,Üó‰am˙t:%u.\n",
øm˙t
,
Àa‰am˙t
);

302 
˙t
=0;˙t<
ã°size
;cnt+=2){

303 
√wÀaf
=
	`Êexøy_ªmove
(&
t›node
,
˙t
);

304 i‡(
√wÀaf
!=
NULL
Ë
	`‰ì
(newleaf);

306 
	`bug¥ötf
("consecutivesÑemoved.\n");

307 
	`Êexøy_de°roy
(&
t›node
,&
Êexøy_Àaf_‰ì
);

308 
	}
}

311 
	$maö
()

315 
uöt32
 
˙t
;

316 
ÊexñT
 *
hñí
=
NULL
,
mñvö
;

317 
ÀafT
 *
√wÀaf
,*
‰õda
,*
wídy
;

319 
	`bug¥ötf
("Starting.\n\n\n");

322 
	`c⁄£c_ã°
(); 
	`gëch¨
(); (0);

323 
	`øndã°
(); 
	`gëch¨
(); (0);

325 
	`Êexøy_öô
(&
mñvö
);

327 
√wÀaf
=
	`mÆloc
((
ÀafT
));ÇewÀaf->
vÆue
=30;

328 
	`Êexøy_ö£π
(&
mñvö
,0x01234567,
√wÀaf
);

331 
√wÀaf
=
	`mÆloc
((
ÀafT
));ÇewÀaf->
vÆue
=29;

332 
	`Êexøy_ö£π
(&
mñvö
,0x76543210,
√wÀaf
);

335 
wídy
=
	`Êexøy_ªmove
(&
mñvö
,0x76543210);

337 i‡(
wídy
==
NULL
){

338 
	`bug¥ötf
("NULL wídy:%x\n",
wídy
);

340 
	`bug¥ötf
("wídy:%li\n",
wídy
->
vÆue
);

341 
	`‰ì
(
wídy
);

344 
˙t
=0;cnt<10000;cnt++){

345 
√wÀaf
=
	`mÆloc
((
ÀafT
));ÇewÀaf->
vÆue
=
˙t
;

346 
	`Êexøy_ö£π
(&
mñvö
,
˙t
,
√wÀaf
);

348 
	`bug¥ötf
("øm˙t:%u,Üó‰am˙t:%u.\n",
øm˙t
,
Àa‰am˙t
);

350 
˙t
=0;cnt<10000;cnt+=2){

351 
√wÀaf
=
	`Êexøy_ªmove
(&
mñvö
,
˙t
);

352 
	`‰ì
(
√wÀaf
);

354 
	`gëch¨
();

356 
	`bug¥ötf
("\n\n");

357 
‰õda
=
	`Êexøy_lookup
(&
mñvö
,0x76543210);

358 i‡(
‰õda
==
NULL
){

359 
	`bug¥ötf
("NULL frõda:%x\n",
‰õda
);

361 
	`bug¥ötf
("‰õda:%li\n",
‰õda
->
vÆue
);

363 
‰õda
=
	`Êexøy_lookup
(&
mñvö
,0x7654f210);

364 i‡(
‰õda
==
NULL
){

365 
	`bug¥ötf
("NULL frõda:%x\n",
‰õda
);

367 
	`bug¥ötf
("‰õda:%li\n",
‰õda
->
vÆue
);

370 
	`bug¥ötf
("\n\n");

371 
	`Êexøy_de°roy
(&
mñvö
,&
Êexøy_Àaf_‰ì
);

374 
	`gëch¨
();

378 
	}
}

	@/home/john/Documents/Projects/BrainFarm/flexray.h

27 #i‚de‡
FLEXRAY_H_INCLUDED


28 
	#FLEXRAY_H_INCLUDED


	)

30 #ifde‡
__˝lu•lus


34 #i‚de‡
boﬁ


35 
	#boﬁ
 

	)

36 
	#åue
 0x1

	)

37 
	#Ál£
 0x0

	)

39 #i‚de‡
öt8


40 
	#öt8
 

	)

42 #i‚de‡
uöt8


43 
	#uöt8
 
öt8


	)

45 #i‚de‡
öt32


46 
	#öt32
 

	)

48 #i‚de‡
uöt32


49 
	#uöt32
 
öt32


	)

50 
	#maxuöt32
 (~(
uöt32
)0)

	)

54 
ÀafT
 *
	tÀafTPå
;

55 
	sÀafT


59 
	mvÆue
;

60 
	mxyz
[3];

61 }
	tÀafT
;

64 
uöt32
 
	tÀafT
;

67 
	sÊexñT


72 
uöt8
 
	gnum_chûdªn
;

73 
	udown
{

74 
ÊexñT
 *
	g√xt
;

75 
ÀafT
 *
	gÀaf
;

76 }
	gdown
;

77 }
	tÊexñT
;

80 
	tÊexøy_ÀafkûlT
(*
	tÀaf
);

82 
Êexøy_öô
(
ÊexñT
 *
t›node
);

83 
boﬁ
 
Êexøy_ö£π
(
ÊexñT
 *
t›node
,
uöt32
 
key
,
ÀafT
 *
√wÀaf
);

84 
Êexøy_de°roy
(
ÊexñT
 *
t›node
,
Êexøy_ÀafkûlT
 *
Àafkûl
);

85 
ÀafT
 *
Êexøy_lookup
(
ÊexñT
 *
t›node
,
uöt32
 
key
);

86 
ÀafT
 *
Êexøy_ªmove
(
ÊexñT
 *
t›node
,
uöt32
 
key
);

87 
ÀafT
 *
Êexøy_toggÀ
(
ÊexñT
 *
t›node
,
uöt32
 
key
,ÀafT *
√wÀaf
);

89 #ifde‡
__˝lu•lus


	@/home/john/Documents/Projects/BrainFarm/main.cpp

15 
	~<io°ªam
>

16 
	~<ve˘‹
>

17 
	~<Æg‹ôhm
>

18 
	~<m©h.h
>

19 
	~<time.h
>

20 
	~<sys/time.h
>

21 
	~<°dio.h
>

22 
	~<°döt.h
>

23 
	~<thªad
>

24 
	~<©omic
>

25 
	#__STDC_FORMAT_MACROS


	)

26 
	~<öây≥s.h
>

28 
	~<hash_m≠
>

33 
	~"Org.h
"

34 
	~"P›.h
"

35 
	~"Êexøy.h
"

36 
	~"FÀxøyC.h
"

37 
	~"Fìdî.h
"

39 
usög
 
«me•a˚
 
	g°d
;

40 
usög
 
«me•a˚
 
	g__gnu_cxx
;

42 
	#gíomñí
 1000

	)

43 
	#ba£amp
 
INT_MAX


	)

45 
˛ass
 
	gGíome
;

46 
˛ass
 
	gOrg
;

54 
timevÆ
 
	gtm0
, 
	gtm1
;

55 
	gtf0
, 
	gtf1
;

56 
	gdñè
;

58 
	$TimeTe°
() {

59 
timevÆ
 
tm0
, 
tm1
;

60 
	`gëtimeofday
(&
tm0
, 
NULL
);

62 
sum
 = 0;

63 
™swî
, 
que°i⁄
;

64 
˙t
=0; cnt<1000000; cnt++) {

65 
™swî
 = 
	`sqπ
(()
˙t
);

66 
que°i⁄
 = 
	`sö
(()
˙t
);

67 
sum
 +
™swî
 + 
que°i⁄
;

69 
Org
 *
bó°
 = 
√w
 
	`Org
();

70 
dñëe
 
bó°
;

74 
	`gëtimeofday
(&
tm1
, 
NULL
);

76 
	`bug¥ötf
("sum:%‡\n", 
sum
);

78 
	`bug¥ötf
("tm0:%ld:%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

79 
	`bug¥ötf
("tm1:%ld:%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

80 
	`bug¥ötf
("\n");

81 
	}
}

83 
	$s‹âe°
() {

84 
uöt64_t
 
NDex
;

85 
NodeVec
 *
NLi°
;

86 
NodePå
 
node0
, 
node1
;

87 
UidTy≥
 
èrgë
 = 5;

88 
NLi°
 = 
√w
 
	`NodeVec
();

89 
˙t
=0; cnt<11; cnt++) {

90 
node0
 = 
√w
 
	`Node
();

91 
node0
->
S≥cõsId
 = 
˙t
;

92 
NLi°
->
	`push_back
(
node0
);

93 
NLi°
->
	`push_back
(
node0
);

95 
NDex
 = 
Node
::
	`TªeSórchNodeLi°
(
NLi°
, 0, 
èrgë
);

96 i‡(
NDex
 < 
NLi°
->
	`size
()) {

97 
node1
 = 
NLi°
->
	`©
(
NDex
);

98 
	`bug¥ötf
("S≥cõsId:%ld\n", 
node1
->
S≥cõsId
);

100 
	`bug¥ötf
("SpeciesIdÇot found.\n");

102 
	}
}

103 
	#ã°size
 1000

	)

105 
	$Êexøy_Àaf_‰ì
(*
Àaf
)

109 
	`‰ìß„
(
Àaf
);

110 
	}
}

111 
	$Êexøy_Àaf_dñëe
(
ÀafT
 *
Àaf
)

115 
dñëe
 
Àaf
;

116 
	}
}

118 
	$m≠ã°
() {

120 
hash_m≠
<, 
ÀafT
 *> 
yóh
;

121 
°d
::
ve˘‹
<
ÀafT
 *> 
‰ed0
;

122 
°d
::
ve˘‹
<> 
‰ed1
;

123 
big√ss
 = 10000000;

126 
big√ss
 = 10000000;

127 
timevÆ
 
tm0
, 
tm1
;

128 
tf0
, 
tf1
;

129 
dñè
;

130 
uöt32
 
˙t
,
dex
;

131 
∫um
 = 
	`ønd
();

132 
ÀafT
 *
√wÀaf
;

133 
√wÀaf
=
	`Ælocß„
(
ÀafT
,1);

135 i‡(
åue
) {

136 
dummy
=0;

137 
	`gëtimeofday
(&
tm0
, 
NULL
);

138 
˙t
=0; c¡<
big√ss
; cnt++) {

139 
dummy
+=3;

141 
	`gëtimeofday
(&
tm1
, 
NULL
);

142 
	`bug¥ötf
("NOTHING buàlo› %li, %li\n", 
big√ss
, 
dummy
);

143 
	`bug¥ötf
("tm0:%ld.%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

144 
	`bug¥ötf
("tm1:%ld.%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

145 
tf0
 = 
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

146 
tf1
 = 
tm1
.
tv_£c
 + ((Èm1.
tv_u£c
)/
u¥ecisi⁄
;

147 
	`bug¥ötf
("dñè:%f\n", 
tf1
-
tf0
);

148 
	`bug¥ötf
("\n");

150 i‡(
åue
) {

151 
ÀafT
 **
øy
 = 
	`Ælocß„
(
ÀafTPå
, 
big√ss
);

152 
	`gëtimeofday
(&
tm0
, 
NULL
);

153 
˙t
=0; c¡<
big√ss
; cnt++) {

154 
øy
[
˙t
] = 
√wÀaf
;

156 
	`gëtimeofday
(&
tm1
, 
NULL
);

157 
	`‰ìß„
(
øy
);

158 
	`bug¥ötf
("øy %li\n", 
big√ss
);

159 
	`bug¥ötf
("tm0:%ld.%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

160 
	`bug¥ötf
("tm1:%ld.%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

161 
tf0
 = 
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

162 
tf1
 = 
tm1
.
tv_£c
 + ((Èm1.
tv_u£c
)/
u¥ecisi⁄
;

163 
	`bug¥ötf
("dñè:%f\n", 
tf1
-
tf0
);

164 
	`bug¥ötf
("\n");

166 i‡(
åue
) {

167 
	`gëtimeofday
(&
tm0
, 
NULL
);

168 
˙t
=0; c¡<
big√ss
; cnt++) {

169 
‰ed0
.
	`push_back
(
√wÀaf
);

171 
	`gëtimeofday
(&
tm1
, 
NULL
);

172 
	`bug¥ötf
("ve˘‹Öush_back %li\n", 
big√ss
);

173 
	`bug¥ötf
("tm0:%ld.%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

174 
	`bug¥ötf
("tm1:%ld.%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

175 
tf0
 = 
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

176 
tf1
 = 
tm1
.
tv_£c
 + ((Èm1.
tv_u£c
)/
u¥ecisi⁄
;

177 
	`bug¥ötf
("dñè:%f\n", 
tf1
-
tf0
);

178 
	`bug¥ötf
("\n");

180 i‡(
Ál£
) {

181 
	`gëtimeofday
(&
tm0
, 
NULL
);

182 
‰ed1
.
	`ªsize
(
big√ss
);

184 
˙t
=0; c¡<
big√ss
; cnt++) {

185 
‰ed1
.
	`©
(
˙t
Ë
∫um
;

187 
	`gëtimeofday
(&
tm1
, 
NULL
);

188 
	`bug¥ötf
("ve˘‹áà%li\n", 
big√ss
);

189 
	`bug¥ötf
("tm0:%ld.%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

190 
	`bug¥ötf
("tm1:%ld.%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

191 
tf0
 = 
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

192 
tf1
 = 
tm1
.
tv_£c
 + ((Èm1.
tv_u£c
)/
u¥ecisi⁄
;

193 
	`bug¥ötf
("dñè:%f\n", 
tf1
-
tf0
);

194 
	`bug¥ötf
("\n");

196 i‡(
åue
) {

197 
	`gëtimeofday
(&
tm0
, 
NULL
);

198 
˙t
=0; c¡<
big√ss
; cnt++) {

200 
dex
=
˙t
;

201 
yóh
[
dex
] = 
√wÀaf
;

203 
	`gëtimeofday
(&
tm1
, 
NULL
);

205 if(
Ál£
) {

206 
	`bug¥ötf
("hasháccess\n");

207 
	`gëtimeofday
(&
tm0
, 
NULL
);

208 
˙t
=0; c¡<
big√ss
; cnt++) {

210 
dex
=
˙t
;

211 
√wÀaf
 = 
yóh
[
dex
];

213 
	`gëtimeofday
(&
tm1
, 
NULL
);

215 
	`bug¥ötf
("hash %li\n", 
big√ss
);

216 
	`bug¥ötf
("tm0:%ld.%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

217 
	`bug¥ötf
("tm1:%ld.%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

218 
tf0
 = 
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

219 
tf1
 = 
tm1
.
tv_£c
 + ((Èm1.
tv_u£c
)/
u¥ecisi⁄
;

220 
	`bug¥ötf
("dñè:%f\n", 
tf1
-
tf0
);

221 
	`bug¥ötf
("\n");

224 i‡(
åue
) {

225 
FR
::
FÀxøy
<
ÀafT
> 
‰ay
;

226 
	`gëtimeofday
(&
tm0
, 
NULL
);

227 
˙t
=0; c¡<
big√ss
; cnt++) {

229 
dex
=
˙t
*1;

230 
‰ay
.
	`In£π
(
dex
,
√wÀaf
);

232 
	`gëtimeofday
(&
tm1
, 
NULL
);

233 i‡(
Ál£
) {

234 
	`bug¥ötf
("flexrayáccess\n");

235 
	`gëtimeofday
(&
tm0
, 
NULL
);

236 
˙t
=0; c¡<
big√ss
; cnt++) {

238 
dex
=
˙t
;

239 
√wÀaf
 = 
‰ay
.
	`Lookup
(
dex
);

241 
	`gëtimeofday
(&
tm1
, 
NULL
);

243 i‡(
Ál£
) {

244 
˙t
=0; c¡<
big√ss
; cnt+=1) {

245 
dex
=
	`ønd
()%
INT32_MAX
;

246 
√wÀaf
=
‰ay
.
	`Remove
(
dex
);

247 i‡(
√wÀaf
!=
NULL
Ë
	`‰ìß„
(newleaf);

249 
	`bug¥ötf
("randomsÑemoved.\n");

250 
‰ay
.
	`De°roy
(&
Êexøy_Àaf_dñëe
);

253 
	`bug¥ötf
("FÀxøy Cœs†%li\n", 
big√ss
);

254 
	`bug¥ötf
("tm0:%ld.%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

255 
	`bug¥ötf
("tm1:%ld.%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

256 
tf0
 = 
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

257 
tf1
 = 
tm1
.
tv_£c
 + ((Èm1.
tv_u£c
)/
u¥ecisi⁄
;

258 
	`bug¥ötf
("dñè:%f\n", 
tf1
-
tf0
);

259 
	`bug¥ötf
("\n");

261 i‡(
åue
) {

262 
ÊexñT
 
t›node
;

263 
ÀafT
 *
√wÀaf
;

265 
	`Êexøy_öô
(&
t›node
);

267 
	`gëtimeofday
(&
tm0
, 
NULL
);

268 
˙t
=0; c¡<
big√ss
; cnt++) {

270 
dex
=
˙t
*1;

273 
	`Êexøy_ö£π
(&
t›node
,
dex
,
√wÀaf
);

275 
	`gëtimeofday
(&
tm1
, 
NULL
);

276 i‡(
Ál£
) {

277 
	`bug¥ötf
("flexrayáccess\n");

278 
	`gëtimeofday
(&
tm0
, 
NULL
);

279 
˙t
=0; c¡<
big√ss
; cnt++) {

281 
dex
=
˙t
;

282 
√wÀaf
 = 
	`Êexøy_lookup
(&
t›node
, 
dex
);

284 
	`gëtimeofday
(&
tm1
, 
NULL
);

286 i‡(
Ál£
) {

287 
˙t
=0; c¡<
big√ss
; cnt+=1) {

288 
dex
=
	`ønd
()%
maxuöt32
;

289 
√wÀaf
=
	`Êexøy_ªmove
(&
t›node
,
dex
);

290 i‡(
√wÀaf
!=
NULL
Ë
	`‰ì
(newleaf);

292 
	`bug¥ötf
("randomsÑemoved.\n");

293 
	`Êexøy_de°roy
(&
t›node
,&
Êexøy_Àaf_‰ì
);

296 
	`bug¥ötf
("Êexøy %li\n", 
big√ss
);

297 
	`bug¥ötf
("tm0:%ld.%ld\n", 
tm0
.
tv_£c
,Åm0.
tv_u£c
);

298 
	`bug¥ötf
("tm1:%ld.%ld\n", 
tm1
.
tv_£c
,Åm1.
tv_u£c
);

299 
tf0
 = 
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

300 
tf1
 = 
tm1
.
tv_£c
 + ((Èm1.
tv_u£c
)/
u¥ecisi⁄
;

301 
	`bug¥ötf
("dñè:%f\n", 
tf1
-
tf0
);

302 
	`bug¥ötf
("\n");

304 i‡(
√wÀaf
!=
NULL
Ë
	`‰ìß„
(newleaf);

305 
	}
}

316 
	$foo
() {

317 
	`bug¥ötf
("foo\n");

318 
	}
}

319 
	$b¨
(
x
) {

320 
	`bug¥ötf
("bar\n");

321 
	}
}

322 
	$baz
(
x
) {

323 
	`bug¥ötf
("baz\n");

324 
	}
}

326 
	$ThªadTe°
() {

327 #i‡
Ál£


329 
°d
::
thªad
 
	`fú°
 (
foo
);

330 
°d
::
thªad
 
	`£c⁄d
 (
b¨
,0);

331 
°d
::
thªad
 *
thúd
;

332 
°d
::
thªad
 **
thøy
;

333 
°d
::
ve˘‹
<°d::
thªad
> 
thªads
;

335 
thúd
 = 
√w
 
°d
::
	`thªad
(
baz
, 0);

337 
°d
::
cout
 << "main, fooánd barÇowÉxecute concurrently...\n";

340 
fú°
.
	`joö
();

341 
£c⁄d
.
	`joö
();

342 
thúd
->
	`joö
();

343 
dñëe
 
thúd
;

344 
°d
::
cout
 << "fooánd bar completed.\n";

346 
	}
}

348 ˛as†
	cHûos
 {

349 
	mpublic
:

350 
°d
::
©omic
<> 
globÆ_cou¡î
;

351 
	$ö¸ó£_globÆ
 (
n
Ë{ 
i
=0; i<n; ++iË++
globÆ_cou¡î
; }

352 
	`ö¸ó£_ª„ªn˚
 (
°d
::
©omic
<>& 
v¨übÀ
, 
n
Ë{ 
i
=0; i<n; ++iË++v¨übÀ; 
	}
}

353 
	$h™dÀr
 (Ë{ 
	}
}

355 
	$Hûos
() {

356 
globÆ_cou¡î
.
	`°‹e
(0, 
°d
::
mem‹y_‹dî_ªœxed
);

359 
	}
}

361 
	gC©om
 : 
°d
::
©omic
<> {

362 
C©om
(Ë: 
°d
::
©omic
<>(0) {}

363 
ö¸ó£_membî
 (
n
Ë{ 
i
=0; 
	gi
<
	gn
; ++iË
„tch_add
(1); }

365 
	$ThªadTe°2
()

367 #i‡
Ál£


368 
°d
::
ve˘‹
<°d::
thªad
> 
thªads
;

370 
°d
::
cout
 << "increase global counter with 10Åhreads...\n";

371 
˙t
=1; cnt<=10; ++cnt)

372 
thªads
.
	`push_back
(
°d
::
	`thªad
(&
Hûos
::
ö¸ó£_globÆ
, 
this
, 1000));

376 i‡(
Ál£
) {

377 
°d
::
cout
 << "increase counter (foo) with 10Åhreads usingÑeference...\n";

378 
°d
::
©omic
<> 
foo
;

379 
˙t
=1; cnt<=10; ++cnt) {

384 #i‡
Ál£


385 
°d
::
cout
 << "increase counter (bar2) with 10Åhreads using member...\n";

386 
C©om
 
b¨2
;

387 
˙t
=1; cnt<=10; ++cnt)

388 
thªads
.
	`push_back
(
°d
::
	`thªad
(&
C©om
::
ö¸ó£_membî
,°d::
	`ªf
(
b¨2
),1000));

391 
°d
::
cout
 << "synchronizingállÅhreads...\n";

392 auto& 
th
 : 
thªads
Ëth.
	`joö
();

394 
°d
::
cout
 << "globÆ_cou¡î: " << 
globÆ_cou¡î
 << '\n';

395 
°d
::
cout
 << "foo: " << 
foo
 << '\n';

400 
	}
}

403 
	$P›Sessi⁄
() {

404 
size_t
 
P›MaxSize
;

405 
P›På
 
p›
;

406 
OrgPå
 
‹g0
;

407 
uöt32_t
 
gí˙t
;

409 
	`¥ötf
("PopSession()\n");

416 
NumGíî©i⁄s
 = 1000000;

417 
boﬁ
 
KìpGoög
 = 
åue
;

418 
CÀ™Pau£
 = 1;

419 
MaxSize
=0, 
SumSize
 = 0, 
AvgSize
=0;

420 
SumSc‹e0
 = 0.0, 
SumSc‹e1
 = 0.0;

421 
SumAvgAvgSc‹e
 = 0.0;

423 
	`¥ötf
("Pop_Create!\n");

424 
p›
 = 
√w
 
	`P›
();

425 
	`¥ötf
("P› Inô! %li\n", 
p›
->
f‹e°v
.
	`size
());

427 
Fìd
 
food
;

428 
	`¥ötf
("GenerateTestPorts()\n");

429 
food
.
	`Gíî©eTe°P‹ts
();

430 
p›
->
	`Aâach_GlobÆ_Fìd
(&
food
);

432 
	`gëtimeofday
(&
tm0
, 
NULL
);

433 
p›
->
	`Compûe_Me
();

434 
p›
->
	`G©hî_IoNodes_And_C⁄√˘
(&
food
);

435 
gí˙t
=0; gí˙t<
NumGíî©i⁄s
; gencnt++) {

436 
p›
->
	`Gí
();

438 
‹g0
 = 
p›
->
Sc‹eDexv
[0];

439 
numnodes
 = 
‹g0
->
NGíe
.
	`size
();

440 
AvgBó°Sc‹e
 = 
p›
->
	`AvgBó°Sc‹e
(0.75);

441 
SumAvgAvgSc‹e
 +
AvgBó°Sc‹e
;

442 
sc‹e0
 = 
‹g0
->
Sc‹e
[0];

443 
sc‹e1
 = 
‹g0
->
Sc‹e
[1];

444 
SumSc‹e0
 +
sc‹e0
;

445 
SumSc‹e1
 +
sc‹e1
;

447 
AvgAvgSc‹e
 = 
SumAvgAvgSc‹e
/()(
gí˙t
+1.0);

448 
avgsc‹e0
 = 
SumSc‹e0
/()(
gí˙t
+1.0);

449 
avgsc‹e1
 = 
SumSc‹e1
/()(
gí˙t
+1.0);

450 
NumJacks
 = 
‹g0
->
GlobÆJackVec
.
	`size
();

451 
	`¥ötf
("P›_Gí:%04li, s:%6.2f, %7.2f, %7.2f,Çumnodes:%3li, NumJacks:%1li: ", 
gí˙t
, 
sc‹e0
, 
sc‹e1
, 
AvgBó°Sc‹e
, 
numnodes
, 
NumJacks
);

452 
	`¥ötf
("%7.2f, %7.2‡", 
avgsc‹e0
, 
avgsc‹e1
);

453 
	`¥ötf
("%7.2f, ", 
AvgAvgSc‹e
);

454 
‹g0
->
	`Pröt_Jacks
();

455 
	`¥ötf
("\n");

457 #i‡
Ál£


458 if(
	`GëAsyncKeySèã
( 'X' ) & 0x8000)

460 if(
KìpGoög
) {

461 
NumGíî©i⁄s
 = 
gí˙t
 + 30;

462 
KìpGoög
 = 
Ál£
;

466 i‡(
NumGíî©i⁄s
-
gí˙t
 > 20) {

475 
p›
->
	`Muèã
(0.2, 0.05);

478 i‡(
gí˙t
 % 
CÀ™Pau£
 == 0) {

479 
p›
->
	`CÀ™_Invít‹y
();

481 
p›
->
	`Compûe_Me
();

482 
p›
->
	`G©hî_IoNodes_And_C⁄√˘
(&
food
);

484 
P›MaxSize
=
p›
->
	`GëMaxSize
();

485 
‹g0
 = 
p›
->
f‹e°v
[0]->
ã«¡
;

486 i‡(
MaxSize
<
P›MaxSize
) {

487 
MaxSize
 = 
P›MaxSize
;

489 
SumSize
 +
‹g0
->
NGíe
.
	`size
();

491 
	`gëtimeofday
(&
tm1
, 
NULL
);

494 
p›
->
	`Pröt_S‹ãd_Sc‹es
();

495 
‹g0
 = 
p›
->
Sc‹eDexv
.
	`©
’›->Sc‹eDexv.
	`size
()-1);

496 
‹g0
 = 
p›
->
f‹e°v
[0]->
ã«¡
;

497 i‡(
Ál£
) {

498 
	`bug¥ötf
("Org 0, gí:%li, ", 
NumGíî©i⁄s
-1);

499 
‹g0
->
	`Pröt_Me
();

501 
	`bug¥ötf
("Org 0, gí:%li, ", 
NumGíî©i⁄s
-1);

502 
AvgSize
 = 
SumSize
/()
NumGíî©i⁄s
;

503 
	`bug¥ötf
("size:%i, MaxSize:%i, AvgSize:%i\n", 
‹g0
->
NGíe
.
	`size
(), 
MaxSize
, 
AvgSize
);

506 
t0
 = 
	`FuŒTime
(
tm0
);

507 
t1
 = 
	`FuŒTime
(
tm1
);

508 
dñè
 = 
t1
-
t0
;

509 
	`bug¥ötf
("dñè T:%f\n", 
dñè
);

510 
	`bug¥ötf
("P›_Dñëe! %f\n", 
p›
->
f‹e°v
[0]->
ã«¡
->
Sc‹e
[0]);

511 
dñëe
 
p›
;

512 
	}
}

514 
	$FìdTe°
() {

515 
°d
::
°rög
 
glob
 = "abcdefghijklmnop";

517 
WebFìdî
 
„ed
;

518 
„ed
.
	`O≥n
();

519 
˙t
=0; cnt<6; cnt++) {

520 
„ed
.
	`Fëch
(
glob
);

521 
cout
 << "glob is:[" << 
glob
 << "]";

522 
	`¥ötf
("\n");

525 
„ed
.
	`Clo£
();

526 
	}
}

528 
	$maö
() {

529 i‡(
åue
) {

530 
uöt64_t
 
zu…
;

534 
zu…
 = 
JunkY¨d
::
	`TxtDex
("zzzzz");

535 
	`¥ötf
("zu…[%016ŒX]\n", 
zu…
);

536 
zu…
 = 
JunkY¨d
::
	`TxtDex
(".....");

537 
	`¥ötf
("zu…[%016ŒX]\n", 
zu…
);

538 
zu…
 = 
JunkY¨d
::
	`TxtDex
("........");

539 
	`¥ötf
("zu…[%016ŒX]\n", 
zu…
);

545 i‡(
Ál£
) {

546 
IoJackBa£
 
IoJack
;

548 
JunkY¨d
::
	`P¨£Yahoo
("\"4/8/2014\",\"4:00pm\",4.11,2.43,13.46,\"BBD-B.TO\",\"BOMBARDIER INC., \"", &
IoJack
);

550 
	`¥ötf
("IoJack.P‹tId[%016ŒX]\n", 
IoJack
.
P‹tId
);

551 
	`¥ötf
("IoJack.VÆue[%f]\n", 
IoJack
.
VÆue
);

554 i‡(
Ál£
) {

556 
°d
::
°rög
 
fõld
 = "hello, folks,Åhere,";

558 
	`föd_™d_ª∂a˚
(
fõld
, ",", "");

563 
cout
 << "[" << 
fõld
 << "]";

568 
	`¥ötf
("main()\n");

569 
	`§™d
(
	`time
(
NULL
));

570 
	`P›Sessi⁄
();  0;

571 
Hûos
 
hû
;

572 
hû
.
	`ThªadTe°2
();  0;;

573 
	`ThªadTe°
();  0;;

574 
	`m≠ã°
();  0;

576 
	}
}

	@/usr/include/curl/curl.h

1 #i‚de‡
__CURL_CURL_H


2 
	#__CURL_CURL_H


	)

33 
	~"cuævî.h
"

34 
	~"cuæbuûd.h
"

35 
	~"cuæruÀs.h
"

41 #i‡(
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
)) && \

42 !
deföed
(
WIN32
Ë&& !
	$deföed
(
__SYMBIAN32__
)

43 
	#WIN32


	)

46 
	~<°dio.h
>

47 
	~<limôs.h
>

49 #i‡
	`deföed
(
__FªeBSD__
) && (__FreeBSD__ >= 2)

51 
	~<o§ñd©e.h
>

55 
	~<sys/ty≥s.h
>

56 
	~<time.h
>

58 #i‡
	`deföed
(
WIN32
Ë&& !deföed(
_WIN32_WCE
Ë&& !deföed(
__CYGWIN__
)

59 #i‡!(
	`deföed
(
_WINSOCKAPI_
Ë|| deföed(
_WINSOCK_H
Ë|| deföed(
__LWIP_OPT_H__
))

62 
	~<wösock2.h
>

63 
	~<ws2t˝ù.h
>

70 #i‡
	`deföed
(
_AIX
Ë|| deföed(
__NOVELL_LIBC__
Ë|| deföed(
__NëBSD__
) || \

71 
	`deföed
(
__möix
Ë|| deföed(
__SYMBIAN32__
Ë|| deföed(
__INTEGRITY
) || \

72 
	`deföed
(
ANDROID
) || \

73 (
	`deföed
(
__FªeBSD_vîsi⁄
) && (__FreeBSD_version < 800000))

74 
	~<sys/£À˘.h
>

77 #i‡!
	`deföed
(
WIN32
Ë&& !deföed(
_WIN32_WCE
)

78 
	~<sys/sockë.h
>

81 #i‡!
	`deföed
(
WIN32
Ë&& !deföed(
__WATCOMC__
Ë&& !deföed(
__VXWORKS__
)

82 
	~<sys/time.h
>

85 #ifde‡
__BEOS__


86 
	~<suµ‹t/Suµ‹tDefs.h
>

89 #ifde‡ 
__˝lu•lus


93 
	tCURL
;

99 #i‡(
	`deföed
(
WIN32
Ë|| deföed(
_WIN32
Ë|| deföed(
__SYMBIAN32__
)) && \

100 !
	`deföed
(
CURL_STATICLIB
)

101 #i‡
	`deföed
(
BUILDING_LIBCURL
)

102 
	#CURL_EXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

104 
	#CURL_EXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

108 #ifde‡
CURL_HIDDEN_SYMBOLS


115 
	#CURL_EXTERN
 
CURL_EXTERN_SYMBOL


	)

117 
	#CURL_EXTERN


	)

121 #i‚de‡
cuæ_sockë_ty≥def


123 #i‡
	`deföed
(
WIN32
Ë&& !deföed(
__LWIP_OPT_H__
)

124 
SOCKET
 
	tcuæ_sockë_t
;

125 
	#CURL_SOCKET_BAD
 
INVALID_SOCKET


	)

127 
	tcuæ_sockë_t
;

128 
	#CURL_SOCKET_BAD
 -1

	)

130 
	#cuæ_sockë_ty≥def


	)

133 
	scuæ_hâµo°
 {

134 
cuæ_hâµo°
 *
√xt
;

135 *
«me
;

136 
«mñígth
;

137 *
c⁄ã¡s
;

138 
c⁄ã¡¶ígth
;

139 *
buf„r
;

140 
buf„æígth
;

141 *
c⁄ã¡ty≥
;

142 
cuæ_¶i°
* 
c⁄ã¡hódî
;

143 
cuæ_hâµo°
 *
m‹e
;

146 
Êags
;

147 
	#HTTPPOST_FILENAME
 (1<<0Ë

	)

148 
	#HTTPPOST_READFILE
 (1<<1Ë

	)

149 
	#HTTPPOST_PTRNAME
 (1<<2Ë

	)

151 
	#HTTPPOST_PTRCONTENTS
 (1<<3Ë

	)

153 
	#HTTPPOST_BUFFER
 (1<<4Ë

	)

154 
	#HTTPPOST_PTRBUFFER
 (1<<5Ë

	)

155 
	#HTTPPOST_CALLBACK
 (1<<6Ë

	)

160 *
showfûíame
;

163 *
u£Ω
;

167 (*
	tcuæ_¥ogªss_ˇŒback
)(*
	t˛õ¡p
,

168 
	td…ŸÆ
,

169 
	td ow
,

170 
	tu…ŸÆ
,

171 
	tu ow
);

173 #i‚de‡
CURL_MAX_WRITE_SIZE


180 
	#CURL_MAX_WRITE_SIZE
 16384

	)

183 #i‚de‡
CURL_MAX_HTTP_HEADER


187 
	#CURL_MAX_HTTP_HEADER
 (100*1024)

	)

193 
	#CURL_WRITEFUNC_PAUSE
 0x10000001

	)

194 
	`size_t
 (*
	tcuæ_wrôe_ˇŒback
)(*
	tbuf„r
,

195 
	tsize_t
 
	tsize
,

196 
	tsize_t
 
	tnôems
,

197 *
	tout°ªam
);

203 
CURLFILETYPE_FILE
 = 0,

204 
CURLFILETYPE_DIRECTORY
,

205 
CURLFILETYPE_SYMLINK
,

206 
CURLFILETYPE_DEVICE_BLOCK
,

207 
CURLFILETYPE_DEVICE_CHAR
,

208 
CURLFILETYPE_NAMEDPIPE
,

209 
CURLFILETYPE_SOCKET
,

210 
CURLFILETYPE_DOOR
,

212 
CURLFILETYPE_UNKNOWN


213 } 
	tcuæfûëy≥
;

215 
	#CURLFINFOFLAG_KNOWN_FILENAME
 (1<<0)

	)

216 
	#CURLFINFOFLAG_KNOWN_FILETYPE
 (1<<1)

	)

217 
	#CURLFINFOFLAG_KNOWN_TIME
 (1<<2)

	)

218 
	#CURLFINFOFLAG_KNOWN_PERM
 (1<<3)

	)

219 
	#CURLFINFOFLAG_KNOWN_UID
 (1<<4)

	)

220 
	#CURLFINFOFLAG_KNOWN_GID
 (1<<5)

	)

221 
	#CURLFINFOFLAG_KNOWN_SIZE
 (1<<6)

	)

222 
	#CURLFINFOFLAG_KNOWN_HLINKCOUNT
 (1<<7)

	)

228 
	scuæ_fûeöfo
 {

229 *
fûíame
;

230 
cuæfûëy≥
 
fûëy≥
;

231 
time_t
 
time
;

232 
≥rm
;

233 
uid
;

234 
gid
;

235 
cuæ_off_t
 
size
;

236 
h¨dlöks
;

240 *
time
;

241 *
≥rm
;

242 *
u£r
;

243 *
group
;

244 *
èrgë
;

245 } 
°rögs
;

247 
Êags
;

250 * 
b_d©a
;

251 
size_t
 
b_size
;

252 
size_t
 
b_u£d
;

256 
	#CURL_CHUNK_BGN_FUNC_OK
 0

	)

257 
	#CURL_CHUNK_BGN_FUNC_FAIL
 1

	)

258 
	#CURL_CHUNK_BGN_FUNC_SKIP
 2

	)

263 (*
	tcuæ_chunk_bgn_ˇŒback
)(c⁄° *
	tå™s„r_öfo
,

264 *
	t±r
,

265 
	tªmaös
);

268 
	#CURL_CHUNK_END_FUNC_OK
 0

	)

269 
	#CURL_CHUNK_END_FUNC_FAIL
 1

	)

277 (*
	tcuæ_chunk_íd_ˇŒback
)(*
	t±r
);

280 
	#CURL_FNMATCHFUNC_MATCH
 0

	)

281 
	#CURL_FNMATCHFUNC_NOMATCH
 1

	)

282 
	#CURL_FNMATCHFUNC_FAIL
 2

	)

286 (*
	tcuæ_‚m©ch_ˇŒback
)(*
	t±r
,

287 c⁄° *
	t∑âîn
,

288 c⁄° *
	t°rög
);

291 
	#CURL_SEEKFUNC_OK
 0

	)

292 
	#CURL_SEEKFUNC_FAIL
 1

	)

293 
	#CURL_SEEKFUNC_CANTSEEK
 2

	)

295 (*
	tcuæ_£ek_ˇŒback
)(*
	tö°ªam
,

296 
	tcuæ_off_t
 
	toff£t
,

297 
	t‹igö
);

301 
	#CURL_READFUNC_ABORT
 0x10000000

	)

304 
	#CURL_READFUNC_PAUSE
 0x10000001

	)

306 
	`size_t
 (*
	tcuæ_ªad_ˇŒback
)(*
	tbuf„r
,

307 
	tsize_t
 
	tsize
,

308 
	tsize_t
 
	tnôems
,

309 *
	tö°ªam
);

312 
CURLSOCKTYPE_IPCXN
,

313 
CURLSOCKTYPE_LAST


314 } 
	tcuæsockty≥
;

318 
	#CURL_SOCKOPT_OK
 0

	)

319 
	#CURL_SOCKOPT_ERROR
 1

	)

321 
	#CURL_SOCKOPT_ALREADY_CONNECTED
 2

	)

323 (*
	tcuæ_sock›t_ˇŒback
)(*
	t˛õ¡p
,

324 
	tcuæ_sockë_t
 
	tcuæfd
,

325 
	tcuæsockty≥
 
	tpuΩo£
);

327 
	scuæ_sockaddr
 {

328 
Ámûy
;

329 
sockty≥
;

330 
¥Ÿocﬁ
;

331 
addæí
;

334 
sockaddr
 
addr
;

337 
cuæ_sockë_t


338 (*
	tcuæ_›ísockë_ˇŒback
)(*
	t˛õ¡p
,

339 
	tcuæsockty≥
 
	tpuΩo£
,

340 
	tcuæ_sockaddr
 *
	taddªss
);

343 (*
	tcuæ_˛o£sockë_ˇŒback
)(*
	t˛õ¡p
, 
	tcuæ_sockë_t
 
	tôem
);

346 
CURLIOE_OK
,

347 
CURLIOE_UNKNOWNCMD
,

348 
CURLIOE_FAILRESTART
,

349 
CURLIOE_LAST


350 } 
	tcuæi€º
;

353 
CURLIOCMD_NOP
,

354 
CURLIOCMD_RESTARTREAD
,

355 
CURLIOCMD_LAST


356 } 
	tcuæiocmd
;

358 
	`cuæi€º
 (*
	tcuæ_io˘l_ˇŒback
)(
	tCURL
 *
	th™dÀ
,

359 
	tcmd
,

360 *
	t˛õ¡p
);

368 *(*
	tcuæ_mÆloc_ˇŒback
)(
	tsize_t
 
	tsize
);

369 (*
	tcuæ_‰ì_ˇŒback
)(*
	t±r
);

370 *(*
	tcuæ_ªÆloc_ˇŒback
)(*
	t±r
, 
	tsize_t
 
	tsize
);

371 *(*
	tcuæ_°rdup_ˇŒback
)(c⁄° *
	t°r
);

372 *(*
	tcuæ_ˇŒoc_ˇŒback
)(
	tsize_t
 
	tnmemb
, size_à
	tsize
);

376 
CURLINFO_TEXT
 = 0,

377 
CURLINFO_HEADER_IN
,

378 
CURLINFO_HEADER_OUT
,

379 
CURLINFO_DATA_IN
,

380 
CURLINFO_DATA_OUT
,

381 
CURLINFO_SSL_DATA_IN
,

382 
CURLINFO_SSL_DATA_OUT
,

383 
CURLINFO_END


384 } 
	tcuæ_öfŸy≥
;

386 (*
	tcuæ_debug_ˇŒback
)

387 (
	tCURL
 *
	th™dÀ
,

388 
	tcuæ_öfŸy≥
 
	tty≥
,

389 *
	td©a
,

390 
	tsize_t
 
	tsize
,

391 *
	tu£Ωå
);

401 
CURLE_OK
 = 0,

402 
CURLE_UNSUPPORTED_PROTOCOL
,

403 
CURLE_FAILED_INIT
,

404 
CURLE_URL_MALFORMAT
,

405 
CURLE_NOT_BUILT_IN
,

407 
CURLE_COULDNT_RESOLVE_PROXY
,

408 
CURLE_COULDNT_RESOLVE_HOST
,

409 
CURLE_COULDNT_CONNECT
,

410 
CURLE_FTP_WEIRD_SERVER_REPLY
,

411 
CURLE_REMOTE_ACCESS_DENIED
,

414 
CURLE_OBSOLETE10
,

415 
CURLE_FTP_WEIRD_PASS_REPLY
,

416 
CURLE_OBSOLETE12
,

417 
CURLE_FTP_WEIRD_PASV_REPLY
,

418 
CURLE_FTP_WEIRD_227_FORMAT
,

419 
CURLE_FTP_CANT_GET_HOST
,

420 
CURLE_OBSOLETE16
,

421 
CURLE_FTP_COULDNT_SET_TYPE
,

422 
CURLE_PARTIAL_FILE
,

423 
CURLE_FTP_COULDNT_RETR_FILE
,

424 
CURLE_OBSOLETE20
,

425 
CURLE_QUOTE_ERROR
,

426 
CURLE_HTTP_RETURNED_ERROR
,

427 
CURLE_WRITE_ERROR
,

428 
CURLE_OBSOLETE24
,

429 
CURLE_UPLOAD_FAILED
,

430 
CURLE_READ_ERROR
,

431 
CURLE_OUT_OF_MEMORY
,

436 
CURLE_OPERATION_TIMEDOUT
,

437 
CURLE_OBSOLETE29
,

438 
CURLE_FTP_PORT_FAILED
,

439 
CURLE_FTP_COULDNT_USE_REST
,

440 
CURLE_OBSOLETE32
,

441 
CURLE_RANGE_ERROR
,

442 
CURLE_HTTP_POST_ERROR
,

443 
CURLE_SSL_CONNECT_ERROR
,

444 
CURLE_BAD_DOWNLOAD_RESUME
,

445 
CURLE_FILE_COULDNT_READ_FILE
,

446 
CURLE_LDAP_CANNOT_BIND
,

447 
CURLE_LDAP_SEARCH_FAILED
,

448 
CURLE_OBSOLETE40
,

449 
CURLE_FUNCTION_NOT_FOUND
,

450 
CURLE_ABORTED_BY_CALLBACK
,

451 
CURLE_BAD_FUNCTION_ARGUMENT
,

452 
CURLE_OBSOLETE44
,

453 
CURLE_INTERFACE_FAILED
,

454 
CURLE_OBSOLETE46
,

455 
CURLE_TOO_MANY_REDIRECTS
 ,

456 
CURLE_UNKNOWN_OPTION
,

457 
CURLE_TELNET_OPTION_SYNTAX
 ,

458 
CURLE_OBSOLETE50
,

459 
CURLE_PEER_FAILED_VERIFICATION
,

461 
CURLE_GOT_NOTHING
,

462 
CURLE_SSL_ENGINE_NOTFOUND
,

463 
CURLE_SSL_ENGINE_SETFAILED
,

465 
CURLE_SEND_ERROR
,

466 
CURLE_RECV_ERROR
,

467 
CURLE_OBSOLETE57
,

468 
CURLE_SSL_CERTPROBLEM
,

469 
CURLE_SSL_CIPHER
,

470 
CURLE_SSL_CACERT
,

471 
CURLE_BAD_CONTENT_ENCODING
,

472 
CURLE_LDAP_INVALID_URL
,

473 
CURLE_FILESIZE_EXCEEDED
,

474 
CURLE_USE_SSL_FAILED
,

475 
CURLE_SEND_FAIL_REWIND
,

477 
CURLE_SSL_ENGINE_INITFAILED
,

478 
CURLE_LOGIN_DENIED
,

480 
CURLE_TFTP_NOTFOUND
,

481 
CURLE_TFTP_PERM
,

482 
CURLE_REMOTE_DISK_FULL
,

483 
CURLE_TFTP_ILLEGAL
,

484 
CURLE_TFTP_UNKNOWNID
,

485 
CURLE_REMOTE_FILE_EXISTS
,

486 
CURLE_TFTP_NOSUCHUSER
,

487 
CURLE_CONV_FAILED
,

488 
CURLE_CONV_REQD
,

493 
CURLE_SSL_CACERT_BADFILE
,

495 
CURLE_REMOTE_FILE_NOT_FOUND
,

496 
CURLE_SSH
,

500 
CURLE_SSL_SHUTDOWN_FAILED
,

502 
CURLE_AGAIN
,

505 
CURLE_SSL_CRL_BADFILE
,

507 
CURLE_SSL_ISSUER_ERROR
,

509 
CURLE_FTP_PRET_FAILED
,

510 
CURLE_RTSP_CSEQ_ERROR
,

511 
CURLE_RTSP_SESSION_ERROR
,

512 
CURLE_FTP_BAD_FILE_LIST
,

513 
CURLE_CHUNK_FAILED
,

515 
CURL_LAST


516 } 
	tCURLcode
;

518 #i‚de‡
CURL_NO_OLDIES


522 
	#CURLOPT_ENCODING
 
CURLOPT_ACCEPT_ENCODING


	)

525 
	#CURLE_UNKNOWN_TELNET_OPTION
 
CURLE_UNKNOWN_OPTION


	)

529 
	#CURLE_SSL_PEER_CERTIFICATE
 
CURLE_PEER_FAILED_VERIFICATION


	)

533 
	#CURLE_OBSOLETE
 
CURLE_OBSOLETE50


	)

534 
	#CURLE_BAD_PASSWORD_ENTERED
 
CURLE_OBSOLETE46


	)

535 
	#CURLE_BAD_CALLING_ORDER
 
CURLE_OBSOLETE44


	)

536 
	#CURLE_FTP_USER_PASSWORD_INCORRECT
 
CURLE_OBSOLETE10


	)

537 
	#CURLE_FTP_CANT_RECONNECT
 
CURLE_OBSOLETE16


	)

538 
	#CURLE_FTP_COULDNT_GET_SIZE
 
CURLE_OBSOLETE32


	)

539 
	#CURLE_FTP_COULDNT_SET_ASCII
 
CURLE_OBSOLETE29


	)

540 
	#CURLE_FTP_WEIRD_USER_REPLY
 
CURLE_OBSOLETE12


	)

541 
	#CURLE_FTP_WRITE_ERROR
 
CURLE_OBSOLETE20


	)

542 
	#CURLE_LIBRARY_NOT_FOUND
 
CURLE_OBSOLETE40


	)

543 
	#CURLE_MALFORMAT_USER
 
CURLE_OBSOLETE24


	)

544 
	#CURLE_SHARE_IN_USE
 
CURLE_OBSOLETE57


	)

545 
	#CURLE_URL_MALFORMAT_USER
 
CURLE_NOT_BUILT_IN


	)

547 
	#CURLE_FTP_ACCESS_DENIED
 
CURLE_REMOTE_ACCESS_DENIED


	)

548 
	#CURLE_FTP_COULDNT_SET_BINARY
 
CURLE_FTP_COULDNT_SET_TYPE


	)

549 
	#CURLE_FTP_QUOTE_ERROR
 
CURLE_QUOTE_ERROR


	)

550 
	#CURLE_TFTP_DISKFULL
 
CURLE_REMOTE_DISK_FULL


	)

551 
	#CURLE_TFTP_EXISTS
 
CURLE_REMOTE_FILE_EXISTS


	)

552 
	#CURLE_HTTP_RANGE_ERROR
 
CURLE_RANGE_ERROR


	)

553 
	#CURLE_FTP_SSL_FAILED
 
CURLE_USE_SSL_FAILED


	)

557 
	#CURLE_OPERATION_TIMEOUTED
 
CURLE_OPERATION_TIMEDOUT


	)

559 
	#CURLE_HTTP_NOT_FOUND
 
CURLE_HTTP_RETURNED_ERROR


	)

560 
	#CURLE_HTTP_PORT_FAILED
 
CURLE_INTERFACE_FAILED


	)

561 
	#CURLE_FTP_COULDNT_STOR_FILE
 
CURLE_UPLOAD_FAILED


	)

563 
	#CURLE_FTP_PARTIAL_FILE
 
CURLE_PARTIAL_FILE


	)

564 
	#CURLE_FTP_BAD_DOWNLOAD_RESUME
 
CURLE_BAD_DOWNLOAD_RESUME


	)

569 
	#CURLE_ALREADY_COMPLETE
 99999

	)

574 
	`CURLcode
 (*
	tcuæ_c⁄v_ˇŒback
)(*
	tbuf„r
, 
	tsize_t
 
	tÀngth
);

576 
	`CURLcode
 (*
	tcuæ_s¶_˘x_ˇŒback
)(
	tCURL
 *
	tcuæ
,

577 *
	ts¶_˘x
,

579 *
	tu£Ωå
);

582 
CURLPROXY_HTTP
 = 0,

584 
CURLPROXY_HTTP_1_0
 = 1,

586 
CURLPROXY_SOCKS4
 = 4,

588 
CURLPROXY_SOCKS5
 = 5,

589 
CURLPROXY_SOCKS4A
 = 6,

590 
CURLPROXY_SOCKS5_HOSTNAME
 = 7

593 } 
	tcuæ_¥oxyty≥
;

595 
	#CURLAUTH_NONE
 0

	)

596 
	#CURLAUTH_BASIC
 (1<<0Ë

	)

597 
	#CURLAUTH_DIGEST
 (1<<1Ë

	)

598 
	#CURLAUTH_GSSNEGOTIATE
 (1<<2Ë

	)

599 
	#CURLAUTH_NTLM
 (1<<3Ë

	)

600 
	#CURLAUTH_DIGEST_IE
 (1<<4Ë

	)

601 
	#CURLAUTH_NTLM_WB
 (1<<5Ë

	)

602 
	#CURLAUTH_ONLY
 (1<<31Ë

	)

605 
	#CURLAUTH_ANY
 (~
CURLAUTH_DIGEST_IE
Ë

	)

606 
	#CURLAUTH_ANYSAFE
 (~(
CURLAUTH_BASIC
|
CURLAUTH_DIGEST_IE
))

	)

608 
	#CURLSSH_AUTH_ANY
 ~0

	)

609 
	#CURLSSH_AUTH_NONE
 0

	)

610 
	#CURLSSH_AUTH_PUBLICKEY
 (1<<0Ë

	)

611 
	#CURLSSH_AUTH_PASSWORD
 (1<<1Ë

	)

612 
	#CURLSSH_AUTH_HOST
 (1<<2Ë

	)

613 
	#CURLSSH_AUTH_KEYBOARD
 (1<<3Ë

	)

614 
	#CURLSSH_AUTH_DEFAULT
 
CURLSSH_AUTH_ANY


	)

616 
	#CURLGSSAPI_DELEGATION_NONE
 0

	)

617 
	#CURLGSSAPI_DELEGATION_POLICY_FLAG
 (1<<0Ë

	)

618 
	#CURLGSSAPI_DELEGATION_FLAG
 (1<<1Ë

	)

620 
	#CURL_ERROR_SIZE
 256

	)

622 
	scuæ_khkey
 {

623 c⁄° *
key
;

625 
size_t
 
Àn
;

626 
	ety≥
 {

627 
CURLKHTYPE_UNKNOWN
,

628 
CURLKHTYPE_RSA1
,

629 
CURLKHTYPE_RSA
,

630 
CURLKHTYPE_DSS


631 } 
keyty≥
;

636 
	ecuæ_kh°©
 {

637 
CURLKHSTAT_FINE_ADD_TO_FILE
,

638 
CURLKHSTAT_FINE
,

639 
CURLKHSTAT_REJECT
,

640 
CURLKHSTAT_DEFER
,

643 
CURLKHSTAT_LAST


647 
	ecuæ_khm©ch
 {

648 
CURLKHMATCH_OK
,

649 
CURLKHMATCH_MISMATCH
,

650 
CURLKHMATCH_MISSING
,

651 
CURLKHMATCH_LAST


655 (*
	tcuæ_sshkeyˇŒback
Ë(
	tCURL
 *
	tósy
,

656 c⁄° 
	tcuæ_khkey
 *
	tknownkey
,

657 c⁄° 
	tcuæ_khkey
 *
	tfoundkey
,

658 
	tcuæ_khm©ch
,

659 *
	t˛õ¡p
);

663 
CURLUSESSL_NONE
,

664 
CURLUSESSL_TRY
,

665 
CURLUSESSL_CONTROL
,

666 
CURLUSESSL_ALL
,

667 
CURLUSESSL_LAST


668 } 
	tcuæ_u£s¶
;

670 #i‚de‡
CURL_NO_OLDIES


676 
	#CURLFTPSSL_NONE
 
CURLUSESSL_NONE


	)

677 
	#CURLFTPSSL_TRY
 
CURLUSESSL_TRY


	)

678 
	#CURLFTPSSL_CONTROL
 
CURLUSESSL_CONTROL


	)

679 
	#CURLFTPSSL_ALL
 
CURLUSESSL_ALL


	)

680 
	#CURLFTPSSL_LAST
 
CURLUSESSL_LAST


	)

681 
	#cuæ_·ps¶
 
cuæ_u£s¶


	)

686 
CURLFTPSSL_CCC_NONE
,

687 
CURLFTPSSL_CCC_PASSIVE
,

688 
CURLFTPSSL_CCC_ACTIVE
,

689 
CURLFTPSSL_CCC_LAST


690 } 
	tcuæ_·pccc
;

694 
CURLFTPAUTH_DEFAULT
,

695 
CURLFTPAUTH_SSL
,

696 
CURLFTPAUTH_TLS
,

697 
CURLFTPAUTH_LAST


698 } 
	tcuæ_·∑uth
;

702 
CURLFTP_CREATE_DIR_NONE
,

703 
CURLFTP_CREATE_DIR
,

706 
CURLFTP_CREATE_DIR_RETRY
,

708 
CURLFTP_CREATE_DIR_LAST


709 } 
	tcuæ_·p¸óãdú
;

713 
CURLFTPMETHOD_DEFAULT
,

714 
CURLFTPMETHOD_MULTICWD
,

715 
CURLFTPMETHOD_NOCWD
,

716 
CURLFTPMETHOD_SINGLECWD
,

717 
CURLFTPMETHOD_LAST


718 } 
	tcuæ_·pmëhod
;

721 
	#CURLPROTO_HTTP
 (1<<0)

	)

722 
	#CURLPROTO_HTTPS
 (1<<1)

	)

723 
	#CURLPROTO_FTP
 (1<<2)

	)

724 
	#CURLPROTO_FTPS
 (1<<3)

	)

725 
	#CURLPROTO_SCP
 (1<<4)

	)

726 
	#CURLPROTO_SFTP
 (1<<5)

	)

727 
	#CURLPROTO_TELNET
 (1<<6)

	)

728 
	#CURLPROTO_LDAP
 (1<<7)

	)

729 
	#CURLPROTO_LDAPS
 (1<<8)

	)

730 
	#CURLPROTO_DICT
 (1<<9)

	)

731 
	#CURLPROTO_FILE
 (1<<10)

	)

732 
	#CURLPROTO_TFTP
 (1<<11)

	)

733 
	#CURLPROTO_IMAP
 (1<<12)

	)

734 
	#CURLPROTO_IMAPS
 (1<<13)

	)

735 
	#CURLPROTO_POP3
 (1<<14)

	)

736 
	#CURLPROTO_POP3S
 (1<<15)

	)

737 
	#CURLPROTO_SMTP
 (1<<16)

	)

738 
	#CURLPROTO_SMTPS
 (1<<17)

	)

739 
	#CURLPROTO_RTSP
 (1<<18)

	)

740 
	#CURLPROTO_RTMP
 (1<<19)

	)

741 
	#CURLPROTO_RTMPT
 (1<<20)

	)

742 
	#CURLPROTO_RTMPE
 (1<<21)

	)

743 
	#CURLPROTO_RTMPTE
 (1<<22)

	)

744 
	#CURLPROTO_RTMPS
 (1<<23)

	)

745 
	#CURLPROTO_RTMPTS
 (1<<24)

	)

746 
	#CURLPROTO_GOPHER
 (1<<25)

	)

747 
	#CURLPROTO_ALL
 (~0Ë

	)

751 
	#CURLOPTTYPE_LONG
 0

	)

752 
	#CURLOPTTYPE_OBJECTPOINT
 10000

	)

753 
	#CURLOPTTYPE_FUNCTIONPOINT
 20000

	)

754 
	#CURLOPTTYPE_OFF_T
 30000

	)

759 #ifde‡
CINIT


760 #unde‡
CINIT


763 #ifde‡
CURL_ISOCPP


764 
	#CINIT
(
«
,
t
,
nu
Ë
CURLOPT_
 ##Ç®
CURLOPTTYPE_
 ##Å + 
	)
nu

767 
	#LONG
 
CURLOPTTYPE_LONG


	)

768 
	#OBJECTPOINT
 
CURLOPTTYPE_OBJECTPOINT


	)

769 
	#FUNCTIONPOINT
 
CURLOPTTYPE_FUNCTIONPOINT


	)

770 
	#OFF_T
 
CURLOPTTYPE_OFF_T


	)

771 
	#CINIT
(
«me
,
ty≥
,
numbî
Ë
CURLOPT_
Çamêty≥ + 
	)
number

782 
	`CINIT
(
FILE
, 
OBJECTPOINT
, 1),

785 
	`CINIT
(
URL
, 
OBJECTPOINT
, 2),

788 
	`CINIT
(
PORT
, 
LONG
, 3),

791 
	`CINIT
(
PROXY
, 
OBJECTPOINT
, 4),

794 
	`CINIT
(
USERPWD
, 
OBJECTPOINT
, 5),

797 
	`CINIT
(
PROXYUSERPWD
, 
OBJECTPOINT
, 6),

800 
	`CINIT
(
RANGE
, 
OBJECTPOINT
, 7),

805 
	`CINIT
(
INFILE
, 
OBJECTPOINT
, 9),

809 
	`CINIT
(
ERRORBUFFER
, 
OBJECTPOINT
, 10),

813 
	`CINIT
(
WRITEFUNCTION
, 
FUNCTIONPOINT
, 11),

817 
	`CINIT
(
READFUNCTION
, 
FUNCTIONPOINT
, 12),

820 
	`CINIT
(
TIMEOUT
, 
LONG
, 13),

831 
	`CINIT
(
INFILESIZE
, 
LONG
, 14),

834 
	`CINIT
(
POSTFIELDS
, 
OBJECTPOINT
, 15),

837 
	`CINIT
(
REFERER
, 
OBJECTPOINT
, 16),

841 
	`CINIT
(
FTPPORT
, 
OBJECTPOINT
, 17),

844 
	`CINIT
(
USERAGENT
, 
OBJECTPOINT
, 18),

853 
	`CINIT
(
LOW_SPEED_LIMIT
, 
LONG
, 19),

856 
	`CINIT
(
LOW_SPEED_TIME
, 
LONG
, 20),

864 
	`CINIT
(
RESUME_FROM
, 
LONG
, 21),

867 
	`CINIT
(
COOKIE
, 
OBJECTPOINT
, 22),

870 
	`CINIT
(
HTTPHEADER
, 
OBJECTPOINT
, 23),

873 
	`CINIT
(
HTTPPOST
, 
OBJECTPOINT
, 24),

876 
	`CINIT
(
SSLCERT
, 
OBJECTPOINT
, 25),

879 
	`CINIT
(
KEYPASSWD
, 
OBJECTPOINT
, 26),

882 
	`CINIT
(
CRLF
, 
LONG
, 27),

885 
	`CINIT
(
QUOTE
, 
OBJECTPOINT
, 28),

889 
	`CINIT
(
WRITEHEADER
, 
OBJECTPOINT
, 29),

893 
	`CINIT
(
COOKIEFILE
, 
OBJECTPOINT
, 31),

897 
	`CINIT
(
SSLVERSION
, 
LONG
, 32),

900 
	`CINIT
(
TIMECONDITION
, 
LONG
, 33),

904 
	`CINIT
(
TIMEVALUE
, 
LONG
, 34),

912 
	`CINIT
(
CUSTOMREQUEST
, 
OBJECTPOINT
, 36),

915 
	`CINIT
(
STDERR
, 
OBJECTPOINT
, 37),

920 
	`CINIT
(
POSTQUOTE
, 
OBJECTPOINT
, 39),

922 
	`CINIT
(
WRITEINFO
, 
OBJECTPOINT
, 40),

924 
	`CINIT
(
VERBOSE
, 
LONG
, 41),

925 
	`CINIT
(
HEADER
, 
LONG
, 42),

926 
	`CINIT
(
NOPROGRESS
, 
LONG
, 43),

927 
	`CINIT
(
NOBODY
, 
LONG
, 44),

928 
	`CINIT
(
FAILONERROR
, 
LONG
, 45),

929 
	`CINIT
(
UPLOAD
, 
LONG
, 46),

930 
	`CINIT
(
POST
, 
LONG
, 47),

931 
	`CINIT
(
DIRLISTONLY
, 
LONG
, 48),

933 
	`CINIT
(
APPEND
, 
LONG
, 50),

937 
	`CINIT
(
NETRC
, 
LONG
, 51),

939 
	`CINIT
(
FOLLOWLOCATION
, 
LONG
, 52),

941 
	`CINIT
(
TRANSFERTEXT
, 
LONG
, 53),

942 
	`CINIT
(
PUT
, 
LONG
, 54),

949 
	`CINIT
(
PROGRESSFUNCTION
, 
FUNCTIONPOINT
, 56),

952 
	`CINIT
(
PROGRESSDATA
, 
OBJECTPOINT
, 57),

955 
	`CINIT
(
AUTOREFERER
, 
LONG
, 58),

959 
	`CINIT
(
PROXYPORT
, 
LONG
, 59),

962 
	`CINIT
(
POSTFIELDSIZE
, 
LONG
, 60),

965 
	`CINIT
(
HTTPPROXYTUNNEL
, 
LONG
, 61),

968 
	`CINIT
(
INTERFACE
, 
OBJECTPOINT
, 62),

973 
	`CINIT
(
KRBLEVEL
, 
OBJECTPOINT
, 63),

976 
	`CINIT
(
SSL_VERIFYPEER
, 
LONG
, 64),

980 
	`CINIT
(
CAINFO
, 
OBJECTPOINT
, 65),

986 
	`CINIT
(
MAXREDIRS
, 
LONG
, 68),

990 
	`CINIT
(
FILETIME
, 
LONG
, 69),

993 
	`CINIT
(
TELNETOPTIONS
, 
OBJECTPOINT
, 70),

996 
	`CINIT
(
MAXCONNECTS
, 
LONG
, 71),

998 
	`CINIT
(
CLOSEPOLICY
, 
LONG
, 72),

1005 
	`CINIT
(
FRESH_CONNECT
, 
LONG
, 74),

1010 
	`CINIT
(
FORBID_REUSE
, 
LONG
, 75),

1014 
	`CINIT
(
RANDOM_FILE
, 
OBJECTPOINT
, 76),

1017 
	`CINIT
(
EGDSOCKET
, 
OBJECTPOINT
, 77),

1022 
	`CINIT
(
CONNECTTIMEOUT
, 
LONG
, 78),

1026 
	`CINIT
(
HEADERFUNCTION
, 
FUNCTIONPOINT
, 79),

1031 
	`CINIT
(
HTTPGET
, 
LONG
, 80),

1036 
	`CINIT
(
SSL_VERIFYHOST
, 
LONG
, 81),

1040 
	`CINIT
(
COOKIEJAR
, 
OBJECTPOINT
, 82),

1043 
	`CINIT
(
SSL_CIPHER_LIST
, 
OBJECTPOINT
, 83),

1047 
	`CINIT
(
HTTP_VERSION
, 
LONG
, 84),

1052 
	`CINIT
(
FTP_USE_EPSV
, 
LONG
, 85),

1055 
	`CINIT
(
SSLCERTTYPE
, 
OBJECTPOINT
, 86),

1058 
	`CINIT
(
SSLKEY
, 
OBJECTPOINT
, 87),

1061 
	`CINIT
(
SSLKEYTYPE
, 
OBJECTPOINT
, 88),

1064 
	`CINIT
(
SSLENGINE
, 
OBJECTPOINT
, 89),

1069 
	`CINIT
(
SSLENGINE_DEFAULT
, 
LONG
, 90),

1072 
	`CINIT
(
DNS_USE_GLOBAL_CACHE
, 
LONG
, 91),

1075 
	`CINIT
(
DNS_CACHE_TIMEOUT
, 
LONG
, 92),

1078 
	`CINIT
(
PREQUOTE
, 
OBJECTPOINT
, 93),

1081 
	`CINIT
(
DEBUGFUNCTION
, 
FUNCTIONPOINT
, 94),

1084 
	`CINIT
(
DEBUGDATA
, 
OBJECTPOINT
, 95),

1087 
	`CINIT
(
COOKIESESSION
, 
LONG
, 96),

1091 
	`CINIT
(
CAPATH
, 
OBJECTPOINT
, 97),

1094 
	`CINIT
(
BUFFERSIZE
, 
LONG
, 98),

1099 
	`CINIT
(
NOSIGNAL
, 
LONG
, 99),

1102 
	`CINIT
(
SHARE
, 
OBJECTPOINT
, 100),

1106 
	`CINIT
(
PROXYTYPE
, 
LONG
, 101),

1111 
	`CINIT
(
ACCEPT_ENCODING
, 
OBJECTPOINT
, 102),

1114 
	`CINIT
(
PRIVATE
, 
OBJECTPOINT
, 103),

1117 
	`CINIT
(
HTTP200ALIASES
, 
OBJECTPOINT
, 104),

1122 
	`CINIT
(
UNRESTRICTED_AUTH
, 
LONG
, 105),

1127 
	`CINIT
(
FTP_USE_EPRT
, 
LONG
, 106),

1132 
	`CINIT
(
HTTPAUTH
, 
LONG
, 107),

1137 
	`CINIT
(
SSL_CTX_FUNCTION
, 
FUNCTIONPOINT
, 108),

1141 
	`CINIT
(
SSL_CTX_DATA
, 
OBJECTPOINT
, 109),

1147 
	`CINIT
(
FTP_CREATE_MISSING_DIRS
, 
LONG
, 110),

1152 
	`CINIT
(
PROXYAUTH
, 
LONG
, 111),

1158 
	`CINIT
(
FTP_RESPONSE_TIMEOUT
, 
LONG
, 112),

1159 
	#CURLOPT_SERVER_RESPONSE_TIMEOUT
 
CURLOPT_FTP_RESPONSE_TIMEOUT


	)

1164 
	`CINIT
(
IPRESOLVE
, 
LONG
, 113),

1171 
	`CINIT
(
MAXFILESIZE
, 
LONG
, 114),

1176 
	`CINIT
(
INFILESIZE_LARGE
, 
OFF_T
, 115),

1181 
	`CINIT
(
RESUME_FROM_LARGE
, 
OFF_T
, 116),

1186 
	`CINIT
(
MAXFILESIZE_LARGE
, 
OFF_T
, 117),

1192 
	`CINIT
(
NETRC_FILE
, 
OBJECTPOINT
, 118),

1199 
	`CINIT
(
USE_SSL
, 
LONG
, 119),

1202 
	`CINIT
(
POSTFIELDSIZE_LARGE
, 
OFF_T
, 120),

1205 
	`CINIT
(
TCP_NODELAY
, 
LONG
, 121),

1225 
	`CINIT
(
FTPSSLAUTH
, 
LONG
, 129),

1227 
	`CINIT
(
IOCTLFUNCTION
, 
FUNCTIONPOINT
, 130),

1228 
	`CINIT
(
IOCTLDATA
, 
OBJECTPOINT
, 131),

1235 
	`CINIT
(
FTP_ACCOUNT
, 
OBJECTPOINT
, 134),

1238 
	`CINIT
(
COOKIELIST
, 
OBJECTPOINT
, 135),

1241 
	`CINIT
(
IGNORE_CONTENT_LENGTH
, 
LONG
, 136),

1247 
	`CINIT
(
FTP_SKIP_PASV_IP
, 
LONG
, 137),

1251 
	`CINIT
(
FTP_FILEMETHOD
, 
LONG
, 138),

1254 
	`CINIT
(
LOCALPORT
, 
LONG
, 139),

1259 
	`CINIT
(
LOCALPORTRANGE
, 
LONG
, 140),

1263 
	`CINIT
(
CONNECT_ONLY
, 
LONG
, 141),

1267 
	`CINIT
(
CONV_FROM_NETWORK_FUNCTION
, 
FUNCTIONPOINT
, 142),

1271 
	`CINIT
(
CONV_TO_NETWORK_FUNCTION
, 
FUNCTIONPOINT
, 143),

1276 
	`CINIT
(
CONV_FROM_UTF8_FUNCTION
, 
FUNCTIONPOINT
, 144),

1280 
	`CINIT
(
MAX_SEND_SPEED_LARGE
, 
OFF_T
, 145),

1281 
	`CINIT
(
MAX_RECV_SPEED_LARGE
, 
OFF_T
, 146),

1284 
	`CINIT
(
FTP_ALTERNATIVE_TO_USER
, 
OBJECTPOINT
, 147),

1287 
	`CINIT
(
SOCKOPTFUNCTION
, 
FUNCTIONPOINT
, 148),

1288 
	`CINIT
(
SOCKOPTDATA
, 
OBJECTPOINT
, 149),

1292 
	`CINIT
(
SSL_SESSIONID_CACHE
, 
LONG
, 150),

1295 
	`CINIT
(
SSH_AUTH_TYPES
, 
LONG
, 151),

1298 
	`CINIT
(
SSH_PUBLIC_KEYFILE
, 
OBJECTPOINT
, 152),

1299 
	`CINIT
(
SSH_PRIVATE_KEYFILE
, 
OBJECTPOINT
, 153),

1302 
	`CINIT
(
FTP_SSL_CCC
, 
LONG
, 154),

1305 
	`CINIT
(
TIMEOUT_MS
, 
LONG
, 155),

1306 
	`CINIT
(
CONNECTTIMEOUT_MS
, 
LONG
, 156),

1310 
	`CINIT
(
HTTP_TRANSFER_DECODING
, 
LONG
, 157),

1311 
	`CINIT
(
HTTP_CONTENT_DECODING
, 
LONG
, 158),

1315 
	`CINIT
(
NEW_FILE_PERMS
, 
LONG
, 159),

1316 
	`CINIT
(
NEW_DIRECTORY_PERMS
, 
LONG
, 160),

1320 
	`CINIT
(
POSTREDIR
, 
LONG
, 161),

1323 
	`CINIT
(
SSH_HOST_PUBLIC_KEY_MD5
, 
OBJECTPOINT
, 162),

1329 
	`CINIT
(
OPENSOCKETFUNCTION
, 
FUNCTIONPOINT
, 163),

1330 
	`CINIT
(
OPENSOCKETDATA
, 
OBJECTPOINT
, 164),

1333 
	`CINIT
(
COPYPOSTFIELDS
, 
OBJECTPOINT
, 165),

1336 
	`CINIT
(
PROXY_TRANSFER_MODE
, 
LONG
, 166),

1339 
	`CINIT
(
SEEKFUNCTION
, 
FUNCTIONPOINT
, 167),

1340 
	`CINIT
(
SEEKDATA
, 
OBJECTPOINT
, 168),

1343 
	`CINIT
(
CRLFILE
, 
OBJECTPOINT
, 169),

1346 
	`CINIT
(
ISSUERCERT
, 
OBJECTPOINT
, 170),

1349 
	`CINIT
(
ADDRESS_SCOPE
, 
LONG
, 171),

1354 
	`CINIT
(
CERTINFO
, 
LONG
, 172),

1357 
	`CINIT
(
USERNAME
, 
OBJECTPOINT
, 173),

1358 
	`CINIT
(
PASSWORD
, 
OBJECTPOINT
, 174),

1361 
	`CINIT
(
PROXYUSERNAME
, 
OBJECTPOINT
, 175),

1362 
	`CINIT
(
PROXYPASSWORD
, 
OBJECTPOINT
, 176),

1371 
	`CINIT
(
NOPROXY
, 
OBJECTPOINT
, 177),

1374 
	`CINIT
(
TFTP_BLKSIZE
, 
LONG
, 178),

1377 
	`CINIT
(
SOCKS5_GSSAPI_SERVICE
, 
OBJECTPOINT
, 179),

1380 
	`CINIT
(
SOCKS5_GSSAPI_NEC
, 
LONG
, 180),

1386 
	`CINIT
(
PROTOCOLS
, 
LONG
, 181),

1392 
	`CINIT
(
REDIR_PROTOCOLS
, 
LONG
, 182),

1395 
	`CINIT
(
SSH_KNOWNHOSTS
, 
OBJECTPOINT
, 183),

1399 
	`CINIT
(
SSH_KEYFUNCTION
, 
FUNCTIONPOINT
, 184),

1402 
	`CINIT
(
SSH_KEYDATA
, 
OBJECTPOINT
, 185),

1405 
	`CINIT
(
MAIL_FROM
, 
OBJECTPOINT
, 186),

1408 
	`CINIT
(
MAIL_RCPT
, 
OBJECTPOINT
, 187),

1411 
	`CINIT
(
FTP_USE_PRET
, 
LONG
, 188),

1414 
	`CINIT
(
RTSP_REQUEST
, 
LONG
, 189),

1417 
	`CINIT
(
RTSP_SESSION_ID
, 
OBJECTPOINT
, 190),

1420 
	`CINIT
(
RTSP_STREAM_URI
, 
OBJECTPOINT
, 191),

1423 
	`CINIT
(
RTSP_TRANSPORT
, 
OBJECTPOINT
, 192),

1426 
	`CINIT
(
RTSP_CLIENT_CSEQ
, 
LONG
, 193),

1429 
	`CINIT
(
RTSP_SERVER_CSEQ
, 
LONG
, 194),

1432 
	`CINIT
(
INTERLEAVEDATA
, 
OBJECTPOINT
, 195),

1435 
	`CINIT
(
INTERLEAVEFUNCTION
, 
FUNCTIONPOINT
, 196),

1438 
	`CINIT
(
WILDCARDMATCH
, 
LONG
, 197),

1442 
	`CINIT
(
CHUNK_BGN_FUNCTION
, 
FUNCTIONPOINT
, 198),

1446 
	`CINIT
(
CHUNK_END_FUNCTION
, 
FUNCTIONPOINT
, 199),

1449 
	`CINIT
(
FNMATCH_FUNCTION
, 
FUNCTIONPOINT
, 200),

1452 
	`CINIT
(
CHUNK_DATA
, 
OBJECTPOINT
, 201),

1455 
	`CINIT
(
FNMATCH_DATA
, 
OBJECTPOINT
, 202),

1458 
	`CINIT
(
RESOLVE
, 
OBJECTPOINT
, 203),

1461 
	`CINIT
(
TLSAUTH_USERNAME
, 
OBJECTPOINT
, 204),

1464 
	`CINIT
(
TLSAUTH_PASSWORD
, 
OBJECTPOINT
, 205),

1467 
	`CINIT
(
TLSAUTH_TYPE
, 
OBJECTPOINT
, 206),

1479 
	`CINIT
(
TRANSFER_ENCODING
, 
LONG
, 207),

1483 
	`CINIT
(
CLOSESOCKETFUNCTION
, 
FUNCTIONPOINT
, 208),

1484 
	`CINIT
(
CLOSESOCKETDATA
, 
OBJECTPOINT
, 209),

1487 
	`CINIT
(
GSSAPI_DELEGATION
, 
LONG
, 210),

1489 
CURLOPT_LASTENTRY


1490 } 
	tCURL›ti⁄
;

1492 #i‚de‡
CURL_NO_OLDIES


1499 
	#CURLOPT_POST301
 
CURLOPT_POSTREDIR


	)

1504 
	#CURLOPT_SSLKEYPASSWD
 
CURLOPT_KEYPASSWD


	)

1505 
	#CURLOPT_FTPAPPEND
 
CURLOPT_APPEND


	)

1506 
	#CURLOPT_FTPLISTONLY
 
CURLOPT_DIRLISTONLY


	)

1507 
	#CURLOPT_FTP_SSL
 
CURLOPT_USE_SSL


	)

1511 
	#CURLOPT_SSLCERTPASSWD
 
CURLOPT_KEYPASSWD


	)

1512 
	#CURLOPT_KRB4LEVEL
 
CURLOPT_KRBLEVEL


	)

1516 #unde‡
CURLOPT_DNS_USE_GLOBAL_CACHE


1523 
	#CURL_IPRESOLVE_WHATEVER
 0

	)

1525 
	#CURL_IPRESOLVE_V4
 1

	)

1526 
	#CURL_IPRESOLVE_V6
 2

	)

1529 
	#CURLOPT_WRITEDATA
 
CURLOPT_FILE


	)

1530 
	#CURLOPT_READDATA
 
CURLOPT_INFILE


	)

1531 
	#CURLOPT_HEADERDATA
 
CURLOPT_WRITEHEADER


	)

1532 
	#CURLOPT_RTSPHEADER
 
CURLOPT_HTTPHEADER


	)

1536 
CURL_HTTP_VERSION_NONE
,

1539 
CURL_HTTP_VERSION_1_0
,

1540 
CURL_HTTP_VERSION_1_1
,

1542 
CURL_HTTP_VERSION_LAST


1549 
CURL_RTSPREQ_NONE
,

1550 
CURL_RTSPREQ_OPTIONS
,

1551 
CURL_RTSPREQ_DESCRIBE
,

1552 
CURL_RTSPREQ_ANNOUNCE
,

1553 
CURL_RTSPREQ_SETUP
,

1554 
CURL_RTSPREQ_PLAY
,

1555 
CURL_RTSPREQ_PAUSE
,

1556 
CURL_RTSPREQ_TEARDOWN
,

1557 
CURL_RTSPREQ_GET_PARAMETER
,

1558 
CURL_RTSPREQ_SET_PARAMETER
,

1559 
CURL_RTSPREQ_RECORD
,

1560 
CURL_RTSPREQ_RECEIVE
,

1561 
CURL_RTSPREQ_LAST


1565 
	eCURL_NETRC_OPTION
 {

1566 
CURL_NETRC_IGNORED
,

1568 
CURL_NETRC_OPTIONAL
,

1570 
CURL_NETRC_REQUIRED
,

1573 
CURL_NETRC_LAST


1577 
CURL_SSLVERSION_DEFAULT
,

1578 
CURL_SSLVERSION_TLSv1
,

1579 
CURL_SSLVERSION_SSLv2
,

1580 
CURL_SSLVERSION_SSLv3
,

1582 
CURL_SSLVERSION_LAST


1585 
	eCURL_TLSAUTH
 {

1586 
CURL_TLSAUTH_NONE
,

1587 
CURL_TLSAUTH_SRP
,

1588 
CURL_TLSAUTH_LAST


1595 
	#CURL_REDIR_GET_ALL
 0

	)

1596 
	#CURL_REDIR_POST_301
 1

	)

1597 
	#CURL_REDIR_POST_302
 2

	)

1598 
	#CURL_REDIR_POST_ALL
 (
CURL_REDIR_POST_301
|
CURL_REDIR_POST_302
)

	)

1601 
CURL_TIMECOND_NONE
,

1603 
CURL_TIMECOND_IFMODSINCE
,

1604 
CURL_TIMECOND_IFUNMODSINCE
,

1605 
CURL_TIMECOND_LASTMOD
,

1607 
CURL_TIMECOND_LAST


1608 } 
	tcuæ_TimeC⁄d
;

1613 
CURL_EXTERN
 (
cuæ_°ªquÆ
)(c⁄° *
s1
, c⁄° *
s2
);

1614 
CURL_EXTERN
 (
cuæ_°∫equÆ
)(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
);

1617 #ifde‡
CFINIT


1618 #unde‡
CFINIT


1621 #ifde‡
CURL_ISOCPP


1622 
	#CFINIT
(
«me
Ë
CURLFORM_
 ## 
	)
name

1625 
	#CFINIT
(
«me
Ë
CURLFORM_
 
	)
name

1629 
	`CFINIT
(
NOTHING
),

1632 
	`CFINIT
(
COPYNAME
),

1633 
	`CFINIT
(
PTRNAME
),

1634 
	`CFINIT
(
NAMELENGTH
),

1635 
	`CFINIT
(
COPYCONTENTS
),

1636 
	`CFINIT
(
PTRCONTENTS
),

1637 
	`CFINIT
(
CONTENTSLENGTH
),

1638 
	`CFINIT
(
FILECONTENT
),

1639 
	`CFINIT
(
ARRAY
),

1640 
	`CFINIT
(
OBSOLETE
),

1641 
	`CFINIT
(
FILE
),

1643 
	`CFINIT
(
BUFFER
),

1644 
	`CFINIT
(
BUFFERPTR
),

1645 
	`CFINIT
(
BUFFERLENGTH
),

1647 
	`CFINIT
(
CONTENTTYPE
),

1648 
	`CFINIT
(
CONTENTHEADER
),

1649 
	`CFINIT
(
FILENAME
),

1650 
	`CFINIT
(
END
),

1651 
	`CFINIT
(
OBSOLETE2
),

1653 
	`CFINIT
(
STREAM
),

1655 
CURLFORM_LASTENTRY


1656 } 
	tCURLf‹m›ti⁄
;

1658 #unde‡
CFINIT


1661 
	scuæ_f‹ms
 {

1662 
CURLf‹m›ti⁄
 
›ti⁄
;

1663 c⁄° *
vÆue
;

1683 
CURL_FORMADD_OK
,

1685 
CURL_FORMADD_MEMORY
,

1686 
CURL_FORMADD_OPTION_TWICE
,

1687 
CURL_FORMADD_NULL
,

1688 
CURL_FORMADD_UNKNOWN_OPTION
,

1689 
CURL_FORMADD_INCOMPLETE
,

1690 
CURL_FORMADD_ILLEGAL_ARRAY
,

1691 
CURL_FORMADD_DISABLED
,

1693 
CURL_FORMADD_LAST


1694 } 
	tCURLFORMcode
;

1705 
CURL_EXTERN
 
CURLFORMcode
 
	`cuæ_f‹madd
(
cuæ_hâµo°
 **
hâµo°
,

1706 
cuæ_hâµo°
 **
œ°_po°
,

1717 
	`size_t
 (*
	tcuæ_f‹mgë_ˇŒback
)(*
	t¨g
, c⁄° *
	tbuf
,

1718 
	tsize_t
 
	tÀn
);

1730 
CURL_EXTERN
 
	`cuæ_f‹mgë
(
cuæ_hâµo°
 *
f‹m
, *
¨g
,

1731 
cuæ_f‹mgë_ˇŒback
 
≠≥nd
);

1739 
CURL_EXTERN
 
	`cuæ_f‹m‰ì
(
cuæ_hâµo°
 *
f‹m
);

1749 
CURL_EXTERN
 *
	`cuæ_gëív
(c⁄° *
v¨übÀ
);

1758 
CURL_EXTERN
 *
	`cuæ_vîsi⁄
();

1769 
CURL_EXTERN
 *
	`cuæ_ósy_esˇ≥
(
CURL
 *
h™dÀ
,

1770 c⁄° *
°rög
,

1771 
Àngth
);

1774 
CURL_EXTERN
 *
	`cuæ_esˇ≥
(c⁄° *
°rög
,

1775 
Àngth
);

1789 
CURL_EXTERN
 *
	`cuæ_ósy_u√sˇ≥
(
CURL
 *
h™dÀ
,

1790 c⁄° *
°rög
,

1791 
Àngth
,

1792 *
ouéígth
);

1795 
CURL_EXTERN
 *
	`cuæ_u√sˇ≥
(c⁄° *
°rög
,

1796 
Àngth
);

1806 
CURL_EXTERN
 
	`cuæ_‰ì
(*
p
);

1818 
CURL_EXTERN
 
CURLcode
 
	`cuæ_globÆ_öô
(
Êags
);

1833 
CURL_EXTERN
 
CURLcode
 
	`cuæ_globÆ_öô_mem
(
Êags
,

1834 
cuæ_mÆloc_ˇŒback
 
m
,

1835 
cuæ_‰ì_ˇŒback
 
f
,

1836 
cuæ_ªÆloc_ˇŒback
 
r
,

1837 
cuæ_°rdup_ˇŒback
 
s
,

1838 
cuæ_ˇŒoc_ˇŒback
 
c
);

1848 
CURL_EXTERN
 
	`cuæ_globÆ_˛ónup
();

1851 
	scuæ_¶i°
 {

1852 *
d©a
;

1853 
cuæ_¶i°
 *
√xt
;

1864 
CURL_EXTERN
 
cuæ_¶i°
 *
	`cuæ_¶i°_≠≥nd
(curl_slist *,

1874 
CURL_EXTERN
 
	`cuæ_¶i°_‰ì_Æl
(
cuæ_¶i°
 *);

1885 
CURL_EXTERN
 
time_t
 
	`cuæ_gëd©e
(c⁄° *
p
, c⁄°Åime_à*
unu£d
);

1889 
	scuæ_˚πöfo
 {

1890 
num_of_˚πs
;

1891 
cuæ_¶i°
 **
˚πöfo
;

1896 
	#CURLINFO_STRING
 0x100000

	)

1897 
	#CURLINFO_LONG
 0x200000

	)

1898 
	#CURLINFO_DOUBLE
 0x300000

	)

1899 
	#CURLINFO_SLIST
 0x400000

	)

1900 
	#CURLINFO_MASK
 0x0fffff

	)

1901 
	#CURLINFO_TYPEMASK
 0xf00000

	)

1904 
CURLINFO_NONE
,

1905 
CURLINFO_EFFECTIVE_URL
 = 
CURLINFO_STRING
 + 1,

1906 
CURLINFO_RESPONSE_CODE
 = 
CURLINFO_LONG
 + 2,

1907 
CURLINFO_TOTAL_TIME
 = 
CURLINFO_DOUBLE
 + 3,

1908 
CURLINFO_NAMELOOKUP_TIME
 = 
CURLINFO_DOUBLE
 + 4,

1909 
CURLINFO_CONNECT_TIME
 = 
CURLINFO_DOUBLE
 + 5,

1910 
CURLINFO_PRETRANSFER_TIME
 = 
CURLINFO_DOUBLE
 + 6,

1911 
CURLINFO_SIZE_UPLOAD
 = 
CURLINFO_DOUBLE
 + 7,

1912 
CURLINFO_SIZE_DOWNLOAD
 = 
CURLINFO_DOUBLE
 + 8,

1913 
CURLINFO_SPEED_DOWNLOAD
 = 
CURLINFO_DOUBLE
 + 9,

1914 
CURLINFO_SPEED_UPLOAD
 = 
CURLINFO_DOUBLE
 + 10,

1915 
CURLINFO_HEADER_SIZE
 = 
CURLINFO_LONG
 + 11,

1916 
CURLINFO_REQUEST_SIZE
 = 
CURLINFO_LONG
 + 12,

1917 
CURLINFO_SSL_VERIFYRESULT
 = 
CURLINFO_LONG
 + 13,

1918 
CURLINFO_FILETIME
 = 
CURLINFO_LONG
 + 14,

1919 
CURLINFO_CONTENT_LENGTH_DOWNLOAD
 = 
CURLINFO_DOUBLE
 + 15,

1920 
CURLINFO_CONTENT_LENGTH_UPLOAD
 = 
CURLINFO_DOUBLE
 + 16,

1921 
CURLINFO_STARTTRANSFER_TIME
 = 
CURLINFO_DOUBLE
 + 17,

1922 
CURLINFO_CONTENT_TYPE
 = 
CURLINFO_STRING
 + 18,

1923 
CURLINFO_REDIRECT_TIME
 = 
CURLINFO_DOUBLE
 + 19,

1924 
CURLINFO_REDIRECT_COUNT
 = 
CURLINFO_LONG
 + 20,

1925 
CURLINFO_PRIVATE
 = 
CURLINFO_STRING
 + 21,

1926 
CURLINFO_HTTP_CONNECTCODE
 = 
CURLINFO_LONG
 + 22,

1927 
CURLINFO_HTTPAUTH_AVAIL
 = 
CURLINFO_LONG
 + 23,

1928 
CURLINFO_PROXYAUTH_AVAIL
 = 
CURLINFO_LONG
 + 24,

1929 
CURLINFO_OS_ERRNO
 = 
CURLINFO_LONG
 + 25,

1930 
CURLINFO_NUM_CONNECTS
 = 
CURLINFO_LONG
 + 26,

1931 
CURLINFO_SSL_ENGINES
 = 
CURLINFO_SLIST
 + 27,

1932 
CURLINFO_COOKIELIST
 = 
CURLINFO_SLIST
 + 28,

1933 
CURLINFO_LASTSOCKET
 = 
CURLINFO_LONG
 + 29,

1934 
CURLINFO_FTP_ENTRY_PATH
 = 
CURLINFO_STRING
 + 30,

1935 
CURLINFO_REDIRECT_URL
 = 
CURLINFO_STRING
 + 31,

1936 
CURLINFO_PRIMARY_IP
 = 
CURLINFO_STRING
 + 32,

1937 
CURLINFO_APPCONNECT_TIME
 = 
CURLINFO_DOUBLE
 + 33,

1938 
CURLINFO_CERTINFO
 = 
CURLINFO_SLIST
 + 34,

1939 
CURLINFO_CONDITION_UNMET
 = 
CURLINFO_LONG
 + 35,

1940 
CURLINFO_RTSP_SESSION_ID
 = 
CURLINFO_STRING
 + 36,

1941 
CURLINFO_RTSP_CLIENT_CSEQ
 = 
CURLINFO_LONG
 + 37,

1942 
CURLINFO_RTSP_SERVER_CSEQ
 = 
CURLINFO_LONG
 + 38,

1943 
CURLINFO_RTSP_CSEQ_RECV
 = 
CURLINFO_LONG
 + 39,

1944 
CURLINFO_PRIMARY_PORT
 = 
CURLINFO_LONG
 + 40,

1945 
CURLINFO_LOCAL_IP
 = 
CURLINFO_STRING
 + 41,

1946 
CURLINFO_LOCAL_PORT
 = 
CURLINFO_LONG
 + 42,

1949 
CURLINFO_LASTONE
 = 42

1950 } 
	tCURLINFO
;

1954 
	#CURLINFO_HTTP_CODE
 
CURLINFO_RESPONSE_CODE


	)

1957 
CURLCLOSEPOLICY_NONE
,

1959 
CURLCLOSEPOLICY_OLDEST
,

1960 
CURLCLOSEPOLICY_LEAST_RECENTLY_USED
,

1961 
CURLCLOSEPOLICY_LEAST_TRAFFIC
,

1962 
CURLCLOSEPOLICY_SLOWEST
,

1963 
CURLCLOSEPOLICY_CALLBACK
,

1965 
CURLCLOSEPOLICY_LAST


1966 } 
	tcuæ_˛o£pﬁicy
;

1968 
	#CURL_GLOBAL_SSL
 (1<<0)

	)

1969 
	#CURL_GLOBAL_WIN32
 (1<<1)

	)

1970 
	#CURL_GLOBAL_ALL
 (
CURL_GLOBAL_SSL
|
CURL_GLOBAL_WIN32
)

	)

1971 
	#CURL_GLOBAL_NOTHING
 0

	)

1972 
	#CURL_GLOBAL_DEFAULT
 
CURL_GLOBAL_ALL


	)

1981 
CURL_LOCK_DATA_NONE
 = 0,

1986 
CURL_LOCK_DATA_SHARE
,

1987 
CURL_LOCK_DATA_COOKIE
,

1988 
CURL_LOCK_DATA_DNS
,

1989 
CURL_LOCK_DATA_SSL_SESSION
,

1990 
CURL_LOCK_DATA_CONNECT
,

1991 
CURL_LOCK_DATA_LAST


1992 } 
	tcuæ_lock_d©a
;

1996 
CURL_LOCK_ACCESS_NONE
 = 0,

1997 
CURL_LOCK_ACCESS_SHARED
 = 1,

1998 
CURL_LOCK_ACCESS_SINGLE
 = 2,

1999 
CURL_LOCK_ACCESS_LAST


2000 } 
	tcuæ_lock_ac˚ss
;

2002 (*
	tcuæ_lock_fun˘i⁄
)(
	tCURL
 *
	th™dÀ
,

2003 
	tcuæ_lock_d©a
 
	td©a
,

2004 
	tcuæ_lock_ac˚ss
 
	tlockty≥
,

2005 *
	tu£Ωå
);

2006 (*
	tcuæ_u∆ock_fun˘i⁄
)(
	tCURL
 *
	th™dÀ
,

2007 
	tcuæ_lock_d©a
 
	td©a
,

2008 *
	tu£Ωå
);

2010 
	tCURLSH
;

2013 
CURLSHE_OK
,

2014 
CURLSHE_BAD_OPTION
,

2015 
CURLSHE_IN_USE
,

2016 
CURLSHE_INVALID
,

2017 
CURLSHE_NOMEM
,

2018 
CURLSHE_LAST


2019 } 
	tCURLSHcode
;

2022 
CURLSHOPT_NONE
,

2023 
CURLSHOPT_SHARE
,

2024 
CURLSHOPT_UNSHARE
,

2025 
CURLSHOPT_LOCKFUNC
,

2026 
CURLSHOPT_UNLOCKFUNC
,

2027 
CURLSHOPT_USERDATA
,

2029 
CURLSHOPT_LAST


2030 } 
	tCURLSH›ti⁄
;

2032 
CURL_EXTERN
 
CURLSH
 *
	`cuæ_sh¨e_öô
();

2033 
CURL_EXTERN
 
CURLSHcode
 
	`cuæ_sh¨e_£t›t
(
CURLSH
 *, 
CURLSH›ti⁄
 
›ti⁄
, ...);

2034 
CURL_EXTERN
 
CURLSHcode
 
	`cuæ_sh¨e_˛ónup
(
CURLSH
 *);

2041 
CURLVERSION_FIRST
,

2042 
CURLVERSION_SECOND
,

2043 
CURLVERSION_THIRD
,

2044 
CURLVERSION_FOURTH
,

2045 
CURLVERSION_LAST


2046 } 
	tCURLvîsi⁄
;

2053 
	#CURLVERSION_NOW
 
CURLVERSION_FOURTH


	)

2056 
CURLvîsi⁄
 
age
;

2057 c⁄° *
vîsi⁄
;

2058 
vîsi⁄_num
;

2059 c⁄° *
ho°
;

2060 
„©uªs
;

2061 c⁄° *
s¶_vîsi⁄
;

2062 
s¶_vîsi⁄_num
;

2063 c⁄° *
libz_vîsi⁄
;

2065 c⁄° * c⁄° *
¥Ÿocﬁs
;

2068 c⁄° *
¨es
;

2069 
¨es_num
;

2072 c⁄° *
libidn
;

2077 
ic⁄v_vî_num
;

2079 c⁄° *
libssh_vîsi⁄
;

2081 } 
	tcuæ_vîsi⁄_öfo_d©a
;

2083 
	#CURL_VERSION_IPV6
 (1<<0Ë

	)

2084 
	#CURL_VERSION_KERBEROS4
 (1<<1Ë

	)

2085 
	#CURL_VERSION_SSL
 (1<<2Ë

	)

2086 
	#CURL_VERSION_LIBZ
 (1<<3Ë

	)

2087 
	#CURL_VERSION_NTLM
 (1<<4Ë

	)

2088 
	#CURL_VERSION_GSSNEGOTIATE
 (1<<5Ë

	)

2089 
	#CURL_VERSION_DEBUG
 (1<<6Ë

	)

2090 
	#CURL_VERSION_ASYNCHDNS
 (1<<7Ë

	)

2091 
	#CURL_VERSION_SPNEGO
 (1<<8Ë

	)

2092 
	#CURL_VERSION_LARGEFILE
 (1<<9Ë

	)

2093 
	#CURL_VERSION_IDN
 (1<<10Ë

	)

2094 
	#CURL_VERSION_SSPI
 (1<<11Ë

	)

2095 
	#CURL_VERSION_CONV
 (1<<12Ë

	)

2096 
	#CURL_VERSION_CURLDEBUG
 (1<<13Ë

	)

2097 
	#CURL_VERSION_TLSAUTH_SRP
 (1<<14Ë

	)

2098 
	#CURL_VERSION_NTLM_WB
 (1<<15Ë

	)

2108 
CURL_EXTERN
 
cuæ_vîsi⁄_öfo_d©a
 *
	`cuæ_vîsi⁄_öfo
(
CURLvîsi⁄
);

2119 
CURL_EXTERN
 c⁄° *
	`cuæ_ósy_°ªº‹
(
CURLcode
);

2130 
CURL_EXTERN
 c⁄° *
	`cuæ_sh¨e_°ªº‹
(
CURLSHcode
);

2141 
CURL_EXTERN
 
CURLcode
 
	`cuæ_ósy_∑u£
(
CURL
 *
h™dÀ
, 
bômask
);

2143 
	#CURLPAUSE_RECV
 (1<<0)

	)

2144 
	#CURLPAUSE_RECV_CONT
 (0)

	)

2146 
	#CURLPAUSE_SEND
 (1<<2)

	)

2147 
	#CURLPAUSE_SEND_CONT
 (0)

	)

2149 
	#CURLPAUSE_ALL
 (
CURLPAUSE_RECV
|
CURLPAUSE_SEND
)

	)

2150 
	#CURLPAUSE_CONT
 (
CURLPAUSE_RECV_CONT
|
CURLPAUSE_SEND_CONT
)

	)

2152 #ifde‡ 
__˝lu•lus


2153 
	}
}

2158 
	~"ósy.h
"

2159 
	~"mu…i.h
"

2162 #i‡
deföed
(
__GNUC__
Ë&& deföed(
__GNUC_MINOR__
) && \

2163 ((
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 3)) && \

2164 !
deföed
(
__˝lu•lus
Ë&& !
	$deföed
(
CURL_DISABLE_TYPECHECK
)

2165 
	~"ty≥check-gcc.h
"

2167 #i‡
	`deföed
(
__STDC__
) && (__STDC__ >= 1)

2171 
	#cuæ_ósy_£t›t
(
h™dÀ
,
›t
,
∑øm
Ë
	`cuæ_ósy_£t›t
(h™dÀ,›t,∑øm)

	)

2172 
	#cuæ_ósy_gëöfo
(
h™dÀ
,
öfo
,
¨g
Ë
	`cuæ_ósy_gëöfo
(h™dÀ,öfo,¨g)

	)

2173 
	#cuæ_sh¨e_£t›t
(
sh¨e
,
›t
,
∑øm
Ë
	`cuæ_sh¨e_£t›t
(sh¨e,›t,∑øm)

	)

2174 
	#cuæ_mu…i_£t›t
(
h™dÀ
,
›t
,
∑øm
Ë
	`cuæ_mu…i_£t›t
(h™dÀ,›t,∑øm)

	)

	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

102 || 
deföed
 
__LDBL_COMPAT
)

103 #ifde‡
__LDBL_COMPAT


105 #ifde‡
__USE_ISOC99


106 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

107 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

108 #ifde‡
__REDIRECT_NTH


109 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

110 
__∆dbl_√xâow¨df
)

111 
	`__©åibuã__
 ((
__c⁄°__
));

112 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

113 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

115 (
__x
, 
__y
),

116 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

121 #i‡
deföed
 
__LDBL_COMPAT
 || deföed 
__NO_LONG_DOUBLE_MATH


123 #unde‡
__MATHDECL_1


124 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

125 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

126 
¨gs
, 
Æüs
)

	)

127 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

128 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

134 #i‚de‡
_Ml⁄g_doubÀ_


135 
	#_Ml⁄g_doubÀ_
 

	)

137 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

138 #ifde‡
__STDC__


139 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

141 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

143 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

144 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

145 
	#__MATH_DECLARE_LDOUBLE
 1

	)

146 
	~<bôs/m©hˇŒs.h
>

147 #unde‡
_MdoubÀ_


148 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


149 #unde‡
_MdoubÀ_END_NAMESPACE


150 #unde‡
__MATH_PRECNAME


155 #unde‡
__MATHDECL_1


156 #unde‡
__MATHDECL


157 #unde‡
__MATHCALL


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


162 
signgam
;

167 #ifde‡
__USE_ISOC99


205 
FP_NAN
,

206 
	#FP_NAN
 
FP_NAN


	)

207 
FP_INFINITE
,

208 
	#FP_INFINITE
 
FP_INFINITE


	)

209 
FP_ZERO
,

210 
	#FP_ZERO
 
FP_ZERO


	)

211 
FP_SUBNORMAL
,

212 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

213 
FP_NORMAL


214 
	#FP_NORMAL
 
FP_NORMAL


	)

218 #ifde‡
__NO_LONG_DOUBLE_MATH


219 
	#Â˛assify
(
x
) \

220 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

222 
	#Â˛assify
(
x
) \

223 ( (
x
) ==  () \

224 ? 
	`__Â˛assifyf
 (
x
) \

225 :  (
x
) ==  () \

226 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

230 #ifde‡
__NO_LONG_DOUBLE_MATH


231 
	#signbô
(
x
) \

232 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

234 
	#signbô
(
x
) \

235 ( (
x
) ==  () \

236 ? 
	`__signbôf
 (
x
) \

237 :  (
x
) ==  () \

238 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

242 #ifde‡
__NO_LONG_DOUBLE_MATH


243 
	#isföôe
(
x
) \

244 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

246 
	#isföôe
(
x
) \

247 ( (
x
) ==  () \

248 ? 
	`__föôef
 (
x
) \

249 :  (
x
) ==  () \

250 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

254 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

258 #ifde‡
__NO_LONG_DOUBLE_MATH


259 
	#i¢™
(
x
) \

260 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

262 
	#i¢™
(
x
) \

263 ( (
x
) ==  () \

264 ? 
	`__i¢™f
 (
x
) \

265 :  (
x
) ==  () \

266 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

270 #ifde‡
__NO_LONG_DOUBLE_MATH


271 
	#isöf
(
x
) \

272 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

274 
	#isöf
(
x
) \

275 ( (
x
) ==  () \

276 ? 
	`__isöff
 (
x
) \

277 :  (
x
) ==  () \

278 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

282 
	#MATH_ERRNO
 1

	)

283 
	#MATH_ERREXCEPT
 2

	)

288 #i‚de‡
__FAST_MATH__


289 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

294 #ifdef 
__USE_MISC


298 
_IEEE_
 = -1,

299 
_SVID_
,

300 
_XOPEN_
,

301 
_POSIX_
,

302 
_ISOC_


303 } 
	t_LIB_VERSION_TYPE
;

308 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

312 #ifde‡
__USE_SVID


318 #ifde‡
__˝lu•lus


319 
__ex˚±i⁄


321 
ex˚±i⁄


324 
ty≥
;

325 *
«me
;

326 
¨g1
;

327 
¨g2
;

328 
ªtvÆ
;

329 
	}
};

331 #ifde‡
__˝lu•lus


332 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

334 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

337 
	#X_TLOSS
 1.41484755040568800000e+16

	)

340 
	#DOMAIN
 1

	)

341 
	#SING
 2

	)

342 
	#OVERFLOW
 3

	)

343 
	#UNDERFLOW
 4

	)

344 
	#TLOSS
 5

	)

345 
	#PLOSS
 6

	)

348 
	#HUGE
 3.40282347e+38F

	)

352 #ifde‡
__USE_XOPEN


354 
	#MAXFLOAT
 3.40282347e+38F

	)

361 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


362 
	#M_E
 2.7182818284590452354

	)

363 
	#M_LOG2E
 1.4426950408889634074

	)

364 
	#M_LOG10E
 0.43429448190325182765

	)

365 
	#M_LN2
 0.69314718055994530942

	)

366 
	#M_LN10
 2.30258509299404568402

	)

367 
	#M_PI
 3.14159265358979323846

	)

368 
	#M_PI_2
 1.57079632679489661923

	)

369 
	#M_PI_4
 0.78539816339744830962

	)

370 
	#M_1_PI
 0.31830988618379067154

	)

371 
	#M_2_PI
 0.63661977236758134308

	)

372 
	#M_2_SQRTPI
 1.12837916709551257390

	)

373 
	#M_SQRT2
 1.41421356237309504880

	)

374 
	#M_SQRT1_2
 0.70710678118654752440

	)

380 #ifde‡
__USE_GNU


381 
	#M_El
 2.7182818284590452353602874713526625L

	)

382 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

383 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

384 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

385 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

386 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

387 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

388 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

389 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

390 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

391 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

392 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

393 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

400 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


401 
	#__NO_MATH_INLINES
 1

	)

404 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

411 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

412 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

413 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

414 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

415 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

416 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

420 #ifde‡
__USE_EXTERN_INLINES


421 
	~<bôs/m©hölöe.h
>

426 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

427 
	~<bôs/m©h-föôe.h
>

430 #ifde‡
__USE_ISOC99


434 #i‚de‡
isgª©î


435 
	#isgª©î
(
x
, 
y
) \

436 (
__exãnsi⁄__
 \

437 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

438 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

442 #i‚de‡
isgª©îequÆ


443 
	#isgª©îequÆ
(
x
, 
y
) \

444 (
__exãnsi⁄__
 \

445 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

446 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

450 #i‚de‡
i¶ess


451 
	#i¶ess
(
x
, 
y
) \

452 (
__exãnsi⁄__
 \

453 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

454 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

458 #i‚de‡
i¶es£quÆ


459 
	#i¶es£quÆ
(
x
, 
y
) \

460 (
__exãnsi⁄__
 \

461 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

462 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

466 #i‚de‡
i¶essgª©î


467 
	#i¶essgª©î
(
x
, 
y
) \

468 (
__exãnsi⁄__
 \

469 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

470 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

474 #i‚de‡
isun‹dîed


475 
	#isun‹dîed
(
u
, 
v
) \

476 (
__exãnsi⁄__
 \

477 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

478 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

483 
	g__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@Base.h

1 #i‚de‡
BASE_H_INCLUDED


2 
	#BASE_H_INCLUDED


	)

4 
	~<°dlib.h
>

5 
	~<°rög.h
>

6 
	~<°döt.h
>

7 
	~<Êﬂt.h
>

9 
	#__STDC_FORMAT_MACROS


	)

10 
	~<öây≥s.h
>

11 
	~<io°ªam
>

12 
	~<ve˘‹
>

14 
	~<hash_m≠
>

16 
	~<Æg‹ôhm
>

17 
	~<m©h.h
>

18 
	~<cm©h
>

19 
	~<time.h
>

20 
	~<sys/time.h
>

21 
	~<°dio.h
>

23 
	~<°d¨g.h
>

24 
	~<c°d¨g
>

26 
	~<thªad
>

27 
	~<©omic
>

28 
	~<uni°d.h
>

30 
	~<f°ªam
>

31 
	~<s°ªam
>

33 
usög
 
«me•a˚
 
	g°d
;

35 
usög
 
«me•a˚
 
	g__gnu_cxx
;

37 #i‚de‡
Ál£


38 
	#Ál£
 0

	)

40 #i‚de‡
åue


41 
	#åue
 1

	)

44 #i‚de‡
öt8_t


45 
	#öt8_t
 

	)

47 #i‚de‡
uöt8_t


48 
	#uöt8_t
 
öt8_t


	)

50 #i‚de‡
öt32_t


51 
	#öt32_t
 

	)

54 
	#INT32_MAX
 2147483647

	)

55 
	#INT32_MIN
 (-2147483647 - 1)

	)

57 #i‚de‡
uöt32_t


58 
	#uöt32_t
 
öt32_t


	)

59 
	#INT32_MAX
 (~(
uöt32_t
)0)

	)

65 
	#Fudge
 (2.01e-010)

66 

	)

71 
	#Ælocß„
(
T
, 
num
Ë(T*)
	`mÆloc
((T)*num)

	)

72 
	#‰ìß„
(
obj
Ë
	`‰ì
(obj)

	)

73 
	#m©h_sgn
(
num
Ë(“um>0)?1:(“um<0)?-1:0))

	)

78 
	#zì
 'd'

	)

84 
uöt64_t
 
	tUidTy≥
;

85 
	g°d
::
	tve˘‹
<
	tUidTy≥
> 
	tUidVec
;

86 
	ghash_m≠
<
	tUidTy≥
, UidTy≥> 
	tUidM≠
;

87 
	ghash_m≠
<
	tUidTy≥
, UidTy≥>::
	tôî©‹
 
	tUidM≠Iãr
;

89 
UidTy≥
 
	gUidSour˚2
=0;

90 c⁄° 
UidTy≥
 
	gUidNuŒ
=0;

91 ˛as†
	cIdMakî
 {

92 
	mpublic
:

93 
UidTy≥
 
UidSour˚
;

94 
UidTy≥
 
	$MakeId
() {

96 
UidSour˚2
++;

97  
UidSour˚2
;

99 
	}
};

101 
	$‰™d
() {

102  (()
	`ønd
()Ë/ (()
RAND_MAX
);

103 
	}
}

105 #i‡
åue


106 
	#bug¥ötf
 
¥ötf


	)

108 
	$bug¥ötf
(c⁄° *
f‹m©
, ...) {

109 
d⁄e
;

112 
va_li°
 
¨g
;

114 
	`va_°¨t
 (
¨g
, 
f‹m©
);

115 
d⁄e
 = 
	`vÂrötf
 (
°dout
, 
f‹m©
, 
¨g
);

116 
	`va_íd
 (
¨g
);

118  
d⁄e
;

119 
	}
}

122 
«me•a˚
 
	gBôI¡
 {

124 
ölöe
 
TønsBô
(
vÆ
, 
bônum
) {

125  (()((
	gvÆ
 >> 
	gbônum
)&0x1)) * 2.0 - 1.0;

127 
ölöe
 
TønsI¡
(
vÆ
) {

128  (()
	gvÆ
) * 2.0 - 1.0;

130 
ölöe
 
uöt32_t
 
Bô2I¡
(
vÆ
, 
bônum
) {

131  ((
	gvÆ
 >> 
	gbônum
)&0x1);

135 
	$Di°ributi⁄
() {

136 
øysz
 = 10;

137 
numôems
 = 1;

139 
˚Œnum
 = 0; cñ um < 
øysz
; cellnum++) {

140 
øysubÀn
 = 
øysz
 - 
˚Œnum
;

141 
ö¥ob
 = 0;

142 
Á˘out
 = 0;

143 
˙t
 = 0; c¡ < 
numôems
; cnt++) {

144 
ö¥ob
 +(1.0 - 
Á˘out
Ë/ (
øysubÀn
 - 
˙t
);

145 
Á˘out
 = 
ö¥ob
;

150 
	}
}

152 c⁄° 
	gu¥ecisi⁄
 = 1000000.0;

153 
ölöe
 
	$FuŒTime
(
timevÆ
 
tm0
) {

154  
tm0
.
tv_£c
 + ((Èm0.
tv_u£c
)/
u¥ecisi⁄
;

155 
	}
}

157 
	$DñayU¡û
(
hour
) {

158 
timevÆ
 
tim1
;

159 
tm
 *
tmutc
;

161 
	`gëtimeofday
(&
tim1
, 
NULL
);

162 
tmutc
 = 
	`gmtime
(&
tim1
.
tv_£c
);

163 
	`u¶ìp
(30*1000000L);

164 
	`¥ötf
("time:%02d:%02d:%02d\n", 
tmutc
->
tm_hour
,Åmutc->
tm_mö
,Åmutc->
tm_£c
);

165 } 
tmutc
->
tm_hour
<
hour
);

166 
	}
}

169 
	g°d
::
ve˘‹
<
°d
::
°rög
> &
•lô2
(c⁄° std::°rög &
s
, 
dñim
, std::ve˘‹<°d::°rög> &
ñems
, 
MaxDñimëîs
) {

170 
	g°d
::
°rög°ªam
 
s°ªam
(
s
);

171 
	g°d
::
°rög
 
ôem
;

172 
	g˙t
 = 0;

173 
	g°d
::
gëlöe
(
s°ªam
, 
ôem
, 
dñim
)) {

174 
	gñems
.
push_back
(
ôem
);

175 i‡(++
	g˙t
>=
MaxDñimëîs
) {;}

177 if(
	g°d
::
gëlöe
(
s°ªam
, 
ôem
)Ë{ 
	gñems
.
push_back
(item); }

178  
	gñems
;

180 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
•lô2
(c⁄° std::°rög &
s
, 
dñim
, 
MaxDñimëîs
) {

181 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ñems
;

182 
•lô2
(
s
, 
dñim
, 
ñems
, 
MaxDñimëîs
);

183  
	gñems
;

186 
	g°d
::
ve˘‹
<
°d
::
°rög
> &
•lô
(c⁄° std::°rög &
s
, 
dñim
, std::ve˘‹<°d::°rög> &
ñems
) {

187 
°d
::
°rög°ªam
 
ss
(
s
);

188 
	g°d
::
°rög
 
ôem
;

189 
	g°d
::
gëlöe
(
ss
, 
ôem
, 
dñim
)) {

190 
	gñems
.
push_back
(
ôem
);

192  
	gñems
;

194 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
•lô
(c⁄° std::°rög &
s
, 
dñim
) {

195 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ñems
;

196 
•lô
(
s
, 
dñim
, 
ñems
);

197  
	gñems
;

201 
	$föd_™d_ª∂a˚
(
°rög
& 
sour˚
, såög c⁄°& 
föd
, såög c⁄°& 
ª∂a˚
){

202 
°d
::
°rög
::
size_ty≥
 
siz
 = 0; (siz = 
sour˚
.
	`föd
(
föd
, siz)Ë!°d::°rög::
≈os
;){

203 
sour˚
.
	`ª∂a˚
(
siz
, 
föd
.
	`Àngth
(), 
ª∂a˚
);

204 
siz
 +
ª∂a˚
.
	`Àngth
(Ë- 
föd
.length() + 1;

206 
	}
}

208 c⁄° 
	g°d
::
°rög
 
WhôeS∑˚s
( " \f\n\r\t\v" );

209 
TrimRight
–
°d
::
°rög
& 
°r
, c⁄° std::°rög& 
TrimCh¨s
 = 
WhôeS∑˚s
 )

211 
°d
::
°rög
::
size_ty≥
 
pos
 = 
°r
.
föd_œ°_nŸ_of
–
TrimCh¨s
 );

212 
	g°r
.
îa£
–
pos
 + 1 );

214 
TrimLe·
–
°d
::
°rög
& 
°r
, c⁄° std::°rög& 
TrimCh¨s
 = 
WhôeS∑˚s
 )

216 
°d
::
°rög
::
size_ty≥
 
pos
 = 
°r
.
föd_fú°_nŸ_of
–
TrimCh¨s
 );

217 
	g°r
.
îa£
–0, 
pos
 );

219 
Trim
–
°d
::
°rög
& 
°r
, c⁄° std::°rög& 
TrimCh¨s
 = 
WhôeS∑˚s
 )

221 
TrimRight
–
°r
, 
TrimCh¨s
 );

222 
TrimLe·
–
°r
, 
TrimCh¨s
 );

225 #i‡
Ál£


227 
	$Di°ributi⁄
()

229 
øysz
 = 10;

230 
numôems
 = 5;

232 
Te°Numî
, 
Te°Díom
, 
ShaveNum
, 
ShaveDíom
;

234 
ShaveNum
 = 9; 
ShaveDíom
 = 10;

236 
Te°Numî
 = 9 * 8 * 7 * 6 * 5; 
Te°Díom
 = 10 * 9 * 8 * 7 * 6;

249 
˚Œnum
 = 0; cñ um < 
øysz
; cellnum++)

251 
øysubÀn
 = 
øysz
 - 
˚Œnum
;

252 i‡(
øysubÀn
 < 
numôems
)

256 
ö¥ob
 = 0;

257 
Á˘out
 = 0;

258 
˙t
 = 0; c¡ < 
numôems
; cnt++)

260 
ö¥ob
 +(1.0 - 
Á˘out
Ë/ (
øysubÀn
 - 
˙t
);

261 
Á˘out
 = 
ö¥ob
;

264 
Te°Numî
 = 
	`SubFa˘‹ül
(
numôems
, 
øysubÀn
 - 1);

265 
Te°Díom
 = 
	`SubFa˘‹ül
(
numôems
 + 1, 
øysubÀn
);

266 
‰a˘
 = 
Te°Numî
 / 
Te°Díom
;

270 
Sy°em
.
C⁄sﬁe
.
	`WrôeLöe
("˚Œnum:{0},ÑaysubÀn:{1}, ouçrob:{2}, fø˘:{3}", 
˚Œnum
, 
øysubÀn
, 1.0 - 
ö¥ob
, 
‰a˘
 - inprob);

272 
ShaveNum
--; 
ShaveDíom
--;

274 
boﬁ
 
n›
 = 
åue
;

282 
	}
}

283 
	$SubFa˘‹ül
(
°¨t
, 
föish
)

285 
g©hî
 = 1.0;

286 
˙t
 = 
°¨t
; c¡ <
föish
; cnt++)

288 
g©hî
 *
˙t
;

290  
g©hî
;

291 
	}
}

	@Feed.h

1 #i‚de‡
FEED_H_INCLUDED


2 
	#FEED_H_INCLUDED


	)

4 
	~"Ba£.h
"

5 
	~"IoJack.h
"

7 
˛ass
 
	tFìd
 *
	tFìdPå
;

8 ˛as†
	cFìd
 {

9 
	mpublic
:

10 
uöt64_t
 
Gíî©i⁄
;

11 
	m°d
::
ve˘‹
<
GlobÆIoJackPå
> 
P‹ts
;

13 
	$Fìd
() {

14 
Gíî©i⁄
 = 0;

17 ~
	$Fìd
() {

18 
˙t
=0; c¡<
P‹ts
.
	`size
(); cnt++) {

19 
dñëe
 
P‹ts
.
	`©
(
˙t
);

21 
	}
}

23 
ölöe
 
GlobÆIoJackPå
 
	$©
(
size_t
 
dex
Ë{  
P‹ts
.
	`©
(dex); 
	}
}

25 
ölöe
 
size_t
 
	$size
(Ë{  
P‹ts
.
	`size
(); 
	}
}

27 
	$S‹t_P‹ts
() {

28 
°d
::
	`s‹t
 (
P‹ts
.
	`begö
(), P‹ts.
	`íd
(), 
As˚ndögP‹tId
);

29 
	}
}

31 
boﬁ
 
	$As˚ndögP‹tId
(
GlobÆIoJackPå
 
b0
, GlobÆIoJackPå 
b1
) {

32  (
b0
->
P‹tId
 < 
b1
->PortId);

33 
	}
}

35 
uöt32_t
 
	$TªeSórchP‹ts
(
uöt64_t
 
°¨çœ˚
, 
IoDexTy≥
 
èrgë
) {

36 
LoDex
, 
MedDex
, 
HiDex
;

37 
GlobÆIoJackPå
 
MedNode
;

38 
LoDex
=
°¨çœ˚
; 
HiDex
=
P‹ts
.
	`size
();

39 
LoDex
<
HiDex
) {

40 
MedDex
 = (
LoDex
+
HiDex
)/2;

41 
MedNode
 = 
P‹ts
.
	`©
(
MedDex
);

42 i‡(
èrgë
 <
MedNode
->
P‹tId
Ë{ 
HiDex
 = 
MedDex
; }

43 { 
LoDex
 = 
MedDex
+1; }

45  
LoDex
;

46 
	}
}

48 
	$Gíî©eTe°P‹ts
() {

49 
GlobÆIoJackPå
 
jack
;

50 
ch
;

51 
ch
 = 'a';

52 
ch
<=
zì
) {

53 
jack
 = 
√w
 
	`GlobÆIoJack
(); 
this
->
P‹ts
.
	`push_back
(jack);

54 
jack
->
P‹tId
 = 
ch
;

55 
ch
++;

57 
	}
}

59 
	$NextGí
() {

62 
GlobÆIoJackPå
 
Jack
;

63 
size_t
 
siz
 = 
P‹ts
.
	`size
();

64 
˙t
=0; c¡<
siz
; cnt++) {

65 
Jack
 = 
P‹ts
.
	`©
(
˙t
);

66 
Jack
->
VÆue
 = -1.0;

68 
size_t
 
LiveP‹tDex
 = 
Gíî©i⁄
 % 
siz
;

69 
Jack
 = 
P‹ts
.
	`©
(
LiveP‹tDex
);

70 
Jack
->
VÆue
 = 1.0;

71 
Gíî©i⁄
++;

72 
	}
}

	@Feeder.h

1 #i‚de‡
FEEDER_H_INCLUDED


2 
	#FEEDER_H_INCLUDED


	)

4 
	~<io°ªam
>

5 
	~<°dio.h
>

6 
	~<cuæ/cuæ.h
>

7 
	~<°rög
>

9 
	~<f°ªam
>

10 
	~<s°ªam
>

12 
	~<uni°d.h
>

13 
	~<time.h
>

14 
	~<sys/time.h
>

16 
	~<°rög
>

17 
	~<ve˘‹
>

18 
	~"Ba£.h
"

20 
usög
 
«me•a˚
 
	g°d
;

25 ˛as†
	cFìdî
 {

26 
	mpublic
:

28 
vútuÆ
 
	$O≥n
() {}

29 
vútuÆ
 
	$Clo£
(Ë{
	}
}

30 
vútuÆ
 
Fëch
(
°d
::
°rög
 &
glob
) { }

33 ˛as†
	cFûeFìdî
 : 
public
 
Fìdî
 {

34 
public
:

35 
°d
::
°rög
 
öfûï©h
 ="sample.txt";

36 
if°ªam
 
	möfûe
;

38 
vútuÆ
 
	$O≥n
() {

39 
öfûe
.
	`›í
(
öfûï©h
.
	`c_°r
());

40 i‡(
öfûe
.
	`is_›í
()) {

41 } 
cout
 << "UnableÅo open file";

44 
	$Clo£
() {

45 
öfûe
.
	`˛o£
();

46 
	}
}

48 
Fëch
(
°d
::
°rög
 &
glob
Ë
ovîride
 {

49 
°rög
 
löe
;

51 
	gglob
.
˛ór
();

52 i‡(!
	göfûe
.
is_›í
()) {

55 
boﬁ
 
	gInChunk
 = 
Ál£
;

56 
gëlöe
(
öfûe
, 
löe
)) {

57 i‡(
	gInChunk
) {

58 if(
	glöe
.
föd
("<ídcut/>"Ë!
°rög
::
≈os
) {

59 
InChunk
=
Ál£
; ;

61 
	gglob
.
≠≥nd
(
löe
); glob.append("\n");

63 if(
	glöe
.
föd
("<cut>"Ë!
°rög
::
≈os
) {

65 
InChunk
=
åue
; 
	gglob
.
˛ór
();

72 ˛as†
	cWebFìdî
 : 
public
 
Fìdî
 {

73 
public
:

74 
CURL
 *
cuæ
;

76 
	m°d
::
°rög
 
ªadBuf„r
;

77 
	m°d
::
°rög
 
ba£uæ
 = "http://finance.yahoo.com/d/quotes.csv";

78 
	m°d
::
°rög
 
biguæ
 = 
ba£uæ
 + "?s=XOM+BBD-B.TO+JNJ+MSFT+WAG+HOG+AAPL+BAC+FLPSX+VTI+RHT+NVAX+WDAY+HALO+TSLA+LNKD &f=d1t1l1yrsn";

79 
	m°d
::
ve˘‹
<
°d
::
°rög
> 
symbﬁs
 {

82 c⁄° *
	guæ
 = 
biguæ
.
c_°r
();

83 
	gFëchC¡
;

85 
	$WebFìdî
() {

86 
	`BuûdUæ
();

87 
ba£uæ
 = "http://finance.yahoo.com/d/quotes.csv";

88 
biguæ
 = 
ba£uæ
 + "?s=XOM+BBD-B.TO+JNJ+MSFT+WAG+HOG+AAPL+BAC+FLPSX+VTI+RHT+NVAX+WDAY+HALO+TSLA+LNKD &f=d1t1l1yrsn";

89 
uæ
 = 
biguæ
.
	`c_°r
();

90 
FëchC¡
 = 0;

91 
	}
}

93 
	$O≥n
(Ë
ovîride
 {

94 
	`cuæ_globÆ_öô
(
CURL_GLOBAL_ALL
);

95 
cuæ
 = 
	`cuæ_ósy_öô
();

96 if(
cuæ
) {

97 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_URL
, 
uæ
);

99 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_FOLLOWLOCATION
, 1L);

100 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
WrôeCÆlback
);

101 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEDATA
, &
ªadBuf„r
);

103 
	}
}

105 
	$Clo£
(Ë
ovîride
 {

106 
	`cuæ_ósy_˛ónup
(
cuæ
);

107 
	`cuæ_globÆ_˛ónup
();

108 
	}
}

110 
Fëch
(
°d
::
°rög
 &
glob
Ë
ovîride
 {

111 
CURLcode
 
ªs
;

112 
timevÆ
 
	gtim0
, 
	gtim1
;

113 
tm
 *
	gtmloˇl
, *
	gtmutc
;

114 
	gtimnum0
, 
	gtimnum1
;

116 
gëtimeofday
(&
tim0
, 
NULL
);

117 
	gtimnum0
 = 
FuŒTime
(
tim0
);

119 
°rög
 
	glöe
;

120 
	gglob
.
˛ór
();

122 
	gªadBuf„r
.
˛ór
();

123 
	gªs
 = 
cuæ_ósy_≥rf‹m
(
cuæ
);

124 if(
	gªs
 !
CURLE_OK
) {

125 
Ârötf
(
°dîr
, "cuæ_ósy_≥rf‹m(ËÁûed: %s\n", 
cuæ_ósy_°ªº‹
(
ªs
));

128 
gëtimeofday
(&
tim1
, 
NULL
);

129 
	gtimnum1
 = 
FuŒTime
(
tim1
);

130 
	gtmloˇl
 = 
loˇ…ime
(&
tim1
.
tv_£c
);

131 
	gtmutc
 = 
gmtime
(&
tim1
.
tv_£c
);

133 c⁄° *
	gtxt
 = 
ªadBuf„r
.
c_°r
();

136 
	gglob
 = 
ªadBuf„r
;

137 
	gFëchC¡
++;

140 
	$S‹tSymbﬁs
() {

141 
°d
::
	`s‹t
(
symbﬁs
.
	`begö
(), symbﬁs.
	`íd
());

142 
	}
}

144 
	$BuûdUæ
() {

145 
	`S‹tSymbﬁs
();

146 
°d
::
°rög
 
symtxt
;

147 
°d
::
°rög
 
UæTxt
 = 
ba£uæ
 + "?s=";

148 
size_t
 
siz
 = 
symbﬁs
.
	`size
();

149 
˙t
=0; c¡<
siz
; cnt++) {

150 
symtxt
 = 
symbﬁs
.
	`©
(
˙t
);

151 
UæTxt
.
	`≠≥nd
(
symtxt
 + "+");

153 
UæTxt
.
	`≠≥nd
(" &f=d1t1l1yrsn");

154 
	}
}

156 
size_t
 
	$WrôeCÆlback
(*
c⁄ã¡s
, 
size_t
 
size
, size_à
nmemb
, *
u£Ω
)

158 ((
°d
::
°rög
*)
u£Ω
)->
	`≠≥nd
((*)
c⁄ã¡s
, 
size
 * 
nmemb
);

159  
size
 * 
nmemb
;

160 
	}
}

162 
	$maö°r
()

164 
	`DñayU¡û
(12);

165 
timevÆ
 
tim0
, 
tim1
;

172 
tm
 *
tmloˇl
, *
tmutc
;

173 
timnum0
, 
timnum1
;

175 
	`gëtimeofday
(&
tim0
, 
NULL
);

176 
timnum0
 = 
	`FuŒTime
(
tim0
);

178 
CURLcode
 
ªs
;

179 
°d
::
°rög
 
ªadBuf„r
;

180 
	`cuæ_globÆ_öô
(
CURL_GLOBAL_ALL
);

181 
cuæ
 = 
	`cuæ_ósy_öô
();

182 if(
cuæ
) {

183 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_URL
, 
uæ
);

187 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_FOLLOWLOCATION
, 1L);

188 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
WrôeCÆlback
);

189 
	`cuæ_ósy_£t›t
(
cuæ
, 
CURLOPT_WRITEDATA
, &
ªadBuf„r
);

190 
˙t
=0;

191 
åue
) {

192 
ªadBuf„r
.
	`˛ór
();

193 
ªs
 = 
	`cuæ_ósy_≥rf‹m
(
cuæ
);

194 if(
ªs
 !
CURLE_OK
) {

195 
	`Ârötf
(
°dîr
, "cuæ_ósy_≥rf‹m(ËÁûed: %s\n", 
	`cuæ_ósy_°ªº‹
(
ªs
));

198 
	`gëtimeofday
(&
tim1
, 
NULL
);

199 
timnum1
 = 
	`FuŒTime
(
tim1
);

200 
tmloˇl
 = 
	`loˇ…ime
(&
tim1
.
tv_£c
);

201 
tmutc
 = 
	`gmtime
(&
tim1
.
tv_£c
);

204 i‡(
Ál£
) {

205 
	`¥ötf
("<cut>%06i</cut>\n", 
˙t
);

206 
°d
::
ve˘‹
<°d::
°rög
> 
chunks
 = 
	`•lô
(
ªadBuf„r
, '\n');

207 
˙t1
=0; c¡1<
chunks
.
	`size
(); cnt1++) {

208 c⁄° *
txt0
 = 
chunks
.
	`©
(
˙t1
).
	`c_°r
();

209 
	`¥ötf
("****** %†****** \n", 
txt0
);

213 c⁄° *
txt
 = 
ªadBuf„r
.
	`c_°r
();

215 
	`¥ötf
("<cut>%06i; %02d:%02d:%02d; %20.3f</cut>\n", 
˙t
, 
tmloˇl
->
tm_hour
,Åmloˇl->
tm_mö
,Åmloˇl->
tm_£c
, 
timnum1
);

217 
	`¥ötf
("%s", 
txt
);

218 
	`¥ötf
("<endcut/>\n");

223 i‡(
tmutc
->
tm_hour
>=21) {

228 
	`u¶ìp
(500000L);

233 
˙t
++;

236 
	`¥ötf
("\n\n\n");

237 
	`¥ötf
("Sec⁄d†ñ≠£d:%20.3f\n", 
timnum1
-
timnum0
);

238 
	`cuæ_ósy_˛ónup
(
cuæ
);

239 
	`cuæ_globÆ_˛ónup
();

241 
	}
}

244 ˛as†
	cJunkY¨d
 {

245 
	mpublic
:

247 
	$P¨£
() {

248 
°rög
 
löe
;

249 
°rög
 
glob
;

250 
°d
::
°rög
 
öfûï©h
 ="s2clipped.txt";

251 
if°ªam
 
	`myfûe
 (
öfûï©h
.
	`c_°r
());

252 i‡(
myfûe
.
	`is_›í
())

254  
	`gëlöe
(
myfûe
, 
löe
) ) {

255 if(
löe
.
	`föd
("<cut>"Ë!
°rög
::
≈os
) {

256 
cout
 << "<endcut/>\n";

257 
cout
 << 
löe
 << '\n';

258 
glob
.
	`˛ór
();

260 
cout
 << 
löe
 << '\n';

262 
glob
.
	`≠≥nd
(
löe
);

264 
myfûe
.
	`˛o£
();

265 } 
cout
 << "UnableÅo open file";

269 
°d
::
°rög
 
txt
 = "what:goes:here:folks";

272 
dñim
 = ':';

273 
°d
::
ve˘‹
<°d::
°rög
> 
ñems
;

274 
	`•lô2
(
txt
, 
dñim
, 
ñems
, 2);

276 
siz
 = 
ñems
.
	`size
();

277 
˙t
=0; c¡<
siz
; cnt++) {

278 
cout
 << 
ñems
.
	`©
(
˙t
) << "\n";

283 
ölöe
 
uöt64_t
 
	$Ba£N
(
chr
) {

284 
uöt64_t
 
num
 = 0;

285 i‡('0' <
chr
 && chr <= '9') {

286 
num
 = 
chr
 - 48;

287 } i‡('A' <
chr
 && chr <= 'Z') {

288 
num
 = 10 + (
chr
 - 65);

289 } i‡('a' <
chr
 && chr <= 'z') {

290 
num
 = 10 + (
chr
 - 97);

291 } i‡(
chr
 == '-') {

292 
num
 = 36;

293 } i‡(
chr
 == '.') {

294 
num
 = 37;

296 
	`¥ötf
("Character out ofÑange!");

298  
num
;

299 
	}
}

300 
	#TextRadix
 38;

	)

301 
	#Shi·Di°
 6

	)

302 
	#MaxShi·s
 ((
uöt64_t
)(((uöt64_t)*8)/
Shi·Di°
))

	)

304 
ölöe
 
uöt64_t
 
TxtDex
(c⁄° 
°d
::
°rög
 &
löe
) {

305 c⁄° *
txt
 = 
löe
.
c_°r
();

306 
uöt64_t
 
	gªtvÆ
 = 0;

307 
uöt64_t
 
	glsiz
 = 
löe
.
size
();

308 i‡(
	glsiz
>5) {

309 
¥ötf
("Symbol isÅooÜong!");

311 
	glimô
 = 
°d
::
mö
(
MaxShi·s
, 
lsiz
);

312 
	g˙t
=0; c¡<
	glimô
; cnt++) {

313 
	gªtvÆ
 *
TextRadix
;

314 
	gªtvÆ
 +
Ba£N
(
txt
[
˙t
]);

317  
	gªtvÆ
;

320 
ölöe
 
uöt64_t
 
TxtDex2
(c⁄° 
°d
::
°rög
 &
löe
) {

321 c⁄° *
txt
 = 
löe
.
c_°r
();

322 
uöt64_t
 
	gªtvÆ
 = 0;

323 
uöt64_t
 
	glsiz
 = 
löe
.
size
();

324 i‡(
	glsiz
>5) {

325 
¥ötf
("Symbol isÅooÜong!");

327 
	glimô
 = 
°d
::
mö
(
MaxShi·s
, 
lsiz
);

328 
	g˙t
=0; c¡<
	glimô
; cnt++) {

329 
	gªtvÆ
 <<
Shi·Di°
;

330 
	gªtvÆ
 |
Ba£N
(
txt
[
˙t
]);

333  
	gªtvÆ
;

336 
P¨£Yahoo
(c⁄° 
°d
::
°rög
 
txt
, 
IoJackBa£
 *
IoJack
) {

337 
°rög
 
	gglob
;

338 
	g°d
::
°rög
 
fõld
;

341 
	gdñim
 = ',';

342 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
ñems
;

344 
•lô2
(
txt
, 
dñim
, 
ñems
, 6);

346 
	gsiz
 = 
ñems
.
size
();

347 
	g˙t
=0; c¡<
	gsiz
; cnt++) {

348 
Trim
(
ñems
.
©
(
˙t
));

349 
Trim
(
ñems
.
©
(
˙t
),"\"");

350 
	gfõld
 = 
ñems
.
©
(
˙t
);

352 
	gcout
 << "[" << 
	gfõld
 << "]\n";

354 
	g°d
::
°rög
 
VÆueTxt
 = 
ñems
.
©
(2);

355 
	g°d
::
°rög
 
SymbﬁTxt
 = 
ñems
.
©
(5);

357 
	gcout
 << "SymbﬁTxt[" << 
	gSymbﬁTxt
 << "]\n";

358 
	gcout
 << "VÆueTxt[" << 
	gVÆueTxt
 << "]\n";

360 
uöt64_t
 
	ghashdex
 = 
TxtDex
(
SymbﬁTxt
);

361 
	gvÆue
 = 
©of
(
VÆueTxt
.
c_°r
());

363 
	gIoJack
->
	gP‹tId
 = 
hashdex
;

364 
	gIoJack
->
	gVÆue
 = 
vÆue
;

368 
	$MaöFûe
() {

369 
°rög
 
löe
;

370 
if°ªam
 
	`myfûe
 ("example.txt");

371 i‡(
myfûe
.
	`is_›í
())

373  
	`gëlöe
 (
myfûe
,
löe
) )

375 
cout
 << 
löe
 << '\n';

377 
myfûe
.
	`˛o£
();

380 
cout
 << "UnableÅo open file";

383 
	}
}

385 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
P¨£Löe2
(c⁄° std::°rög &
löëxt
) {

386 
°d
::
ve˘‹
<°d::
°rög
> 
øy0
 = 
•lô
(
löëxt
, '"');

387 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øy1
;

388 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øyout
;

389 
	g°d
::
°rög
 
txt0
, 
	gtxt1
;

390 
boﬁ
 
	göquŸe
 = 
Ál£
;

391 
size_t
 
	gsiz0
 = 
øy0
.
size
();

393 
	gtxt0
 = 
øy0
.
©
(0);

394 
	gøy1
 = 
•lô
(
txt0
, ',');

395 
size_t
 
	gsiz1
 = 
øy1
.
size
(); siz1--;

396 
	g˙t1
=0; c¡1<
	gsiz1
; cnt1++) {

397 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

398 
	gøyout
.
push_back
(
txt1
);

400 
	göquŸe
=
åue
;

402 
	g˙t0
=1; c¡0<
	gsiz0
; cnt0++){

403 
	gtxt0
 = 
øy0
.
©
(
˙t0
);

404 i‡(!
	göquŸe
) {

405 
	gøy1
 = 
•lô
(
txt0
, ',');

406 
size_t
 
	gsiz1
 = 
øy1
.
size
(); siz1--;

407 
	g˙t1
=1; c¡1<
	gsiz1
; cnt1++) {

408 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

409 
	gøyout
.
push_back
(
txt1
);

411 
	göquŸe
=
åue
;

413 
	gøyout
.
push_back
(
txt0
);

414 
	göquŸe
=
Ál£
;

417 i‡(!
	göquŸe
){

418 
	gtxt0
 = 
øy0
.
©
(
siz0
-1);

419 
	gøy1
 = 
•lô
(
txt0
, ',');

420 
size_t
 
	gsiz1
 = 
øy1
.
size
();

421 
	g˙t1
=1; c¡1<
	gsiz1
; cnt1++) {

422 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

423 
	gøyout
.
push_back
(
txt1
);

425 
	göquŸe
=
åue
;

427 
¥ötf
("returnÑayout;\n");

428  
	gøyout
;

431 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
P¨£Löe
(c⁄° std::°rög &
löëxt
) {

432 
°d
::
ve˘‹
<°d::
°rög
> 
øy0
 = 
•lô
(
löëxt
, '"');

433 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øy1
;

434 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øyout
;

435 
	g°d
::
°rög
 
txt0
, 
	gtxt1
;

437 
size_t
 
	gsiz0
 = 
øy0
.
size
();

438 
	g˙t0
=0; c¡0<
	gsiz0
; cnt0++) {

439 
	gtxt0
 = 
øy0
.
©
(
˙t0
);

440 i‡(
	g˙t0
%2==0) {

442 
øy1
 = 
•lô
(
txt0
, ',');

443 
size_t
 
	gsiz1
 = 
øy1
.
size
();

444 
	g˙t1
=0; c¡1<
	gsiz1
; cnt1++) {

445 
	gtxt1
 = 
øy1
.
©
(
˙t1
);

446 
	gøyout
.
push_back
(
txt1
);

450 
	gøyout
.
push_back
(
txt0
);

453 
¥ötf
("returnÑayout;\n");

454  
	gøyout
;

457 
P¨£Glob
(c⁄° 
°d
::
°rög
 &
glob
) {

459 
°d
::
ve˘‹
<°d::
°rög
> 
øy0
 = 
•lô
(
glob
, '\n');

460 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
øyout
;

461 
	g°d
::
°rög
 
txt0
, 
	gtxt1
;

462 
size_t
 
	gsiz0
 = 
øy0
.
size
();

463 
	g˙t0
=0; c¡0<
	gsiz0
; cnt0++) {

464 
	gtxt0
 = 
øy0
.
©
(
˙t0
);

465 
	gøyout
 = 
P¨£Löe
(
txt0
);

466 
size_t
 
	gsiz1
 = 
øyout
.
size
();

467 
	g˙t1
=0; c¡1<
	gsiz1
; cnt1++) {

468 
	gtxt1
 = 
øyout
.
©
(
˙t1
);

469 
¥ötf
("[%s]", 
txt1
.
c_°r
());

471 
¥ötf
("\n");

475 
	$WebMaö
()

477 
cout
 << "Hñlÿw‹ld!" << 
ídl
;

478 i‡(
åue
) {

479 
°d
::
°rög
 
glob
 = "abcdefghijklmnop";

480 
FûeFìdî
 
„ed
;

481 
„ed
.
	`O≥n
();

482 
˙t
=0; cnt<6; cnt++) {

483 
„ed
.
	`Fëch
(
glob
);

484 
cout
 << "glob is:[" << 
glob
 << "]";

485 
	`¥ötf
("\n");

486 
	`P¨£Glob
(
glob
);

488 
„ed
.
	`Clo£
();

494 if(
Ál£
) {

495 
°d
::
°rög
 
txt
 = "what:goes:here:folks";

498 
dñim
 = ':';

499 
°d
::
ve˘‹
<°d::
°rög
> 
ñems
;

500 
	`•lô2
(
txt
, 
dñim
, 
ñems
, 2);

502 
siz
 = 
ñems
.
	`size
();

503 
˙t
=0; c¡<
siz
; cnt++) {

504 
cout
 << 
ñems
.
	`©
(
˙t
) << "\n";

508 
	}
}

	@FlexrayC.h

1 #i‚de‡
FLEXRAYC_H_INCLUDED


2 
	#FLEXRAYC_H_INCLUDED


	)

30 
	~<°döt.h
>

31 
	~"Ba£.h
"

33 #i‚de‡
boﬁ


34 
	#boﬁ
 

	)

35 
	#åue
 0x1

	)

36 
	#Ál£
 0x0

	)

39 
	#ã°Êex
 0

	)

41 
	#highroŸ
 1

	)

43 
	#ã°size
 1000

	)

47 
	#bôwdçow
 0x2

	)

50 
	#bôwdt
 (1<<
bôwdçow
)

	)

53 
	#bôønge
 (1<<
bôwdt
)

	)

56 
	#mask4
 (~(~(
uöt32_t
)0<<
bôwdt
))

57 

	)

59 
	#max_°øè
 ((
uöt32_t
Ë* (8>>
bôwdçow
))

	)

60 
	#œ°_°øè
 (
max_°øè
-1)

	)

65 #i‡
highroŸ


68 
	#keyof
(
key
,
˙t
Ë–(key>>((
œ°_°øè
-˙t)<<
bôwdçow
)Ë& 
mask4
 )

	)

71 
	#keyof
(
key
,
˙t
Ë–(key>>(˙t<<
bôwdçow
)Ë& 
mask4
 )

	)

74 
«me•a˚
 
	gFR
 {

78 
	gãm∂©e
 <
˛ass
 
	gLófTy≥
>

79 ˛as†
	cFÀxøy
 {

80 
	gpublic
:

81 
LófTy≥
 *
	tLófTy≥På
;

82 
uöt32_t
 
	gøm˙t
, 
	gÀa‰am˙t
;

83 
	tÊexøy_ÀafkûlT
(
	tLófTy≥
 *
	tÀaf
);

85 
	sÊexñT


90 
uöt8_t
 
	gnum_chûdªn
;

91 
	udown
 {

92 
ÊexñT
 *
	g√xt
;

94 
LófTy≥
 *
	gLóf
;

95 } 
	gdown
;

98 
ÊexñT
 
	gt›node
;

101 
FÀxøy
() {

102 
	gthis
->
Inô
();

105 ~
FÀxøy
() {

106 
	gthis
->
De°roy
(
NULL
);

108 
Inô
()

112 
	gøm˙t
=0; 
	gÀa‰am˙t
=0;

113 
	gt›node
.
	gnum_chûdªn
=0;Å›node.
	gdown
.
	g√xt
=
NULL
;

115 
boﬁ
 
In£π
(
uöt32_t
 
key
,
LófTy≥
 *
√wÀaf
)

121 
ÊexñT
 
	gãm±›
{0,
NULL
};

122 
ÊexñT
 *
	gup˚Œ
=&
ãm±›
;

123 
ÊexñT
 *
	ghód˚Œ
=&
t›node
;

124 
uöt32_t
 
	g˙t
,
	gtkey
;

125 
boﬁ
 
	gªtvÆ
=
Ál£
;

127 
	gãm±›
.
	gdown
.
	g√xt
=&
t›node
;Åem±›.
	gnum_chûdªn
=0;

129 
	g˙t
=0; c¡<
	gmax_°øè
; cnt++) {

132 i‡(
	ghód˚Œ
->
	gdown
.
	g√xt
==
NULL
) {

133 
hód˚Œ
->
down
.
√xt
=
Ælocß„
(
ÊexñT
, 
bôønge
);

134 
mem£t
(
hód˚Œ
->
down
.
√xt
,0,
bôønge
*(
ÊexñT
));

135 
	gup˚Œ
->
	gnum_chûdªn
++;

136 #i‡
bôwdçow
==0

137 
	gøm˙t
+=
bôønge
*(
ÊexñT
)-((
uöt8
)*bitrange);

139 
	gøm˙t
+=
bôønge
*(
ÊexñT
);

142 
	gtkey
=
keyof
(
key
,
˙t
);

146 
	gup˚Œ
=
hód˚Œ
;

149 
	ghód˚Œ
=&(
hód˚Œ
->
down
.
√xt
[
tkey
]);

152 i‡(
	ghód˚Œ
->
	gdown
.
	gLóf
==
NULL
) {

153 
up˚Œ
->
num_chûdªn
++;

154 
	ghód˚Œ
->
	gdown
.
	gLóf
=
√wÀaf
;

155 
	gÀa‰am˙t
+=(
LófTy≥
);

156 
	gªtvÆ
=
åue
;

158 
	gªtvÆ
=
Ál£
;

160 (
	gªtvÆ
);

163 
Recur£_De°roy
(
ÊexñT
 *
node
, 
dïth
, 
Êexøy_ÀafkûlT
 *
Àafkûl
)

168 
uöt32_t
 
	g˙t
;

169 
	gdïth
++;

170 i‡(
	gdïth
<
	gmax_°øè
) {

171 
	g˙t
=0; c¡<
	gbôønge
; cnt++) {

173 i‡(
	gnode
[
˙t
].
	gdown
.
	g√xt
!=
NULL
) {

174 
Recur£_De°roy
(
node
[
˙t
].
down
.
√xt
, 
dïth
, 
Àafkûl
);

175 
	gnode
[
˙t
].
	gdown
.
	g√xt
=
NULL
;

178 } i‡(
	gÀafkûl
!=
NULL
){

180 
˙t
=0; 
	g˙t
<
	gbôønge
; cnt++) {

182 i‡(
	gnode
[
˙t
].
	gdown
.
	gLóf
!=
NULL
) {

183 
Àafkûl
(
node
[
˙t
].
down
.
Lóf
);

188 
‰ìß„
(
node
);

191 
De°roy
(
Êexøy_ÀafkûlT
 *
Àafkûl
)

197 i‡(
	gt›node
.
	gnum_chûdªn
>0) {

198 
Recur£_De°roy
(
t›node
.
down
.
√xt
, 0, 
Àafkûl
);

199 
	gt›node
.
	gdown
.
	g√xt
=
NULL
;Å›node.
	gnum_chûdªn
=0;

203 
LófTy≥
 *
Lookup
(
uöt32_t
 
key
)

209 
ÊexñT
 
	gãm±›
{0,
NULL
},*
	ghód˚Œ
=&
ãm±›
;

210 
uöt32_t
 
	g˙t
,
	gtkey
;

212 
	ghód˚Œ
=&
t›node
;

213 
	g˙t
=0;

214 
	g˙t
<
	gmax_°øè
 && 
	ghód˚Œ
->
	gdown
.
	g√xt
!=
NULL
) {

215 
tkey
=
keyof
(
key
,
˙t
);

217 
	ghód˚Œ
=&(
hód˚Œ
->
down
.
√xt
[
tkey
]);

218 
	g˙t
++;

220 (
	ghód˚Œ
->
	gdown
.
	gLóf
);

223 
LófTy≥
 *
Remove
(
uöt32_t
 
key
)

229 
ÊexñT
 
	gãm±›
{0,
NULL
},*
	ghód˚Œ
=&
ãm±›
;

230 
ÊexñT
 *
	g°ack
[
max_°øè
];

231 
uöt32_t
 
	g˙t
,
	gtkey
;

232 
LófTy≥
 *
	gÀaf
;

234 
	ghód˚Œ
=&
t›node
;

236 
	g˙t
=0;

237 
	g˙t
<
	gmax_°øè
 && 
	ghód˚Œ
->
	gdown
.
	g√xt
!=
NULL
) {

238 
tkey
=
keyof
(
key
,
˙t
);

240 
	g°ack
[
˙t
]=
hód˚Œ
;

242 
	ghód˚Œ
=&(
hód˚Œ
->
down
.
√xt
[
tkey
]);

243 
	g˙t
++;

245 i‡(
	ghód˚Œ
->
	gdown
.
	g√xt
==
NULL
) {

246 
Àaf
=
NULL
;

248 
	gÀaf
=
hód˚Œ
->
down
.
Lóf
;

250 i‡(
	gÀaf
!=
NULL
) {

251 
hód˚Œ
->
down
.
Lóf
=
NULL
;

252 
	g˙t
=
max_°øè
;

253 
	g˙t
>0) {

254 
	g˙t
--;

257 
	g°ack
[
˙t
]->
	gnum_chûdªn
--;

258 i‡(
	g°ack
[
˙t
]->
	gnum_chûdªn
>0) ;

259 
‰ìß„
(
°ack
[
˙t
]->
down
.
√xt
); 
	g°ack
[˙t]->
	gdown
.
	g√xt
=
NULL
;

262 (
	gÀaf
);

265 
LófTy≥
 *
Êexøy_toggÀ
(
uöt32_t
 
key
,LófTy≥ *
√wÀaf
)

272 
LófTy≥
 *
	gﬁdÀaf
=
NULL
;

274 
	gﬁdÀaf
=
Remove
(
key
);

275 i‡(
	gﬁdÀaf
==
NULL
) {

276 
Êexøy_ö£π
(
key
,
√wÀaf
);

278 (
	gﬁdÀaf
);

	@IoJack.h

1 #i‚de‡
IOJACK_H_INCLUDED


2 
	#IOJACK_H_INCLUDED


	)

4 
	~"Ba£.h
"

6 
uöt64_t
 
	tIoDexTy≥
;

9 
˛ass
 
	tIoJackBa£
 *
	tIoJackBa£På
;

10 ˛as†
	cIoJackBa£
 {

11 
	mpublic
:

12 
IoDexTy≥
 
P‹tId
;

13 
	m°d
::
°rög
 
P‹tName
;

14 
uöt32_t
 
	mªf˙t
;

15 
	mVÆue
;

16 
	mUpw¨dVÆue
;

17 
boﬁ
 
	mDïªˇãd
;

18 
	$IoJackBa£
() {

19 
this
->
ªf˙t
=0;

20 
this
->
VÆue
=0;

21 
this
->
Upw¨dVÆue
=0;

22 
this
->
Dïªˇãd
 = 
Ál£
;

24 
IoJackBa£På
 
	$AddRef
() {

25 
this
->
ªf˙t
++;

26  
this
;

27 
	}
}

28 
uöt32_t
 
	$UnRef
(
IoJackBa£På
 *
mîef
) {

29 
this
->
ªf˙t
--;

30  
this
->
ªf˙t
;

31 
	}
}

32 
vútuÆ
 
	$GëVÆue
(){

34 
	}
}

48 
˛ass
 
	tIoJack
 *
	tIoJackPå
;

49 
	g°d
::
	tve˘‹
<
	tIoJackPå
> 
	tIoJackVec
;

50 ˛as†
	cIoJack
 : 
public
 
IoJackBa£
 {

51 
public
:

52 
IoJackBa£På
 
UpSåóm
;

53 
	$IoJack
() {

54 
this
->
ªf˙t
=0;

55 
this
->
VÆue
=0;

56 
this
->
UpSåóm
=
NULL
;

58 
	$GëVÆue
(Ë
ovîride
 {

59  
this
->
UpSåóm
->
VÆue
;

60 
	}
}

64 
˛ass
 
	tGlobÆIoJack
 *
	tGlobÆIoJackPå
;

65 ˛as†
	cGlobÆIoJack
 : 
public
 
IoJackBa£
 {

66 
public
:

67 
°d
::
ve˘‹
<> 
JackHi°‹y
;

68 
	$GlobÆIoJack
() {

69 
this
->
ªf˙t
=0;

70 
this
->
VÆue
=0;

72 
	$GëVÆue
(Ë
ovîride
 {

74 
	}
}

	@Lugar.h

1 #i‚de‡
LUGAR_H_INCLUDED


2 
	#LUGAR_H_INCLUDED


	)

4 
	~"Org.h
"

7 
˛ass
 
	gLug¨
;

8 
Lug¨
 *
	tLug¨På
;

9 
	g°d
::
	tve˘‹
<
	tLug¨På
> 
	tLug¨Vec
;

10 ˛as†
	cLug¨
 {

11 
	mpublic
:

12 
Org
 *
ã«¡
;

13 
Org
 *
	mã«¡_√xt
;

14 
uöt32_t
 
	mnumnbrs
;

15 
Lug¨På
 *
	mnbrs
;

16 
Lug¨Vec
 
	mnbrsv
;

18 
	$Lug¨
() {

19 
this
->
numnbrs
 = 0;

20 
this
->
nbrs
 = 
	`Ælocß„
(
Lug¨På
,Åhis->
numnbrs
);

21 
this
->
ã«¡
 = 
NULL
;

22 
this
->
ã«¡_√xt
 = 
NULL
;

25 ~
	$Lug¨
() {

26 
nbrsv
.
	`˛ór
();

27 
this
->
numnbrs
 = 0;

28 
	`‰ìß„
(
this
->
nbrs
);

29 
dñëe
 
this
->
ã«¡
;

30 
dñëe
 
this
->
ã«¡_√xt
;

31 
	}
}

33 
	$Aâach_Nbr
(
Lug¨På
 
nbr0
) {

34 
this
->
nbrsv
.
	`push_back
(
nbr0
);

35 
nbr0
->
nbrsv
.
	`push_back
(
this
);

36 
	}
}

38 
	$Aâach_Tí™t
(
Org
 *
ã«¡0
) {

39 
this
->
ã«¡
 = 
ã«¡0
;

40 
ã«¡
->
home
 = 
this
;

41 
	}
}

43 
	$Aâach_Next_Tí™t
(
Org
 *
ã«¡0
) {

44 
this
->
ã«¡_√xt
 = 
ã«¡0
;

45 
ã«¡_√xt
->
home
 = 
this
;

46 
	}
}

48 
	$Rﬁlovî_Tí™t
() {

49 
dñëe
 
this
->
ã«¡
;

50 
this
->
ã«¡
 = 
ã«¡_√xt
;

51 
this
->
ã«¡_√xt
 = 
NULL
;

52 
	}
}

	@Node.h

1 #i‚de‡
NODE_H_INCLUDED


2 
	#NODE_H_INCLUDED


	)

8 
	~<io°ªam
>

9 
	~<°dio.h
>

10 
	~<m≠
>

11 
	~<li°
>

12 
	~"Ba£.h
"

13 
	~"IoJack.h
"

15 
	#WeightAmp
 2.0;

	)

17 
	#WeightShi·Amp
 1.0;

	)

19 c⁄° 
uöt16_t
 
	gNum_IoTy≥s
 = 3;

20 
«me•a˚
 
	gIoTy≥
 {

21 
	eIoTy≥
 {
	gI¡ø
=0, 
	gGlobÆIO
=1, 
	gNbrIO
=2};

23 c⁄° 
	gDisu£Thªsh
 = 1;

28 ˛as†
	cIoTy≥2
 : 
uöt8_t
 {
I¡ø
=0, 
	mGlobÆIO
=1, 
	mNbrIO
=2};

30 
˛ass
 
	gNode
;

31 
Node
 *
	tNodePå
;

32 
	g°d
::
	tve˘‹
<
	tNodePå
> 
	tNodeVec
;

33 
	g°d
::
	tm≠
<
	tUidTy≥
, 
	tNodePå
> 
	tNodeM≠
;

34 
	g°d
::
	tm≠
<
	tUidTy≥
, 
	tNodePå
>::
	tc⁄°_ôî©‹
 
	tNodeM≠Iãøt‹
;

36 
uöt32_t
 
	gbug˙t
 = 0;

37 
	tWeightTy≥
;

39 
˛ass
 
	gLök
;

40 
Lök
 *
	tLökPå
;

41 ˛as†
	cLök
 {

42 
	mpublic
:

43 
Weight
;

44 
	mFúeVÆ
;

45 
UidTy≥
 
	mUSID
;

46 
NodePå
 
	mUSNode
,
	mDSNode
;

47 
	mDisu£
;

48 
	$Lök
() {

49 
this
->
	`CÀ¨
();

51 
LökPå
 
	$S∑wn
() {

52 
LökPå
 
chûd
 = 
√w
 
	`Lök
();

53 
chûd
->
USID
 = 
this
->USID;

54 
chûd
->
Weight
 = 
this
->Weight;

55 
chûd
->
Disu£
 = 
this
->Disuse;

56  
chûd
;

57 
	}
}

58 
ölöe
 
	$CÀ¨
() {

59 
this
->
FúeVÆ
=0.0;

60 
this
->
USNode
=
NULL
;Åhis->
DSNode
=NULL;

61 
	}
}

62 
ölöe
 
	$GëFúe
() {

63  
this
->
FúeVÆ
*this->
Weight
;

64 
	}
}

65 
LökPå
 
	$Abiogí©e
() {

66 
LökPå
 
 p
 = 
√w
 
	`Lök
();

67 
 p
->
Disu£
=0;

68 
 p
->
	`R™domize_Weight
();

69  
 p
;

70 
	}
}

71 
	$R™domize_Weight
() {

72 
this
->
Weight
 = (
	`‰™d
()-0.5Ë* 
WeightAmp
;

73 
	}
}

74 
	$Muèã_Weight
() {

75 
this
->
Weight
 +((
	`‰™d
()*2.0)-1.0Ë* 
WeightShi·Amp
;

76 
	}
}

77 
	$Muèã_Weight
(
WeightFuzzAmp
) {

78 
this
->
Weight
 +((
	`‰™d
()*2.0)-1.0Ë* 
WeightFuzzAmp
;

79 
	}
}

80 
	$Pröt_Me
() {

81 
	`bug¥ötf
(" Lök USID:%li, ", 
this
->
USID
);

82 
	`bug¥ötf
("USNode:%p, DSNode:%∞", 
this
->
USNode
,Åhis->
DSNode
);

83 
	`bug¥ötf
("Weight:%‡\n", 
this
->
Weight
);

84 
	}
}

86 
	g°d
::
	tve˘‹
<
	tLökPå
> 
	tLökVec
;

88 (
	gNode
::*
	tFúeFunc
)();

89 (*
	tFúeFunc2
)(
	tNodePå
);

92 ˛as†
	cNode
 {

93 
public
:

94 
UidTy≥
 
S≥cõsId
;

95 
IoTy≥
::IoTy≥ 
MyTy≥
;

96 
IoDexTy≥
 
IoS≥cõsId
;

97 
IoJackBa£På
 
Jack
;

99 
LökVec
 
LGíome
;

100 
LökVec
 
W‹kög_Ins
, 
W‹kög_Outs
;

101 
FúeVÆ
, 
NextFúeVÆ
;

102 
FúeFunc
 
S≥cülFúe
;

103 
FúeFunc2
 
S≥cülFúe2
;

104 
°d
::
ve˘‹
<> 
FúeHi°‹y
;

106 
	$ã°
(
ha
) {

109 
	$ã°2
(
NodePå
 
ha
) {

110 
	}
}

112 
	$Node
() {

113 
this
->
Jack
 = 
NULL
;

114 
this
->
FúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

115 
this
->
NextFúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

116 
this
->
S≥cülFúe
 = &
Node
::
ã°
;

117 
this
->
S≥cülFúe2
 = 
ã°2
;

118 
this
->
W‹kög_Ins
.
	`˛ór
();

119 
this
->
W‹kög_Outs
.
	`˛ór
();

120 
this
->
FúeHi°‹y
.
	`˛ór
();

121 
	}
}

123 
ölöe
 
	$ã°m‹e
() {

124 (*
this
.*
S≥cülFúe
)(12);

125 (
this
->*
S≥cülFúe
)(12);

127 
this
->
	`S≥cülFúe2
(this);

128 
	}
}

130 ~
	$Node
() {

131 
size_t
 
˙t
;

132 
this
->
W‹kög_Ins
.
	`˛ór
();

133 
this
->
W‹kög_Outs
.
	`˛ór
();

134 
this
->
FúeHi°‹y
.
	`˛ór
();

135 
˙t
=0; c¡<
this
->
LGíome
.
	`size
(); cnt++) {

136 
dñëe
 
this
->
LGíome
.
	`©
(
˙t
);

138 
this
->
LGíome
.
	`˛ór
();

139 
	}
}

141 
NodePå
 
	$Abiogí©e
() {

142 
NodePå
 
ndp
 = 
√w
 
	`Node
();

143 
ndp
->
Jack
 = 
NULL
;

144 
	`ønd
()%2) {

146 
ndp
->
MyTy≥
 = 
IoTy≥
::
I¡ø
;

149 
ndp
->
MyTy≥
 = 
IoTy≥
::
GlobÆIO
;

150 
ndp
->
IoS≥cõsId
 = 'a' + 
	`ønd
()%(1+
zì
-'a');

153 
ndp
->
MyTy≥
 = 
IoTy≥
::
NbrIO
;

156 
ndp
->
S≥cõsId
 = 
IdMakî
::
	`MakeId
();

157 
ndp
->
FúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

158 
ndp
->
NextFúeVÆ
 = ((
	`‰™d
()*2.0)-1.0)*0.001;

159  
ndp
;

160 
	}
}

162 
NodePå
 
	$S∑wn
() {

164 
NodePå
 
∑ª¡
, 
chûd
;

165 
LökPå
 
Õ¨ít
, 
lchûd
;

166 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

167 
chûd
 = 
√w
 
	`Node
();

168 
chûd
->
MyTy≥
 = 
this
->MyType;

169 
chûd
->
S≥cõsId
 = 
this
->SpeciesId;

170 
chûd
->
IoS≥cõsId
 = 
this
->IoSpeciesId;

171 
chûd
->
LGíome
.
	`ªsize
(
siz
);

172 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

173 
Õ¨ít
 = 
this
->
LGíome
.
	`©
(
˙t
);

175 
lchûd
 = 
Õ¨ít
->
	`S∑wn
();

176 
bug˙t
++;

178 
chûd
->
LGíome
.
	`©
(
˙t
Ë
lchûd
;

180  
chûd
;

181 
	}
}

183 
	$Upd©e_From_Fìd
() {

184 i‡(
this
->
MyTy≥
 =
IoTy≥
::
GlobÆIO
) {

186 
this
->
FúeVÆ
 =Åhis->
Jack
->
VÆue
;

188 
	}
}

190 
	$A˘Fun
(
xö
) {

191 
OutVÆ
;

192 
OutVÆ
 = 
xö
 / 
	`sqπ
(1.0 + xin * xin);

193  
OutVÆ
;

195 
	}
}

197 
	$Push_Fúe
() {

198 
LökPå
 
downs
;

199 
MyFúe
=
this
->
FúeVÆ
;

200 
size_t
 
siz
 = 
this
->
W‹kög_Outs
.
	`size
();

201 
˙t
=0; c¡<
siz
; cnt++) {

202 
downs
 = 
this
->
W‹kög_Outs
.
	`©
(
˙t
);

203 
downs
->
FúeVÆ
 = 
MyFúe
;

205 
	}
}

207 
	$CﬁÀ˘_And_Fúe
() {

208 
LökPå
 
ups
;

209 
Sum
=0;

210 
size_t
 
siz
 = 
this
->
W‹kög_Ins
.
	`size
();

211 
˙t
=0; c¡<
siz
; cnt++) {

212 
ups
 = 
this
->
W‹kög_Ins
.
	`©
(
˙t
);

213 
Sum
+=
ups
->
	`GëFúe
();

215 
this
->
NextFúeVÆ
 = 
	`A˘Fun
(
Sum
);

216 
	`Exch™ge_Wôh_Fìd
();

218 
	}
}

220 
	$Exch™ge_Wôh_Fìd
() {

221 i‡(
this
->
MyTy≥
 =
IoTy≥
::
GlobÆIO
) {

222 
this
->
Jack
->
Upw¨dVÆue
 +this->
NextFúeVÆ
;

223 
this
->
FúeVÆ
 =Åhis->
Jack
->
	`GëVÆue
();

226 
this
->
FúeVÆ
 =Åhis->
NextFúeVÆ
;

228 
	}
}

230 
	$R™dom_In¸ó£
(
NodeVec
 *
Ÿhîs
, 
du≥quŸa
) {

231 
∫um
;

232 
UidTy≥
 
lid
, 
nid
;

233 
TempDex
 = 0;

234 
LDex
 = 0, 
NDex
 = 0;

235 
LSize
 = 
LGíome
.
	`size
();

236 
OSize
 = 
Ÿhîs
->
	`size
();

237 
NodePå
 
ndp
;

238 
LökPå
 
 k0
, 
 k1
;

239 
LökPå
 
ãmp
[
LSize
 + 
OSize
];

241 
LDex
 < 
LSize
 && 
NDex
 < 
OSize
) {

242 
 k0
 = 
LGíome
.
	`©
(
LDex
); 
lid
 =Ünk0->
USID
;

243 
ndp
 = 
Ÿhîs
->
	`©
(
NDex
); 
nid
 =Çdp->
S≥cõsId
;

244 i‡(
lid
 <
nid
) {

245 
ãmp
[
TempDex
] = 
 k0
; TempDex++;

246 
LDex
++;

247 i‡(
lid
 =
nid
Ë{
NDex
++;}

249 
∫um
 = 
	`‰™d
();

250 i‡(
∫um
 < 
du≥quŸa
) {

251 
 k1
 = 
Lök
::
	`Abiogí©e
();Ünk1->
USID
 = 
nid
;

252 
ãmp
[
TempDex
] = 
 k1
; TempDex++;

254 
NDex
++;

257 
LDex
 < 
LSize
) {

258 
ãmp
[
TempDex
] = 
LGíome
.
	`©
(
LDex
);

259 
LDex
++; 
TempDex
++;

261 
NDex
 < 
OSize
) {

262 
∫um
 = 
	`‰™d
();

263 i‡(
∫um
 < 
du≥quŸa
) {

264 
ndp
 = 
Ÿhîs
->
	`©
(
NDex
);

265 
 k1
 = 
Lök
::
	`Abiogí©e
();Ünk1->
USID
 = 
ndp
->
S≥cõsId
;

266 
ãmp
[
TempDex
] = 
 k1
; TempDex++;

268 
NDex
++;

270 
LGíome
.
	`ªsize
(
TempDex
);

271 
˙t
=0; c¡<
TempDex
; cnt++) {

272 
LGíome
.
	`©
(
˙t
Ë
ãmp
[cnt];

274 
	}
}

276 
boﬁ
 
	$Is_S‹ãd
() {

277 
UidTy≥
 
ID_¥ev
 = 0;

278 
LökPå
 
 p
;

279 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

280 
˙t
=0; c¡<
siz
; cnt++) {

281 
 p
 = 
this
->
LGíome
.
	`©
(
˙t
);

282 if(
ID_¥ev
>
 p
->
USID
) {

283  
Ál£
;

285 
ID_¥ev
=
 p
->
USID
;

287  
åue
;

288 
	}
}

290 
	$CÀ™_Me
() {

291 
n˙t
, 
siz
;

292 
LökPå
 
 p
;

293 
siz
 = 
this
->
LGíome
.
	`size
();

294 
KìpC¡
=0;

295 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

296 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

297 i‡(
 p
->
Disu£
 > 
Disu£Thªsh
) {

298 
	`bug¥ötf
("Disu£:%lu ",
 p
->
Disu£
);

300 i‡(
 p
->
Disu£
 >
Disu£Thªsh
) {

301 
dñëe
 
 p
;

303 
this
->
LGíome
.
	`©
(
KìpC¡
Ë
 p
;

304 
KìpC¡
++;

307 
this
->
LGíome
.
	`ªsize
(
KìpC¡
);

308 
	}
}

310 
	$CÀ™_Invít‹y
(
UidVec
 *
uvec
) {

311 
n˙t
, 
siz
, 
nsiz
;

312 
NDex
;

313 
LökPå
 
 p
;

314 
nsiz
 = 
uvec
->
	`size
();

315 
siz
 = 
this
->
LGíome
.
	`size
();

316 
KìpC¡
=0;

317 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

318 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

319 
NDex
 = 
	`TªeSórchUidLi°
(
uvec
, NDex, 
 p
->
USID
);

320 i‡(
NDex
 < 
uvec
->
	`size
(Ë&& (uvec->
	`©
(NDexË=
 p
->
USID
) ) {

321 
this
->
LGíome
.
	`©
(
KìpC¡
Ë
 p
;

322 
KìpC¡
++;

324 
dñëe
 
 p
;

327 
this
->
LGíome
.
	`ªsize
(
KìpC¡
);

328 
	}
}

330 
	$Muèã_Me
(
NodeVec
 *
Ÿhîs
) {

332 
n˙t
, 
siz
;

333 
∫um
, 
kûlquŸa
, 
du≥quŸa
, 
m⁄°îquŸa
, 
ªjackquŸa
;

334 
kûlquŸa
 = 0.0;

335 
du≥quŸa
 = 0.5;

336 
m⁄°îquŸa
 = 0.5;

337 
kûlquŸa
 = 
du≥quŸa
 = 
m⁄°îquŸa
 = 0.5;

338 
ªjackquŸa
 = 0.01;

340 
LökPå
 
 p
, 
du≥
;

341 
siz
 = 
this
->
LGíome
.
	`size
();

342 i‡(
åue
) {

343 
KìpC¡
=0;

344 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

345 
∫um
 = 
	`‰™d
();

346 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

347 i‡(
∫um
 < 
kûlquŸa
) {

348 
dñëe
 
 p
;

350 
this
->
LGíome
.
	`©
(
KìpC¡
Ë
 p
;

351 
KìpC¡
++;

354 
this
->
LGíome
.
	`ªsize
(
KìpC¡
);

355 
siz
 = 
KìpC¡
;

357 
	`R™dom_In¸ó£
(
Ÿhîs
, 
du≥quŸa
);

359 
this
->
	`S‹t_Löks
();

361 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

362 
∫um
 = 
	`‰™d
();

363 i‡(
∫um
 < 
m⁄°îquŸa
) {

364 
 p
 = 
this
->
LGíome
.
	`©
(
n˙t
);

365 
 p
->
	`Muèã_Weight
();

369 
∫um
 = 
	`‰™d
();

370 i‡(
∫um
 < 
ªjackquŸa
) {

371 
øndöt
 = 
	`ønd
()%
Num_IoTy≥s
;

373 
this
->
MyTy≥
=
°©ic_ˇ°
<
IoTy≥
::IoTy≥>(
øndöt
);

374 
this
->
IoS≥cõsId
 = 'a' + 
	`ønd
()%(1+
zì
-'a');

377 
	}
}

379 
boﬁ
 
	$As˚ndögLökUid
(
LökPå
 
b0
, LökPå 
b1
) {

380  (
b0
->
USID
 < 
b1
->USID);

381 
	}
}

383 
	$S‹t_Löks
() {

384 i‡(
Ál£
) {

385 if(!
	`Is_S‹ãd
()) {

386 
	`bug¥ötf
("LINKS NOT SORTED!!!");

387 
throw
 123;

390 
°d
::
	`s‹t
 (
this
->
LGíome
.
	`begö
(),Åhis->LGíome.
	`íd
(), 
As˚ndögLökUid
);

391 
	}
}

393 
	$Uncompûe_Me
() {

394 
LökPå
 
 p
;

395 
size_t
 
˙t
;

396 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

397 
this
->
W‹kög_Ins
.
	`˛ór
();

398 
this
->
W‹kög_Outs
.
	`˛ór
();

399 
˙t
=0; c¡<
siz
; cnt++) {

400 
 p
 = 
this
->
LGíome
.
	`©
(
˙t
);

401 
 p
->
	`CÀ¨
();

403 
	}
}

405 
	$Compûe_Me
(
NodeVec
 *
Ÿhîs
) {

406 
this
->
	`Uncompûe_Me
();

407 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

408 
NDex
;

409 
UidTy≥
 
NbrId
, 
NbrId_¥ev
;

410 
NodePå
 
nbr
;

411 
LökPå
 
 p
;

412 
NbrId_¥ev
 = 0;

413 
˙t
;

414 
NDex
 = 0;

415 
˙t
=0; c¡<
siz
; cnt++) {

416 
 p
 = 
this
->
LGíome
.
	`©
(
˙t
);

417 
 p
->
FúeVÆ
 = 0.0;

418 
NbrId
 = 
 p
->
USID
;

419 
NbrId_¥ev
=
NbrId
;

420 
NDex
 = 
	`TªeSórchNodeLi°
(
Ÿhîs
, NDex, 
NbrId
);

421 i‡(
NDex
 < 
Ÿhîs
->
	`size
(Ë&& ((
nbr
 = othîs->
	`©
(NDex))->
S≥cõsId
 =
NbrId
) ) {

422 
this
->
	`Aâach_US
(
nbr
, 
 p
);

424 
 p
->
USNode
 = 
NULL
;Ü≈->
DSNode
 = NULL;Ü≈->
Disu£
++;

427 
this
->
MyTy≥
) {

428 
IoTy≥
::
I¡ø
:

430 
IoTy≥
::
GlobÆIO
:

432 
IoTy≥
::
NbrIO
:

435 
	}
}

437 
	$Aâach_US
(
NodePå
 
Ÿhî
, 
LökPå
 
 p
) {

438 
this
->
W‹kög_Ins
.
	`push_back
(
 p
);

439 
Ÿhî
->
W‹kög_Outs
.
	`push_back
(
 p
);

440 
 p
->
USNode
 = 
Ÿhî
;Ü≈->
DSNode
 = 
this
;

441 
	}
}

443 
	$maöX
 () {

444 
°d
::
m≠
<,> 
mym≠
;

445 
°d
::
m≠
<,>::
ôî©‹
 
ôî
;

447 
mym≠
['a']=50;

448 
mym≠
['b']=100;

449 
mym≠
['c']=150;

450 
mym≠
['d']=200;

452 
ôî
=
mym≠
.
	`föd
('b');

453 
mym≠
.
	`îa£
 (
ôî
);

454 
mym≠
.
	`îa£
 (mym≠.
	`föd
('d'));

457 
°d
::
cout
 << "elements in mymap:" << '\n';

458 
°d
::
cout
 << "®=> " << 
mym≠
.
	`föd
('a')->
£c⁄d
 << '\n';

459 
°d
::
cout
 << "¯=> " << 
mym≠
.
	`föd
('c')->
£c⁄d
 << '\n';

462 
	}
}

464 
uöt32_t
 
	$TªeSórchUidLi°
(
UidVec
 *
NLi°
, 
uöt64_t
 
°¨çœ˚
, 
UidTy≥
 
èrgë
) {

465 
LoDex
, 
MedDex
, 
HiDex
;

466 
UidTy≥
 
MedNode
;

467 
LoDex
=
°¨çœ˚
; 
HiDex
=
NLi°
->
	`size
();

468 
LoDex
<
HiDex
) {

469 
MedDex
 = (
LoDex
+
HiDex
)/2;

470 
MedNode
 = 
NLi°
->
	`©
(
MedDex
);

471 i‡(
èrgë
 <
MedNode
Ë{ 
HiDex
 = 
MedDex
; }

472 { 
LoDex
 = 
MedDex
+1; }

474  
LoDex
;

475 
	}
}

477 
uöt32_t
 
	$TªeSórchNodeLi°
(
NodeVec
 *
NLi°
, 
uöt64_t
 
°¨çœ˚
, 
UidTy≥
 
èrgë
) {

478 
LoDex
, 
MedDex
, 
HiDex
;

479 
NodePå
 
MedNode
;

480 
LoDex
=
°¨çœ˚
; 
HiDex
=
NLi°
->
	`size
();

481 
LoDex
<
HiDex
) {

482 
MedDex
 = (
LoDex
+
HiDex
)/2;

483 
MedNode
 = 
NLi°
->
	`©
(
MedDex
);

484 i‡(
èrgë
 <
MedNode
->
S≥cõsId
Ë{ 
HiDex
 = 
MedDex
; }

485 { 
LoDex
 = 
MedDex
+1; }

487  
LoDex
;

488 
	}
}

490 
uöt32_t
 
	$TªeSórchLökLi°
(
LökVec
 *
LLi°
, 
uöt64_t
 
°¨çœ˚
, 
UidTy≥
 
èrgë
) {

491 
LoDex
, 
MedDex
, 
HiDex
;

492 
LökPå
 
MedLök
;

493 
LoDex
=
°¨çœ˚
; 
HiDex
=
LLi°
->
	`size
();

494 
LoDex
<
HiDex
) {

495 
MedDex
 = (
LoDex
+
HiDex
)/2;

496 
MedLök
 = 
LLi°
->
	`©
(
MedDex
);

497 i‡(
èrgë
 <
MedLök
->
USID
Ë{ 
HiDex
 = 
MedDex
; }

498 { 
LoDex
 = 
MedDex
+1; }

500  
LoDex
;

501 
	}
}

503 
	$Pröt_Me
() {

506 *
addªss
 = &
S≥cõsId
;

507 
	`bug¥ötf
(" NodêS≥cõsId:%li, MyTy≥:%li,Åhis:%p\n", 
this
->
S≥cõsId
,Åhis->
MyTy≥
, 
addªss
);

508 
size_t
 
siz
 = 
this
->
LGíome
.
	`size
();

509 
	`bug¥ötf
("Çumlöks:%li\n", 
siz
);

510 
˙t
=0; c¡<
siz
; cnt++) {

511 
LökPå
 
 k
 = 
this
->
LGíome
.
	`©
(
˙t
);

512 
 k
->
	`Pröt_Me
();

514 
	}
}

519 #i‡
Ál£


	@Org.h

1 #i‚de‡
ORG_H_INCLUDED


2 
	#ORG_H_INCLUDED


	)

4 #i‡
Ál£


11 
	~"Ba£.h
"

12 
	~"FÀxøyC.h
"

13 
	~"Node.h
"

14 
	~"Fìd.h
"

16 
	#gíomñí
 1000

	)

17 
	#gíomñí2
 4

	)

18 
	#ba£amp
 
INT_MAX


	)

21 ˛as†
	cGíome
 {

22 
	mpublic
:

23 
˛ass
 
Org
 *
möe
;

25 c⁄° 
	gNodeNumLimô
 = 100;

27 
˛ass
 
	gOrg
;

28 
Org
 *
	tOrgPå
;

29 
	g°d
::
	tve˘‹
<
	tOrg
*> 
	tOrgVec
;

30 ˛as†
	cOrg
 {

31 
	mpublic
:

32 c⁄° 
NumSc‹es
 = 2;

33 
	mSc‹e
[
NumSc‹es
];

34 
Lug¨
 *
	mhome
;

35 
NodeVec
 
	mNGíe
;

36 
NodeVec
 *
	mNGíePå
;

37 
IoJackVec
 
	mGlobÆJackVec
;

39 
	$Org
() {

40 
NGíePå
 = &(
NGíe
);

41 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

42 
this
->
Sc‹e
[
˙t
] = 0.0;

44 
this
->
home
 = 
NULL
;

47 ~
	$Org
() {

48 
NodePå
 
ndp
;

49 
n˙t
=0;Ç˙t<
this
->
NGíe
.
	`size
();Çcnt++) {

50 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

51 
dñëe
 
ndp
;

53 
	`CÀ¨_IoNodes
();

54 
	}
}

56 
OrgPå
 
	$Abiogí©e
() {

57 
OrgPå
 
‹g
 = 
√w
 
	`Org
();

58 
‹g
->
	`Muèã_Me
(1.0);

59  
‹g
;

60 
	}
}

62 
	$Fúe_Cy˛e
() {

63 
NodePå
 
node
;

64 
size_t
 
siz
;

66 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

67 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

68 
this
->
GlobÆJackVec
.
	`©
(
n˙t
)->
Upw¨dVÆue
 = 0.0;

71 
siz
 = 
this
->
NGíe
.
	`size
();

72 
˙t
=0; c¡<
siz
; cnt++) {

73 
node
=
this
->
NGíe
.
	`©
(
˙t
);

74 
node
->
	`Push_Fúe
();

76 
˙t
=0; c¡<
siz
; cnt++) {

77 
node
=
this
->
NGíe
.
	`©
(
˙t
);

78 
node
->
	`CﬁÀ˘_And_Fúe
();

80 
	}
}

82 
	$R™d_Inô
() {

83 
this
->
	`Muèã_Me
(1.0);

84 
	}
}

86 
	$R™dom_In¸ó£
(
du≥quŸa
) {

87 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

88 
∫um
;

89 
NodePå
 
ndp
, 
du≥
;

90 i‡(
siz
==0) {

91 
this
->
NGíe
.
	`ªsize
(
gíomñí2
);

92 
n˙t
=0;Ç˙t<
gíomñí2
;Çcnt++) {

93 
du≥
 = 
Node
::
	`Abiogí©e
();

94 
this
->
NGíe
.
	`©
(
n˙t
Ë
du≥
;

96 
n˙t
=0;Ç˙t<
gíomñí2
;Çcnt++) {

97 
du≥
 = 
this
->
NGíe
.
	`©
(
n˙t
);

98 
du≥
->
	`R™dom_In¸ó£
(
this
->
NGíePå
, 1.0);

99 i‡(
du≥
->
LGíome
.
	`size
()>4) {

100 
boﬁ
 
n›
 = 
åue
;

105 
size_t
 
siz1
=
siz
;

106 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

107 
∫um
 = 
	`‰™d
();

108 i‡(
∫um
 < 
du≥quŸa
) {

110 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

111 
du≥
 = 
ndp
->
	`S∑wn
();

112 
du≥
->
S≥cõsId
 = 
IdMakî
::
	`MakeId
();

113 
this
->
NGíe
.
	`push_back
(
du≥
);

114 i‡(
this
->
NGíe
.
	`size
()>=
NodeNumLimô
) {;}

118 
	}
}

120 
	$Muèã_Me
(
MR©e
) {

122 
n˙t
, 
siz
;

123 
∫um
, 
kûlquŸa
, 
du≥quŸa
, 
m⁄°îquŸa
;

124 
kûlquŸa
 = 
du≥quŸa
 = 
m⁄°îquŸa
 = 0.5;

125 
kûlquŸa
 = 
du≥quŸa
 = 
m⁄°îquŸa
 = 
MR©e
;

126 
kûlquŸa
 = 0.5;

127 
du≥quŸa
 = 0.5;

128 
m⁄°îquŸa
 = 0.5;

129 
NodePå
 
ndp
, 
du≥
;

130 
KìpC¡
=0;

131 
siz
 = 
this
->
NGíe
.
	`size
();

135 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

136 
∫um
 = 
	`‰™d
();

137 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

138 i‡(
∫um
 < 
kûlquŸa
) {

139 
dñëe
 
ndp
;

141 
this
->
NGíe
.
	`©
(
KìpC¡
Ë
ndp
;

142 
KìpC¡
++;

145 
this
->
NGíe
.
	`ªsize
(
KìpC¡
);

146 
siz
 = 
KìpC¡
;

148 
	`R™dom_In¸ó£
(
du≥quŸa
);

149 
siz
 = 
this
->
NGíe
.
	`size
();

151 
	`S‹t_Nodes
();

154 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

155 
∫um
 = 
	`‰™d
();

156 i‡(
∫um
 < 
m⁄°îquŸa
) {

157 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

158 
ndp
->
	`Muèã_Me
(
NGíePå
);

162 
	}
}

164 
	$S‹t_Nodes
() {

165 
°d
::
	`s‹t
 (
NGíe
.
	`begö
(), NGíe.
	`íd
(), 
As˚ndögNodeUid
);

166 
	}
}

168 
OrgPå
 
	$S∑wn
() {

169 
OrgPå
 
chûd
;

170 
chûd
 = 
√w
 
	`Org
();

171 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

172 
NodePå
 
ndp
;

173 
chûd
->
NGíe
.
	`ªsize
(
siz
);

174 
˙t
=0; c¡<
siz
; cnt++) {

175 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

176 
ndp
 =Çdp->
	`S∑wn
();

177 
chûd
->
NGíe
.
	`©
(
˙t
Ë
ndp
;

179  
chûd
;

180 
	}
}

182 
boﬁ
 
	$As˚ndögNodeUid
(
NodePå
 
b0
, NodePå 
b1
) {

183  (
b0
->
S≥cõsId
 < 
b1
->SpeciesId);

184 
	}
}

186 
	$Uncompûe_Me
() {

187 
n˙t
, 
siz
;

188 
NodePå
 
ndp
;

189 
siz
 = 
this
->
NGíe
.
	`size
();

190 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

191 
ndp
 = 
this
->
NGíe
.
	`©
(
n˙t
);

192 
ndp
->
	`Uncompûe_Me
();

194 
	}
}

196 
	$Compûe_Me
() {

197 
UidTy≥
 
ID_¥ev
;

198 
NodePå
 
ndp
;

199 if(
Ál£
) {

200 
°d
::
	`øndom_shufÊe
 ( 
NGíe
.
	`begö
(), NGíe.
	`íd
() );

201 
	`S‹t_Nodes
();

203 if(!
	`Is_S‹ãd
()) {

204 
	`bug¥ötf
("NODES NOT SORTED!!!");

205 
throw
 123;

207 i‡(
Ál£
) {

208 
	`Remove_Du∂iˇã_Nodes
();

210 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

211 
˙t
=0; c¡<
siz
; cnt++) {

212 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

213 
ndp
->
	`Compûe_Me
(
NGíePå
);

216 
	}
}

218 
	$CÀ¨_Sc‹e
() {

219 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

220 
this
->
Sc‹e
[
˙t
]=0.0;

222 
	}
}

224 
	$O√ify_Sc‹e
() {

225 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

226 
this
->
Sc‹e
[
˙t
]=1.0;

228 
	}
}

230 
	$ResˇÀ_Sc‹e
(
Fa˘‹
) {

231 
˙t
=0; c¡<
NumSc‹es
; cnt++) {

232 
this
->
Sc‹e
[
˙t
]*=
Fa˘‹
;

234 
	}
}

237 
	$CÆcuœã_Sc‹e
() {

238 
NodePå
 
node
;

239 
Ról
, 
Gues£d
, 
Temp0
, 
Temp1
, 
SumSc‹e0
, 
SumSc‹e1
;

240 
IoJackPå
 
Jack
;

241 
size_t
 
siz
;

242 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

243 
SumSc‹e0
 = 1.0; 
SumSc‹e1
 = 0.0;

244 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

245 
Jack
 = 
this
->
GlobÆJackVec
.
	`©
(
n˙t
);

246 
Gues£d
 = 
Jack
->
Upw¨dVÆue
;

247 
Ról
 = 
Jack
->
	`GëVÆue
();

248 
Temp0
 = (2.0-
	`Ábs
(
Ról
-
Gues£d
))/2.0;

249 
Temp0
+=1.0;

250 
Temp1
 = 
	`m©h_sgn
(
Gues£d
)*m©h_sgn(
Ról
);

251 i‡(
	`Ábs
(
Temp1
)<
Fudge
) {

252 
boﬁ
 
n›
 = 
åue
;

254 
SumSc‹e0
 *
Temp0
;

255 
SumSc‹e1
 +
Temp1
;

257 
this
->
Sc‹e
[0] +
SumSc‹e0
;

258 
this
->
Sc‹e
[1] +
SumSc‹e1
;

259 
boﬁ
 
n›
 = 
åue
;

260 
	}
}

263 
	$CÆcuœã_Sc‹e
() {

264 
NodePå
 
node
;

265 
Ról
, 
Gues£d
, 
Temp0
, 
Temp1
, 
SumSc‹e0
, 
SumSc‹e1
;

266 
IoJackPå
 
Jack
;

267 
size_t
 
siz
;

268 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

269 
SumSc‹e0
 = 0.0; 
SumSc‹e1
 = 0.0;

270 
n˙t
=0;Ç˙t<
siz
;Çcnt++) {

271 
Jack
 = 
this
->
GlobÆJackVec
.
	`©
(
n˙t
);

272 
Gues£d
 = 
Jack
->
Upw¨dVÆue
;

273 
Ról
 = 
Jack
->
	`GëVÆue
();

274 
Temp0
 = 
	`m©h_sgn
(
Gues£d
)*m©h_sgn(
Ról
);

275 
Temp1
 = 
Gues£d
*
Ról
;

276 i‡(
	`Ábs
(
Temp1
)<
Fudge
) {

277 
boﬁ
 
n›
 = 
åue
;

279 
SumSc‹e0
 +
Temp0
;

280 
SumSc‹e1
 +
Temp1
;

282 
this
->
Sc‹e
[0] +
SumSc‹e0
;

283 
this
->
Sc‹e
[1] +
SumSc‹e1
;

284 
boﬁ
 
n›
 = 
åue
;

285 
	}
}

288 
	$Upd©e_From_Fìd
() {

289 
IoJackPå
 
LoˇlJack
;

290 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

291 
˙t
=0; c¡<
siz
; cnt++) {

292 
LoˇlJack
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

308 
	}
}

310 
	$G©hî_IoNodes
() {

311 
FR
::
FÀxøy
<
IoJack
> 
‰ay
;

312 
IoDexTy≥
 
IoS≥cõsId
;

313 
IoJackPå
 
jack
;

314 
NodePå
 
ndp
;

315 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

316 
˙t
=0; c¡<
siz
; cnt++) {

317 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

318 
ndp
->
MyTy≥
) {

319 
IoTy≥
::
I¡ø
:

320 
ndp
->
Jack
 = 
NULL
;

322 
IoTy≥
::
GlobÆIO
:

323 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

324 i‡((
jack
 = 
‰ay
.
	`Lookup
(
IoS≥cõsId
))==
NULL
) {

325 
jack
 = 
√w
 
	`IoJack
(); jack->
P‹tId
 = 
ndp
->
IoS≥cõsId
;

326 
‰ay
.
	`In£π
(
IoS≥cõsId
, 
jack
); 
GlobÆJackVec
.
	`push_back
(jack);

328 
ndp
->
Jack
 = 
jack
->
	`AddRef
();

330 
IoTy≥
::
NbrIO
:

331 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

336 
	}
}

338 
	$Swìp_Jacks_CÆlback
(
IoJack
 *
jack
) {

339 if(
jack
->
Dïªˇãd
Ë{ 
dñëe
 jack; }

340 
	}
}

342 
	$CÀ¨_IoNodes
() {

343 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

344 
˙t
=0; c¡<
siz
; cnt++) {

345 
dñëe
 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

347 
this
->
GlobÆJackVec
.
	`˛ór
();

348 
	}
}

350 
	$G©hî_IoNodes_And_C⁄√˘
(
FìdPå
 
food
) {

351 
FR
::
FÀxøy
<
IoJack
> 
‰ay
;

352 
size_t
 
p‹tsiz
 = 
food
->
	`size
();

353 
IoDexTy≥
 
IoS≥cõsId
;

354 
IoJackPå
 
LoˇlJack
;

355 
GlobÆIoJackPå
 
GlobÆJack
;

356 
uöt32_t
 
föddex
;

357 
NodePå
 
ndp
;

358 
	`CÀ¨_IoNodes
();

359 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

360 
˙t
=0; c¡<
siz
; cnt++) {

361 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

362 
ndp
->
MyTy≥
) {

363 
IoTy≥
::
I¡ø
:

364 
ndp
->
Jack
 = 
NULL
;

366 
IoTy≥
::
GlobÆIO
:

367 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

368 i‡((
LoˇlJack
 = 
‰ay
.
	`Lookup
(
IoS≥cõsId
))==
NULL
) {

369 
LoˇlJack
 = 
√w
 
	`IoJack
();

370 
‰ay
.
	`In£π
(
IoS≥cõsId
, 
LoˇlJack
);

372 
LoˇlJack
->
P‹tId
 = 
IoS≥cõsId
;

373 
föddex
 = 
food
->
	`TªeSórchP‹ts
(0, 
IoS≥cõsId
);

374 i‡(
föddex
<
p‹tsiz
 && (
GlobÆJack
=
food
->
P‹ts
.
	`©
(föddex))->
P‹tId
 =
IoS≥cõsId
) {

375 
LoˇlJack
->
UpSåóm
 = 
GlobÆJack
->
	`AddRef
();

376 
GlobÆJackVec
.
	`push_back
(
LoˇlJack
);

378 
LoˇlJack
->
Dïªˇãd
 = 
åue
;

382 i‡(
LoˇlJack
->
Dïªˇãd
) {

383 
ndp
->
MyTy≥
 = 
IoTy≥
::
I¡ø
;

385 
ndp
->
Jack
 = 
LoˇlJack
->
	`AddRef
();

388 
IoTy≥
::
NbrIO
:

389 
IoS≥cõsId
 = 
ndp
->IoSpeciesId;

398 
uöt32_t
 
∑ck˙t
 = 0;

399 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

400 
˙t
=0; c¡<
siz
; cnt++) {

401 
LoˇlJack
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

402 if(
LoˇlJack
->
Dïªˇãd
Ë{ 
dñëe
 LocalJack; }

404 
this
->
GlobÆJackVec
.
	`©
(
∑ck˙t
Ë
LoˇlJack
;

405 
∑ck˙t
++;

408 
this
->
GlobÆJackVec
.
	`ªsize
(
∑ck˙t
);

409 
	}
}

411 
	$C⁄√˘_Jacks
(
FìdPå
 
food
) {

412 
FR
::
FÀxøy
<
IoJack
> 
‰ay
;

413 
size_t
 
p‹tsiz
 = 
food
->
	`size
();

414 
IoDexTy≥
 
P‹tId
;

415 
IoJackPå
 
LoˇlJack
;

416 
GlobÆIoJackPå
 
GlobÆJack
;

417 
uöt32_t
 
föddex
;

418 
uöt32_t
 
∑ck˙t
 = 0;

419 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

420 
˙t
=0; c¡<
siz
; cnt++) {

421 
LoˇlJack
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

422 
P‹tId
 = 
LoˇlJack
->PortId;

423 
föddex
 = 
food
->
	`TªeSórchP‹ts
(0, 
P‹tId
);

424 i‡(
Ál£
) {

425 i‡(
föddex
<
p‹tsiz
) {

426 
GlobÆJack
=
food
->
P‹ts
.
	`©
(
föddex
);

427 i‡(
GlobÆJack
->
P‹tId
 == PortId) {

428 
LoˇlJack
->
UpSåóm
 = 
GlobÆJack
->
	`AddRef
();

429 
this
->
GlobÆJackVec
.
	`©
(
∑ck˙t
Ë
LoˇlJack
;

430 
∑ck˙t
++;

434 i‡(
föddex
<
p‹tsiz
 && (
GlobÆJack
=
food
->
P‹ts
.
	`©
(föddex))->
P‹tId
 == PortId) {

435 
LoˇlJack
->
UpSåóm
 = 
GlobÆJack
->
	`AddRef
();

436 
this
->
GlobÆJackVec
.
	`©
(
∑ck˙t
Ë
LoˇlJack
;

437 
∑ck˙t
++;

439 
LoˇlJack
->
Dïªˇãd
 = 
åue
;

443 
this
->
GlobÆJackVec
.
	`ªsize
(
∑ck˙t
);

444 
	}
}

446 
	$Remove_Du∂iˇã_Nodes
() {

447 
UidTy≥
 
ID_¥ev
;

448 
NodePå
 
ndp
;

449 
°d
::
	`øndom_shufÊe
 ( 
NGíe
.
	`begö
(), NGíe.
	`íd
() );

450 
	`S‹t_Nodes
();

451 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

452 
UniqueC¡
=0;

453 
ID_¥ev
 = 
UidNuŒ
;

454 
˙t
=0; c¡<
siz
; cnt++) {

455 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

456 i‡(
ndp
->
S≥cõsId
 !
ID_¥ev
) {

457 
this
->
NGíe
.
	`©
(
UniqueC¡
Ë
ndp
;

458 
ID_¥ev
 = 
ndp
->
S≥cõsId
;

459 
UniqueC¡
++;

461 
dñëe
 
ndp
;

464 
this
->
NGíe
.
	`ªsize
(
UniqueC¡
);

465 
	}
}

467 
boﬁ
 
	$Is_S‹ãd
() {

468 
UidTy≥
 
ID_¥ev
 = 0;

469 
NodePå
 
ndp
;

470 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

471 
˙t
=0; c¡<
siz
; cnt++) {

472 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

473 if(
ID_¥ev
>
ndp
->
S≥cõsId
) {

474  
Ál£
;

476 
ID_¥ev
=
ndp
->
S≥cõsId
;

478  
åue
;

479 
	}
}

481 
	$CÀ™_Me
() {

482 
NodePå
 
ndp
;

483 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

484 
˙t
=0; c¡<
siz
; cnt++) {

485 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

486 
ndp
->
	`CÀ™_Me
();

488 
	}
}

490 
	$CÀ™_Invít‹y
(
UidVec
 *
uvec
) {

491 
NodePå
 
ndp
;

492 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

493 
˙t
=0; c¡<
siz
; cnt++) {

494 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

495 
ndp
->
	`CÀ™_Invít‹y
(
uvec
);

497 
	}
}

499 
	$Invít‹y
(
UidVec
 *
uvec
) {

500 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

501 
˙t
=0; c¡<
siz
; cnt++) {

502 
NodePå
 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

503 
uvec
->
	`push_back
(
ndp
->
S≥cõsId
);

505 
	}
}

507 
	$Pröt_Me
() {

508 
NodePå
 
ndp
;

509 
	`bug¥ötf
("Org\n");

510 
	`Pröt_Sc‹e
();

511 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

512 
	`bug¥ötf
("numÇodes:%li\n", 
siz
);

513 
˙t
=0; c¡<
siz
; cnt++) {

514 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

515 
	`bug¥ötf
(" Nodêaddr:%p\n", 
ndp
);

516 
ndp
->
	`Pröt_Me
();

518 
	}
}

520 
	$Pröt_Jacks
() {

521 
IoJackPå
 
jckp
;

522 
ch
;

523 
size_t
 
siz
 = 
this
->
GlobÆJackVec
.
	`size
();

524 
˙t
=0; c¡<
siz
; cnt++) {

525 
jckp
 = 
this
->
GlobÆJackVec
.
	`©
(
˙t
);

526 
ch
 = 
jckp
->
P‹tId
;

527 
	`bug¥ötf
("%c, ", 
ch
);

529 
	}
}

531 
	$Pröt_Sc‹e
() {

532 
	`bug¥ötf
(" Sc‹e:%f, %f\n", 
this
->
Sc‹e
[0],Åhis->Score[1]);

533 
	}
}

535 
	$Com∑ª_Sc‹e
(
OrgPå
 
Ÿhî
) {

536 
˙t
 = 0;

537 *
Sc‹eMe
, *
Sc‹eYou
;

538 
Sc‹eMe
=
this
->
Sc‹e
; 
Sc‹eYou
=
Ÿhî
->Score;

539 
˙t
<
NumSc‹es
) {

540 i‡(
Sc‹eMe
[
˙t
]<
Sc‹eYou
[cnt]) { 1;}

541 i‡(
Sc‹eMe
[
˙t
]>
Sc‹eYou
[cnt]) { -1;}

542 
˙t
++;

545 
	}
}

546 #i‡
Ál£


548 
	$Invít‹y
(
UidM≠
 *
um≠
) {

549 
UidM≠
 
um≠2
;

550 
°d
::
∑ú
<°d::
m≠
<
UidTy≥
,UidTy≥>::
ôî©‹
,
boﬁ
> 
ªt
;

551 
size_t
 
siz
 = 
this
->
NGíe
.
	`size
();

553 
˙t
=0; c¡<
siz
; cnt++) {

554 
NodePå
 
ndp
 = 
this
->
NGíe
.
	`©
(
˙t
);

556 i‡(
ªt
.
£c⁄d
==
Ál£
) {

557 
°d
::
cout
 << "element 'z'álreadyÉxisted";

560 
um≠2
[
ndp
->
S≥cõsId
] =Çdp->SpeciesId;

562 
	}
}

	@Pop.h

1 #i‚de‡
POP_H_INCLUDED


2 
	#POP_H_INCLUDED


	)

4 
	~"Org.h
"

5 
	~"Lug¨.h
"

8 
	#p›max
 300

	)

13 
˛ass
 
	gP›
;

14 
P›
 *
	tP›På
;

15 ˛as†
	cP›
 {

16 
	mpublic
:

17 
size_t
 
p›sz
;

18 
Lug¨Vec
 
	mf‹e°v
;

19 
OrgVec
 
	mSc‹eDexv
;

20 
	sSc‹ePaú
 { 
	mSc‹e
[2]; };

21 
	g°d
::
ve˘‹
<
Sc‹ePaú
> 
Sc‹eBuf
;

22 
uöt32_t
 
	gMaxNeuroGís
 = 2000;

23 
	gSurvivÆR©e
 = 0.5;

24 
FìdPå
 
	gGlobÆFìd
;

26 
	$P›
(Ë: 
	$P›
(
p›max
) {

27 
	}
}

29 
	$P›
(
size_t
 
p›size
) {

30 
Lug¨På
 
lug¨
;

31 
Org
 *
‹g
;

32 
size_t
 
p˙t
;

33 
this
->
p›sz
 = 
p›size
;

34 
f‹e°v
.
	`ªsize
(
p›size
);

35 
Sc‹eDexv
.
	`ªsize
(
p›size
);

36 
Sc‹eBuf
.
	`ªsize
(
p›size
);

37 
p˙t
=0;Ö˙t<
p›size
;Öcnt++) {

38 
lug¨
 = 
√w
 
	`Lug¨
();

39 
‹g
 = 
Org
::
	`Abiogí©e
(); 
lug¨
->
	`Aâach_Tí™t
(org);

40 
f‹e°v
.
	`©
(
p˙t
Ë
lug¨
;

41 
Sc‹eDexv
.
	`©
(
p˙t
Ë
‹g
;

43 
	}
}

45 ~
	$P›
() {

46 
size_t
 
siz
, 
p˙t
;

47 
siz
 = 
f‹e°v
.
	`size
();

48 
p˙t
=0;Ö˙t<
siz
;Öcnt++) {

49 
dñëe
 
f‹e°v
.
	`©
(
p˙t
);

51 
	}
}

53 
	$Aâach_GlobÆ_Fìd
(
FìdPå
 
Food
) {

54 
this
->
GlobÆFìd
 = 
Food
;

55 
	}
}

57 
	$Fúe_Cy˛e
() {

58 
Lug¨På
 
lug¨
;

59 
OrgPå
 
‹g
;

60 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

61 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

62 
lug¨
=
this
->
f‹e°v
.
	`©
(
˙t
);

63 
‹g
=
lug¨
->
ã«¡
;

64 
‹g
->
	`Fúe_Cy˛e
();

66 
	}
}

68 
	$CÀ¨_Sc‹es
() {

69 
OrgPå
 
‹g
;

70 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
();

71 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

72 
‹g
=
this
->
Sc‹eDexv
.
	`©
(
˙t
);

73 
‹g
->
	`CÀ¨_Sc‹e
();

75 
	}
}

77 
	$CÆcuœã_Sc‹es
() {

78 
OrgPå
 
‹g
;

79 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
();

80 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

81 
‹g
=
this
->
Sc‹eDexv
.
	`©
(
˙t
);

82 
‹g
->
	`CÆcuœã_Sc‹e
();

84 
	}
}

86 
	$Gí
() {

87 
uöt32_t
 
p›size
 = 
this
->
f‹e°v
.
	`size
();

88 
Fúe_Te°_Cy˛es
 = 50;

90 
Te°_Lí
 = 10;

91 
Sèπ_Te°ög
 = 
Fúe_Te°_Cy˛es
-
Te°_Lí
;

93 
Lug¨På
 
lug¨
;

94 
Org
 *
∑ª¡
, *
chûd
;

95 
uöt32_t
 
p˙t
;

96 
Lug¨På
 
∂a˚
;

98 
RTîm
 = 
	`ønd
()%7;

99 
f˙t
=0; f˙t<
RTîm
; fcnt++) {

100 
this
->
GlobÆFìd
->
	`NextGí
();

102 
	`CÀ¨_Sc‹es
();

103 
f˙t
=0; f˙t<
Fúe_Te°_Cy˛es
; fcnt++) {

104 
this
->
GlobÆFìd
->
	`NextGí
();

105 
this
->
	`Fúe_Cy˛e
();

106 i‡(
Sèπ_Te°ög
 <
f˙t
){

107 
this
->
	`CÆcuœã_Sc‹es
();

115 
	`S‹t
();

116 
	`Rec‹d_Sc‹es
();

117 
OrgPå
 
be°bó°
 = 
Sc‹eDexv
[0];

118 
OrgPå
 
Àa°bó°
 = 
Sc‹eDexv
[
this
->
p›sz
-2];

120 
	`Búth_And_Dóth
(
SurvivÆR©e
);

121 
	}
}

123 
	$AvgBó°Sc‹e
(
T›Pî˚¡
) {

124 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

125 
size_t
 
Limô
 = (
T›Pî˚¡
*()
siz
);

126 
sum
 = 0.0;

128 
˙t
=0; c¡<
Limô
; cnt++) {

130 
sum
 +
Sc‹eDexv
[
˙t
]->
Sc‹e
[1];

133 
sum
 /()
Limô
;

134  
sum
;

135 
	}
}

137 
uöt32_t
 
	$GëMaxSize
() {

138 
uöt32_t
 
MaxSize
=0, 
SumSize
=0, 
AvgSize
=0;

139 
uöt32_t
 
p›size
 = 
this
->
f‹e°v
.
	`size
();

140 
uöt32_t
 
numnodes
;

141 
Lug¨På
 
lug¨
;

142 
OrgPå
 
‹g
;

143 
uöt32_t
 
p˙t
;

144 
Lug¨På
 
∂a˚
;

145 
p˙t
=0;Ö˙t<
p›size
;Öcnt++) {

146 
lug¨
 = 
f‹e°v
[
p˙t
];

147 
‹g
 = 
lug¨
->
ã«¡
;

148 
numnodes
=
‹g
->
NGíe
.
	`size
();

149 i‡(
MaxSize
<
numnodes
) {

150 
MaxSize

numnodes
;

152 
SumSize
 +
numnodes
;

154  
MaxSize
;

155 
	}
}

157 
boﬁ
 
	$As˚ndögSc‹e
(
OrgPå
 
b0
, OrgPå 
b1
) {

158  
b0
->
	`Com∑ª_Sc‹e
(
b1
) > 0;

159 
	}
}

160 
boﬁ
 
	$Des˚ndögSc‹e
(
OrgPå
 
b0
, OrgPå 
b1
) {

161  
b1
->
	`Com∑ª_Sc‹e
(
b0
) > 0;

162 
	}
}

163 
	$S‹t
() {

164 
°d
::
	`øndom_shufÊe
(
Sc‹eDexv
.
	`begö
(), Sc‹eDexv.
	`íd
());

165 
°d
::
	`s‹t
 (
Sc‹eDexv
.
	`begö
(), Sc‹eDexv.
	`íd
(), 
Des˚ndögSc‹e
);

166 
	}
}

168 
	$Búth_And_Dóth
(
SurvivÆR©e
) {

169 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

170 
size_t
 
NumSurviv‹s
 = 
siz
 * 
SurvivÆR©e
;

171 
size_t
 
t›˙t
, 
˙t
;

172 
Lug¨På
 
home
;

173 
OrgPå
 
doomed
, 
∑ª¡
, 
chûd
;

174 
t›˙t
 = 0;

175 
˙t
=
NumSurviv‹s
; c¡<
siz
; cnt++) {

176 
doomed
 = 
Sc‹eDexv
[
˙t
]; 
home
 = doomed->home;

177 
∑ª¡
 = 
Sc‹eDexv
[
t›˙t
];

178 
chûd
 = 
∑ª¡
->
	`S∑wn
();

179 
home
->
	`Aâach_Tí™t
(
chûd
); 
Sc‹eDexv
[
˙t
] = child;

180 
dñëe
 
doomed
;

181 
t›˙t
++;

182 i‡(
t›˙t
>=
NumSurviv‹s
) {topcnt=0;}

184 
	}
}

186 
	$Rec‹d_Sc‹es
() {

187 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

188 *
De°
, *
Src
;

189 
˙t
=0; c¡<
siz
; cnt++) {

190 
Src
 = 
Sc‹eDexv
[
˙t
]->
Sc‹e
;

191 
De°
 = 
Sc‹eBuf
.
	`©
(
˙t
).
Sc‹e
;

192 
De°
[0] = 
Src
[0];

193 
De°
[1] = 
Src
[1];

195 
	}
}

197 
	$Pröt_S‹ãd_Sc‹es
() {

198 *
Sc‹e
;

199 
size_t
 
siz
 = 
Sc‹eDexv
.
	`size
();

200 
size_t
 
˙t
;

201 
˙t
=0; c¡<
siz
; cnt++) {

202 
Sc‹e
 = 
Sc‹eBuf
.
	`©
(
˙t
).Score;

203 
	`bug¥ötf
(" %03li, Sc‹e:%f, %f\n", 
˙t
, 
Sc‹e
[0], Score[1]);

204 i‡(
Sc‹e
[0]!=0.0) {

205 
boﬁ
 
n›
 = 
åue
;

208 
	}
}

210 
	$Muèã
(
P›_MR©e
, 
Org_MR©e
) {

211 
OrgPå
 
‹g
;

212 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
();

213 
size_t
 
Num2Muèã
 = (
P›_MR©e
 * ()
siz
);

214 
size_t
 
Fú°Org
, 
La°Org
;

215 
Fú°Org
 = 
siz
-2;

216 
La°Org
 = 
siz
-
Num2Muèã
;

217 
˙t
=
Fú°Org
; c¡>=
La°Org
; cnt--) {

218 
‹g
 = 
this
->
Sc‹eDexv
[
˙t
];

219 
‹g
->
	`Muèã_Me
(
Org_MR©e
);

221 
‹g
 = 
this
->
Sc‹eDexv
[
Fú°Org
];

222 
‹g
->
	`R™d_Inô
();

223 
	}
}

225 
	$Muèã2
(
P›_MR©e
, 
Org_MR©e
) {

226 
OrgPå
 
‹g
;

227 
size_t
 
Fú°Org
, 
La°Org
;

228 
Fú°Org
 = 10;

229 
size_t
 
siz
 = 
this
->
Sc‹eDexv
.
	`size
(); 
La°Org
 = siz-1;

230 
˙t
=
Fú°Org
; c¡<
La°Org
; cnt++) {

231 i‡(
	`‰™d
()<
P›_MR©e
) {

232 
‹g
 = 
this
->
Sc‹eDexv
[
˙t
];

233 
‹g
->
	`Muèã_Me
(
Org_MR©e
);

236 
‹g
 = 
this
->
Sc‹eDexv
[
La°Org
];

237 
‹g
->
	`R™d_Inô
();

238 
	}
}

239 #i‡
Ál£


240 
	gbøöÁrm
, 
we
 
ªÆly
 
√ed
 
good
 
	gmërics
.

241 
suc˚ss
 
is
 
dëîmöed
 
by
 
beög
 
digôÆly
 
˛o£
 
to
 
™swî
 
wôhö
 
X
 
limô
 
Y
 
time
 (
∂©óu
Ë- 
thí
 
	gquô
.

242 
but
 
óch
 
	gquô
, 
∂ay
 
game
 
ovî
 
agaö
 
‰om
 
	gs¸©ch
, 
gë
 
Z
 
åüls
 
™d
 
avg
 
	gthem
. (
maybe
 
ª≥©
 
u¡û
ávg 
is
 
	g°abÀ
.)

244 
Æso
 
™Æog
 
	g˛o£
?

246 
VERY
 
time
 
	gc⁄sumög
. 
wh©
 
∑ømëîs
 
¨e
 
mo°
 
	gimp‹è¡
?

247 
°¨t
 
wôh
 
ósy
 
	ggﬂls
, 2 
	g‹
 3 
©
 
fú°


249 
ømp
 
muèti⁄
 
p›
 
øã0
 
is
 
ovîÆl
 
avîage
 
øã


250 
	gøã2
 = 
øã0
*2;

251 
˙t
 = 0 
to
 
siz
){

252 
øã
 = ((()
˙t
Ë/ ()
siz
)*
øã2
;

253 i‡(
ønd
<
øã
){

255 
	}
}

256 
w‹ks
 
u¡û
 
øã
 
is
 
	govî
 0.5

258 
	gOR
, 
ju°
 dÿ
the
 
sﬁid
 
X
 
≥r˚¡
 
of
Åhê
	gp›
, 
°¨tög
 
©
 
	gbŸtom
. 
no
 
øndom
 
about
 
	gô
.

262 
	$C⁄√˘_Jacks
(
FìdPå
 
food
) {

263 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

264 
˙t
=0; c¡<
siz
; cnt++) {

265 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

266 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

267 
‹g
->
	`C⁄√˘_Jacks
(
food
);

269 
	}
}

271 
	$G©hî_IoNodes_And_C⁄√˘
(
FìdPå
 
food
) {

272 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

273 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

274 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

275 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

276 
‹g
->
	`G©hî_IoNodes_And_C⁄√˘
(
food
);

278 
	}
}

280 
	$Compûe_Me
() {

281 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

282 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

283 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

284 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

285 
‹g
->
	`Compûe_Me
();

287 
	}
}

289 
	$CÀ™_Me
() {

290 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

291 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

292 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

293 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

294 
‹g
->
	`CÀ™_Me
();

296 
	}
}

298 
	$CÀ™_Invít‹y
() {

299 
UidVec
 
uvec
;

300 
this
->
	`Invít‹y
(&
uvec
);

301 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

302 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

303 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

304 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

305 
‹g
->
	`CÀ™_Invít‹y
(&
uvec
);

307 
	}
}

309 
boﬁ
 
	$As˚ndögUid
(
UidTy≥
 
b0
, UidTy≥ 
b1
) {

310  (
b0
 < 
b1
);

311 
	}
}

313 
	$Invít‹y
(
UidVec
 *
uvec
) {

314 
UidTy≥
 
ndp
, 
ID_¥ev
;

315 
uvec
->
	`˛ór
();

316 
size_t
 
siz
 = 
this
->
f‹e°v
.
	`size
();

317 
size_t
 
˙t
=0; c¡<
siz
; cnt++) {

318 
Lug¨På
 
lug¨
 = 
this
->
f‹e°v
.
	`©
(
˙t
);

319 
OrgPå
 
‹g
 = 
lug¨
->
ã«¡
;

320 
‹g
->
	`Invít‹y
(
uvec
);

322 
°d
::
	`s‹t
 (
uvec
->
	`begö
(), uvec->
	`íd
(), 
As˚ndögUid
);

323 
size_t
 
UniqueC¡
=0;

324 
ID_¥ev
 = 
UidNuŒ
;

325 
size_t
 
˙t
=0; c¡<
uvec
->
	`size
(); cnt++) {

326 
ndp
 = 
uvec
->
	`©
(
˙t
);

327 i‡(
ndp
 !
ID_¥ev
) {

328 
uvec
->
	`©
(
UniqueC¡
Ë
ndp
;

329 
ID_¥ev
 = 
ndp
;

330 
UniqueC¡
++;

333 
uvec
->
	`ªsize
(
UniqueC¡
);

334 
siz
 = 
UniqueC¡
;

335 
	}
}

	@flexray.h

27 #i‚de‡
FLEXRAY_H_INCLUDED


28 
	#FLEXRAY_H_INCLUDED


	)

30 #ifde‡
__˝lu•lus


34 #i‚de‡
boﬁ


35 
	#boﬁ
 

	)

36 
	#åue
 0x1

	)

37 
	#Ál£
 0x0

	)

39 #i‚de‡
öt8


40 
	#öt8
 

	)

42 #i‚de‡
uöt8


43 
	#uöt8
 
öt8


	)

45 #i‚de‡
öt32


46 
	#öt32
 

	)

48 #i‚de‡
uöt32


49 
	#uöt32
 
öt32


	)

50 
	#maxuöt32
 (~(
uöt32
)0)

	)

54 
ÀafT
 *
	tÀafTPå
;

55 
	sÀafT


59 
	mvÆue
;

60 
	mxyz
[3];

61 }
	tÀafT
;

64 
uöt32
 
	tÀafT
;

67 
	sÊexñT


72 
uöt8
 
	gnum_chûdªn
;

73 
	udown
{

74 
ÊexñT
 *
	g√xt
;

75 
ÀafT
 *
	gÀaf
;

76 }
	gdown
;

77 }
	tÊexñT
;

80 
	tÊexøy_ÀafkûlT
(*
	tÀaf
);

82 
Êexøy_öô
(
ÊexñT
 *
t›node
);

83 
boﬁ
 
Êexøy_ö£π
(
ÊexñT
 *
t›node
,
uöt32
 
key
,
ÀafT
 *
√wÀaf
);

84 
Êexøy_de°roy
(
ÊexñT
 *
t›node
,
Êexøy_ÀafkûlT
 *
Àafkûl
);

85 
ÀafT
 *
Êexøy_lookup
(
ÊexñT
 *
t›node
,
uöt32
 
key
);

86 
ÀafT
 *
Êexøy_ªmove
(
ÊexñT
 *
t›node
,
uöt32
 
key
);

87 
ÀafT
 *
Êexøy_toggÀ
(
ÊexñT
 *
t›node
,
uöt32
 
key
,ÀafT *
√wÀaf
);

89 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

20 #i‚de‡
_MATH_H


25 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

31 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


33 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

34 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

35 #ifde‡
__MATH_DECLARE_LDOUBLE


36 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

41 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

42 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

43 #ifde‡
__MATH_DECLARE_LDOUBLE


44 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

48 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

49 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 
__REDIRECT_NTH
 (
©™2l
, (, ),

52 
__©™2l_föôe
);

55 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


57 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

58 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

59 #ifde‡
__MATH_DECLARE_LDOUBLE


60 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

65 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

66 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

67 #ifde‡
__MATH_DECLARE_LDOUBLE


68 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

72 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

73 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

74 #ifde‡
__MATH_DECLARE_LDOUBLE


75 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

78 #ifde‡
__USE_GNU


80 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

81 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

82 #ifde‡
__MATH_DECLARE_LDOUBLE


83 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

87 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

88 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

89 #ifde‡
__MATH_DECLARE_LDOUBLE


90 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

94 #ifde‡
__USE_ISOC99


96 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

97 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

104 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

105 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

106 #ifde‡
__MATH_DECLARE_LDOUBLE


107 
__REDIRECT_NTH
 (
fmodl
, (, ),

108 
__fmodl_föôe
);

111 #ifde‡
__USE_ISOC99


113 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

114 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

115 #ifde‡
__MATH_DECLARE_LDOUBLE


116 
__REDIRECT_NTH
 (
hypŸl
, (, ),

117 
__hypŸl_föôe
);

121 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


123 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

124 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

125 #ifde‡
__MATH_DECLARE_LDOUBLE


126 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

130 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

131 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

132 #ifde‡
__MATH_DECLARE_LDOUBLE


133 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

137 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

138 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

139 #ifde‡
__MATH_DECLARE_LDOUBLE


140 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

144 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

145 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

151 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

152 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

153 #ifde‡
__MATH_DECLARE_LDOUBLE


154 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

158 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

159 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

165 #ifde‡
__USE_MISC


167 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

168 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

169 #ifde‡
__MATH_DECLARE_LDOUBLE


170 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

171 
__lgammÆ_r_föôe
);

175 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


177 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

179 #ifde‡
__USE_ISOC99


180 
__loˇl_signgam
 = 0;

181  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

183  
	`lgamma_r
 (
__d
, &
signgam
);

185 
	}
}

186 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

188 #ifde‡
__USE_ISOC99


189 
__loˇl_signgam
 = 0;

190  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

192  
	`lgammaf_r
 (
__d
, &
signgam
);

194 
	}
}

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

198 #ifde‡
__USE_ISOC99


199 
__loˇl_signgam
 = 0;

200  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

202  
	`lgammÆ_r
 (
__d
, &
signgam
);

204 
	}
}

208 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


210 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

212 #ifde‡
__USE_ISOC99


213 
__loˇl_signgam
 = 0;

214  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

216  
	`lgamma_r
 (
__d
, &
signgam
);

218 
	}
}

219 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

221 #ifde‡
__USE_ISOC99


222 
__loˇl_signgam
 = 0;

223  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

225  
	`lgammaf_r
 (
__d
, &
signgam
);

227 
	}
}

228 #ifde‡
__MATH_DECLARE_LDOUBLE


229 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

231 #ifde‡
__USE_ISOC99


232 
__loˇl_signgam
 = 0;

233  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

235  
	`lgammÆ_r
 (
__d
, &
signgam
);

237 
	}
}

242 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

243 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

244 #ifde‡
__MATH_DECLARE_LDOUBLE


245 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

249 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

250 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

251 #ifde‡
__MATH_DECLARE_LDOUBLE


252 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

255 #ifde‡
__USE_ISOC99


257 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

258 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

259 #ifde‡
__MATH_DECLARE_LDOUBLE


260 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

265 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

266 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

267 #ifde‡
__MATH_DECLARE_LDOUBLE


268 
__REDIRECT_NTH
 (
powl
, (, ),

269 
__powl_föôe
);

273 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

274 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

275 #ifde‡
__MATH_DECLARE_LDOUBLE


276 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

277 
__ªmaödîl_föôe
);

280 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


282 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

283 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

286 
__sˇlbl_föôe
);

291 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

292 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

293 #ifde‡
__MATH_DECLARE_LDOUBLE


294 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

298 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

299 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

300 #ifde‡
__MATH_DECLARE_LDOUBLE


301 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

304 #ifde‡
__USE_ISOC99


306 
__gamma_r_föôe
 (, *);

307 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

309 
__loˇl_signgam
 = 0;

310 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

311  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

312 
	}
}

313 
__gammaf_r_föôe
 (, *);

314 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

316 
__loˇl_signgam
 = 0;

317 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

318  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

319 
	}
}

320 #ifde‡
__MATH_DECLARE_LDOUBLE


321 
__gammÆ_r_föôe
 (, *);

322 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

324 
__loˇl_signgam
 = 0;

325 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

326  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

327 
	}
}

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
))

117 
__©åibuã__
 ((
__n⁄nuŒ__
 (2)));

118 
	g_MdoubÀ_END_NAMESPACE


120 #ifde‡
__USE_GNU


122 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

124 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

127 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


128 
__BEGIN_NAMESPACE_C99


130 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

136 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

137 
	g__END_NAMESPACE_C99


140 #ifde‡
__USE_ISOC99


141 
__BEGIN_NAMESPACE_C99


143 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

146 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

147 
	g__END_NAMESPACE_C99


153 
_MdoubÀ_BEGIN_NAMESPACE


155 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

158 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

159 
	g_MdoubÀ_END_NAMESPACE


161 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


162 
__BEGIN_NAMESPACE_C99


164 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

165 
	g__END_NAMESPACE_C99


168 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


169 
__BEGIN_NAMESPACE_C99


171 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

172 
	g__END_NAMESPACE_C99


178 
_MdoubÀ_BEGIN_NAMESPACE


180 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

183 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

186 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

189 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

194 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

198 
	g_MdoubÀ_END_NAMESPACE


200 #ifde‡
__USE_MISC


203 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

206 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

209 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

213 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

216 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


217 
__BEGIN_NAMESPACE_C99


219 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

220 
	g__END_NAMESPACE_C99


223 #ifde‡
__USE_ISOC99


224 
__BEGIN_NAMESPACE_C99


226 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

227 
	g__END_NAMESPACE_C99


232 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

239 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

242 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

244 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

248 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


249 
__BEGIN_NAMESPACE_C99


251 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

253 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

254 
	g__END_NAMESPACE_C99


257 #ifde‡
__USE_ISOC99


258 
__BEGIN_NAMESPACE_C99


260 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

261 
	g__END_NAMESPACE_C99


264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

269 #ifde‡
__USE_MISC


273 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

277 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


278 
__BEGIN_NAMESPACE_C99


281 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

284 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

285 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


286 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

290 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

292 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


294 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

298 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

301 #ifde‡
__USE_ISOC99


303 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

307 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

311 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

315 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

320 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

327 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

328 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

343 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


365 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

50 #i‡
__FP_FAST_FMA


51 
	#FP_FAST_FMA
 1

	)

54 #i‡
__FP_FAST_FMAF


55 
	#FP_FAST_FMAF
 1

	)

58 #i‡
__FP_FAST_FMAL


59 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

20 #i‚de‡
_MATH_H


24 
	~<bôs/w‹dsize.h
>

26 #i‚de‡
__exã∫_Æways_ölöe


27 
	#__MATH_INLINE
 
__ölöe


	)

29 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

35 #i‡
__GNUC_PREREQ
 (2, 8Ë&& 
deföed
 
__USE_ISOC99


36 
__BEGIN_NAMESPACE_C99


39 
__MATH_INLINE
 

40 
__NTH
 (
	$__signbôf
 (
__x
))

42 #i‡
__WORDSIZE
 == 32

43 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

44  
__u
.
__i
 < 0;

46 
__m
;

47 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

48  
__m
 & 0x8;

50 
	}
}

51 
__MATH_INLINE
 

52 
__NTH
 (
	$__signbô
 (
__x
))

54 #i‡
__WORDSIZE
 == 32

55 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

56  
__u
.
__i
[1] < 0;

58 
__m
;

59 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

60  
__m
 & 0x80;

62 
	}
}

63 
__MATH_INLINE
 

64 
__NTH
 (
	$__signbôl
 (
__x
))

66 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

67  (
__u
.
__i
[2] & 0x8000) != 0;

68 
	}
}

70 
	g__END_NAMESPACE_C99


74 #i‡(
__GNUC_PREREQ
 (2, 8Ë&& !
deföed
 
__NO_MATH_INLINES
 \

75 && 
deföed
 
	g__OPTIMIZE__
)

77 #ifde‡
__USE_ISOC99


78 
	g__BEGIN_NAMESPACE_C99


81 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE_MATH__


82 
__MATH_INLINE
 

83 
__NTH
 (
	$Ãötf
 (
__x
))

85 
__ªs
;

86 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

87  
__ªs
;

88 
	}
}

90 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__


91 
__MATH_INLINE
 

92 
__NTH
 (
	$Ãöt
 (
__x
))

94 
__ªs
;

95 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

96  
__ªs
;

97 
	}
}

99 #i‡
__WORDSIZE
 == 64

100 
__MATH_INLINE
 

101 
__NTH
 (
	$Œrötf
 (
__x
))

103 
__ªs
;

104 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

105  
__ªs
;

106 
	}
}

107 
__MATH_INLINE
 

108 
__NTH
 (
	$Œröt
 (
__x
))

110 
__ªs
;

111 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

112  
__ªs
;

113 
	}
}

116 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

117 && (
	g__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__
)

119 
__MATH_INLINE
 

120 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

122 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

123  
__x
;

124 
	}
}

125 
__MATH_INLINE
 

126 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

128 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

129  
__x
;

130 
	}
}

133 
__MATH_INLINE
 

134 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

136 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

137  
__x
;

138 
	}
}

139 
__MATH_INLINE
 

140 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

142 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

143  
__x
;

144 
	}
}

147 
	g__END_NAMESPACE_C99


150 #i‡
deföed
 
__SSE4_1__
 && (
__WORDSIZE
 =64 || deföed 
__SSE2_MATH__
)

151 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__BEGIN_NAMESPACE_C99


155 
__MATH_INLINE
 

156 
__NTH
 (
	$röt
 (
__x
))

158 
__ªs
;

159 
	`__asm
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

160  
__ªs
;

161 
	}
}

162 
__MATH_INLINE
 

163 
__NTH
 (
	$rötf
 (
__x
))

165 
__ªs
;

166 
	`__asm
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

167  
__ªs
;

168 
	}
}

170 #ifde‡
__USE_ISOC99


172 
__MATH_INLINE
 

173 
__NTH
 (
	$√¨byöt
 (
__x
))

175 
__ªs
;

176 
	`__asm
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

177  
__ªs
;

178 
	}
}

179 
__MATH_INLINE
 

180 
__NTH
 (
	$√¨byötf
 (
__x
))

182 
__ªs
;

183 
	`__asm
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

188 
	g__END_NAMESPACE_C99


191 
__BEGIN_NAMESPACE_STD


193 
__MATH_INLINE
 

194 
__NTH
 (
	$˚û
 (
__x
))

196 
__ªs
;

197 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

198  
__ªs
;

199 
	}
}

200 
__END_NAMESPACE_STD


202 
__BEGIN_NAMESPACE_C99


203 
__MATH_INLINE
 

204 
__NTH
 (
	$˚ûf
 (
__x
))

206 
__ªs
;

207 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

208  
__ªs
;

209 
	}
}

210 
__END_NAMESPACE_C99


212 
__BEGIN_NAMESPACE_STD


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Êo‹
 (
__x
))

217 
__ªs
;

218 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

219  
__ªs
;

220 
	}
}

221 
__END_NAMESPACE_STD


223 
__BEGIN_NAMESPACE_C99


224 
__MATH_INLINE
 

225 
__NTH
 (
	$Êo‹f
 (
__x
))

227 
__ªs
;

228 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

229  
__ªs
;

230 
	}
}

231 
	g__END_NAMESPACE_C99


	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

31 #ifde‡
__USE_GNU


33 
	~<bôs/sig£t.h
>

40 
	~<bôs/sockë.h
>

42 #ifde‡
__USE_BSD


45 
	sosockaddr


47 
	mß_Ámûy
;

48 
	mß_d©a
[14];

56 
	mSHUT_RD
 = 0,

57 
	#SHUT_RD
 
SHUT_RD


	)

58 
	mSHUT_WR
,

59 
	#SHUT_WR
 
SHUT_WR


	)

60 
	mSHUT_RDWR


61 
	#SHUT_RDWR
 
SHUT_RDWR


	)

70 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


71 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

72 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

76 
	#__SOCKADDR_ALLTYPES
 \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

86 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

87 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

88 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

89 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


95 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

96 uni⁄ { 
	m__SOCKADDR_ALLTYPES


97 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

98 #unde‡
__SOCKADDR_ONETYPE


105 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

111 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

112 
__fds
[2]Ë
__THROW
;

115 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

116 
__THROW
;

119 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

120 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

129 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

133 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

134 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

141 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

148 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

155 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

156 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

157 
sockÀn_t
 
__addr_Àn
);

166 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

167 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

168 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

176 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

177 
__Êags
);

184 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

190 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

191 *
__ª°ri˘
 
__›tvÆ
,

192 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

197 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

198 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

204 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

214 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

215 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

217 #ifde‡
__USE_GNU


222 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

223 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

232 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

235 #ifde‡
__USE_XOPEN2K


237 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

241 #ifde‡
__USE_MISC


245 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


251 
	~<bôs/sockë2.h
>

254 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	~<sys/ty≥s.h
>

34 #i‚de‡
__sockÀn_t_deföed


35 
__sockÀn_t
 
	tsockÀn_t
;

36 
	#__sockÀn_t_deföed


	)

40 
	e__sockë_ty≥


42 
	mSOCK_STREAM
 = 1,

44 
	#SOCK_STREAM
 
SOCK_STREAM


	)

45 
	mSOCK_DGRAM
 = 2,

47 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

48 
	mSOCK_RAW
 = 3,

49 
	#SOCK_RAW
 
SOCK_RAW


	)

50 
	mSOCK_RDM
 = 4,

51 
	#SOCK_RDM
 
SOCK_RDM


	)

52 
	mSOCK_SEQPACKET
 = 5,

54 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

55 
	mSOCK_DCCP
 = 6,

56 
	#SOCK_DCCP
 
SOCK_DCCP


	)

57 
	mSOCK_PACKET
 = 10,

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

65 
	mSOCK_CLOEXEC
 = 02000000,

67 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

68 
	mSOCK_NONBLOCK
 = 04000

70 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

74 
	#PF_UNSPEC
 0

	)

75 
	#PF_LOCAL
 1

	)

76 
	#PF_UNIX
 
PF_LOCAL


	)

77 
	#PF_FILE
 
PF_LOCAL


	)

78 
	#PF_INET
 2

	)

79 
	#PF_AX25
 3

	)

80 
	#PF_IPX
 4

	)

81 
	#PF_APPLETALK
 5

	)

82 
	#PF_NETROM
 6

	)

83 
	#PF_BRIDGE
 7

	)

84 
	#PF_ATMPVC
 8

	)

85 
	#PF_X25
 9

	)

86 
	#PF_INET6
 10

	)

87 
	#PF_ROSE
 11

	)

88 
	#PF_DEC√t
 12

	)

89 
	#PF_NETBEUI
 13

	)

90 
	#PF_SECURITY
 14

	)

91 
	#PF_KEY
 15

	)

92 
	#PF_NETLINK
 16

	)

93 
	#PF_ROUTE
 
PF_NETLINK


	)

94 
	#PF_PACKET
 17

	)

95 
	#PF_ASH
 18

	)

96 
	#PF_ECONET
 19

	)

97 
	#PF_ATMSVC
 20

	)

98 
	#PF_RDS
 21

	)

99 
	#PF_SNA
 22

	)

100 
	#PF_IRDA
 23

	)

101 
	#PF_PPPOX
 24

	)

102 
	#PF_WANPIPE
 25

	)

103 
	#PF_LLC
 26

	)

104 
	#PF_CAN
 29

	)

105 
	#PF_TIPC
 30

	)

106 
	#PF_BLUETOOTH
 31

	)

107 
	#PF_IUCV
 32

	)

108 
	#PF_RXRPC
 33

	)

109 
	#PF_ISDN
 34

	)

110 
	#PF_PHONET
 35

	)

111 
	#PF_IEEE802154
 36

	)

112 
	#PF_CAIF
 37

	)

113 
	#PF_ALG
 38

	)

114 
	#PF_NFC
 39

	)

115 
	#PF_MAX
 40

	)

118 
	#AF_UNSPEC
 
PF_UNSPEC


	)

119 
	#AF_LOCAL
 
PF_LOCAL


	)

120 
	#AF_UNIX
 
PF_UNIX


	)

121 
	#AF_FILE
 
PF_FILE


	)

122 
	#AF_INET
 
PF_INET


	)

123 
	#AF_AX25
 
PF_AX25


	)

124 
	#AF_IPX
 
PF_IPX


	)

125 
	#AF_APPLETALK
 
PF_APPLETALK


	)

126 
	#AF_NETROM
 
PF_NETROM


	)

127 
	#AF_BRIDGE
 
PF_BRIDGE


	)

128 
	#AF_ATMPVC
 
PF_ATMPVC


	)

129 
	#AF_X25
 
PF_X25


	)

130 
	#AF_INET6
 
PF_INET6


	)

131 
	#AF_ROSE
 
PF_ROSE


	)

132 
	#AF_DEC√t
 
PF_DEC√t


	)

133 
	#AF_NETBEUI
 
PF_NETBEUI


	)

134 
	#AF_SECURITY
 
PF_SECURITY


	)

135 
	#AF_KEY
 
PF_KEY


	)

136 
	#AF_NETLINK
 
PF_NETLINK


	)

137 
	#AF_ROUTE
 
PF_ROUTE


	)

138 
	#AF_PACKET
 
PF_PACKET


	)

139 
	#AF_ASH
 
PF_ASH


	)

140 
	#AF_ECONET
 
PF_ECONET


	)

141 
	#AF_ATMSVC
 
PF_ATMSVC


	)

142 
	#AF_RDS
 
PF_RDS


	)

143 
	#AF_SNA
 
PF_SNA


	)

144 
	#AF_IRDA
 
PF_IRDA


	)

145 
	#AF_PPPOX
 
PF_PPPOX


	)

146 
	#AF_WANPIPE
 
PF_WANPIPE


	)

147 
	#AF_LLC
 
PF_LLC


	)

148 
	#AF_CAN
 
PF_CAN


	)

149 
	#AF_TIPC
 
PF_TIPC


	)

150 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

151 
	#AF_IUCV
 
PF_IUCV


	)

152 
	#AF_RXRPC
 
PF_RXRPC


	)

153 
	#AF_ISDN
 
PF_ISDN


	)

154 
	#AF_PHONET
 
PF_PHONET


	)

155 
	#AF_IEEE802154
 
PF_IEEE802154


	)

156 
	#AF_CAIF
 
PF_CAIF


	)

157 
	#AF_ALG
 
PF_ALG


	)

158 
	#AF_NFC
 
PF_NFC


	)

159 
	#AF_MAX
 
PF_MAX


	)

165 
	#SOL_RAW
 255

	)

166 
	#SOL_DECNET
 261

	)

167 
	#SOL_X25
 262

	)

168 
	#SOL_PACKET
 263

	)

169 
	#SOL_ATM
 264

	)

170 
	#SOL_AAL
 265

	)

171 
	#SOL_IRDA
 266

	)

174 
	#SOMAXCONN
 128

	)

177 
	~<bôs/sockaddr.h
>

180 
	ssockaddr


182 
__SOCKADDR_COMMON
 (
ß_
);

183 
	mß_d©a
[14];

189 
	#__ss_Æig¡y≥
 

	)

190 
	#_SS_SIZE
 128

	)

191 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

193 
	ssockaddr_°‹age


195 
__SOCKADDR_COMMON
 (
ss_
);

196 
__ss_Æig¡y≥
 
	m__ss_Æign
;

197 
	m__ss_∑ddög
[
_SS_PADSIZE
];

204 
	mMSG_OOB
 = 0x01,

205 
	#MSG_OOB
 
MSG_OOB


	)

206 
	mMSG_PEEK
 = 0x02,

207 
	#MSG_PEEK
 
MSG_PEEK


	)

208 
	mMSG_DONTROUTE
 = 0x04,

209 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

210 #ifde‡
__USE_GNU


212 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

213 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

215 
	mMSG_CTRUNC
 = 0x08,

216 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

217 
	mMSG_PROXY
 = 0x10,

218 
	#MSG_PROXY
 
MSG_PROXY


	)

219 
	mMSG_TRUNC
 = 0x20,

220 
	#MSG_TRUNC
 
MSG_TRUNC


	)

221 
	mMSG_DONTWAIT
 = 0x40,

222 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

223 
	mMSG_EOR
 = 0x80,

224 
	#MSG_EOR
 
MSG_EOR


	)

225 
	mMSG_WAITALL
 = 0x100,

226 
	#MSG_WAITALL
 
MSG_WAITALL


	)

227 
	mMSG_FIN
 = 0x200,

228 
	#MSG_FIN
 
MSG_FIN


	)

229 
	mMSG_SYN
 = 0x400,

230 
	#MSG_SYN
 
MSG_SYN


	)

231 
	mMSG_CONFIRM
 = 0x800,

232 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

233 
	mMSG_RST
 = 0x1000,

234 
	#MSG_RST
 
MSG_RST


	)

235 
	mMSG_ERRQUEUE
 = 0x2000,

236 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

237 
	mMSG_NOSIGNAL
 = 0x4000,

238 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

239 
	mMSG_MORE
 = 0x8000,

240 
	#MSG_MORE
 
MSG_MORE


	)

241 
	mMSG_WAITFORONE
 = 0x10000,

242 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

244 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

247 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

253 
	smsghdr


255 *
	mmsg_«me
;

256 
sockÀn_t
 
	mmsg_«mñí
;

258 
iovec
 *
	mmsg_iov
;

259 
size_t
 
	mmsg_iovÀn
;

261 *
	mmsg_c⁄åﬁ
;

262 
size_t
 
	mmsg_c⁄åﬁÀn
;

267 
	mmsg_Êags
;

270 #ifde‡
__USE_GNU


272 
	smmsghdr


274 
msghdr
 
	mmsg_hdr
;

275 
	mmsg_Àn
;

280 
	scmsghdr


282 
size_t
 
	mcmsg_Àn
;

287 
	mcmsg_Àvñ
;

288 
	mcmsg_ty≥
;

289 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

290 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

295 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

296 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

298 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

300 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

301 
	#CMSG_FIRSTHDR
(
mhdr
) \

302 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

303 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

304 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

305 & (
size_t
Ë~( (size_tË- 1))

	)

306 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

307 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

308 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

310 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

311 
cmsghdr
 *
__cmsg
Ë
__THROW
;

312 #ifde‡
__USE_EXTERN_INLINES


313 #i‚de‡
_EXTERN_INLINE


314 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

316 
_EXTERN_INLINE
 
cmsghdr
 *

317 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

319 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

321  (
cmsghdr
 *) 0;

323 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

324 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

325 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


326 + 
__mhdr
->
msg_c⁄åﬁÀn
)

327 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

328 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

330  (
cmsghdr
 *) 0;

331  
__cmsg
;

332 
	}
}

339 
	mSCM_RIGHTS
 = 0x01

340 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

341 #ifde‡
__USE_GNU


342 , 
	mSCM_CREDENTIALS
 = 0x02

343 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

347 #ifde‡
__USE_GNU


349 
	su¸ed


351 
pid_t
 
	mpid
;

352 
uid_t
 
	muid
;

353 
gid_t
 
	mgid
;

358 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


359 #i‚de‡
FIOGETOWN


360 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

362 #i‚de‡
FIOSETOWN


363 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

365 #i‚de‡
SIOCATMARK


366 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

368 #i‚de‡
SIOCGPGRP


369 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

371 #i‚de‡
SIOCGSTAMP


372 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

374 #i‚de‡
SIOCGSTAMPNS


375 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

377 #i‚de‡
SIOCSPGRP


378 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

383 
	~<asm/sockë.h
>

385 #i‡!
deföed
 
__USE_MISC
 && !deföed 
__USE_GNU


386 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


387 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


388 #unde‡
FIOGETOWN


390 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


391 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


392 #unde‡
FIOSETOWN


394 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


395 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


396 #unde‡
SIOCATMARK


398 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


399 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


400 #unde‡
SIOCGPGRP


402 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


403 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


404 #unde‡
SIOCGSTAMP


406 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


407 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


408 #unde‡
SIOCGSTAMPNS


410 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


411 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


412 #unde‡
SIOCSPGRP


417 
	slögî


419 
	ml_⁄off
;

420 
	ml_lögî
;

424 
__BEGIN_DECLS


431 
ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

432 
__vÀn
, 
__Êags
,

433 
__c⁄°
 
time•ec
 *
__tmo
);

439 
£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

440 
__vÀn
, 
__Êags
);

442 
	g__END_DECLS


	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3)

150 
	#__w¨nde˛
(
«me
, 
msg
) \

151 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

152 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

153 
	#__îr‹de˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

156 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 
	#__w¨«âr
(
msg
)

	)

158 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

162 #i‡
__GNUC_PREREQ
 (2,97)

164 
	#__Êex¨r
 []

	)

166 #ifde‡
__GNUC__


167 
	#__Êex¨r
 [0]

	)

169 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

170 
	#__Êex¨r
 []

	)

173 
	#__Êex¨r
 [1]

	)

189 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

191 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

192 #ifde‡
__˝lu•lus


193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

200 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

201 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

203 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

204 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

217 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

218 
	#__©åibuã__
(
xyz
Ë

	)

224 #i‡
__GNUC_PREREQ
 (2,96)

225 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

227 
	#__©åibuã_mÆloc__


	)

233 #i‡
__GNUC_PREREQ
 (2,96)

234 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

236 
	#__©åibuã_puª__


	)

240 #i‡
__GNUC_PREREQ
 (2,5)

241 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

243 
	#__©åibuã_c⁄°__


	)

249 #i‡
__GNUC_PREREQ
 (3,1)

250 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

251 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

254 
	#__©åibuã_noölöe__


	)

258 #i‡
__GNUC_PREREQ
 (3,2)

259 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

261 
	#__©åibuã_dïªˇãd__


	)

270 #i‡
__GNUC_PREREQ
 (2,8)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

273 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

280 #i‡
__GNUC_PREREQ
 (2,97)

281 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

282 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

289 #i‡
__GNUC_PREREQ
 (3,3)

290 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

292 
	#__n⁄nuŒ
(
∑øms
)

	)

297 #i‡
__GNUC_PREREQ
 (3,4)

298 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

299 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

300 #i‡
__USE_FORTIFY_LEVEL
 > 0

301 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

304 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

306 #i‚de‡
__wur


307 
	#__wur


	)

311 #i‡
__GNUC_PREREQ
 (3,2)

312 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

320 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


321 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

330 
	#__exã∫_ölöe
 
__ölöe


	)

331 #i‡
__GNUC_PREREQ
 (4,3)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3)

343 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

344 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

351 #i‡!
__GNUC_PREREQ
 (2,8)

352 
	#__exãnsi⁄__


	)

356 #i‡!
__GNUC_PREREQ
 (2,92)

357 
	#__ª°ri˘


	)

363 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


364 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

366 #ifde‡
__GNUC__


367 
	#__ª°ri˘_¨r


	)

369 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

370 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

373 
	#__ª°ri˘_¨r


	)

378 
	~<bôs/w‹dsize.h
>

380 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


381 
	#__LDBL_COMPAT
 1

	)

382 #ifde‡
__REDIRECT


383 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

384 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

385 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

386 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

387 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

388 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

389 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

390 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

391 
	#__LDBL_REDIR_DECL
(
«me
) \

392 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

395 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

396 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

399 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


400 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

401 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

402 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

403 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

404 
	#__LDBL_REDIR_DECL
(
«me
)

	)

405 #ifde‡
__REDIRECT


406 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

41 
__wur
;

51 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
)

52 
__wur
;

55 #ifde‡
__USE_BSD


56 #i‚de‡
__USE_FILE_OFFSET64


66 
ssize_t
 
	$¥ódv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

67 
__off_t
 
__off£t
Ë
__wur
;

78 
ssize_t
 
	$pwrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

79 
__off_t
 
__off£t
Ë
__wur
;

81 #ifde‡
__REDIRECT


82 
ssize_t
 
	`__REDIRECT
 (
¥ódv
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

83 
__cou¡
, 
__off64_t
 
__off£t
),

84 
¥ódv64
Ë
__wur
;

85 
ssize_t
 
	`__REDIRECT
 (
pwrôev
, (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
,

86 
__cou¡
, 
__off64_t
 
__off£t
),

87 
pwrôev64
Ë
__wur
;

89 
	#¥ódv
 
¥ódv64


	)

90 
	#pwrôev
 
pwrôev64


	)

94 #ifde‡
__USE_LARGEFILE64


104 
ssize_t
 
	$¥ódv64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

105 
__off64_t
 
__off£t
Ë
__wur
;

116 
ssize_t
 
	$pwrôev64
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
,

117 
__off64_t
 
__off£t
Ë
__wur
;

121 
__END_DECLS


	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

52 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


53 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

55 
__BEGIN_DECLS


58 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

59 
__liov˙t
,

60 
__c⁄°
 
iovec
 *
__rvec
,

61 
__riov˙t
,

62 
__Êags
)

63 
__THROW
;

66 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

67 
__liov˙t
,

68 
__c⁄°
 
iovec
 *
__rvec
,

69 
__riov˙t
,

70 
__Êags
)

71 
__THROW
;

73 
__END_DECLS


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/socket.h

1 #i‚de‡
__ASM_GENERIC_SOCKET_H


2 
	#__ASM_GENERIC_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

47 
	#SO_PEERNAME
 28

	)

48 
	#SO_TIMESTAMP
 29

	)

49 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

51 
	#SO_ACCEPTCONN
 30

	)

53 
	#SO_PEERSEC
 31

	)

54 
	#SO_PASSSEC
 34

	)

55 
	#SO_TIMESTAMPNS
 35

	)

56 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

58 
	#SO_MARK
 36

	)

60 
	#SO_TIMESTAMPING
 37

	)

61 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

63 
	#SO_PROTOCOL
 38

	)

64 
	#SO_DOMAIN
 39

	)

66 
	#SO_RXQ_OVFL
 40

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/asm-generic/sockios.h

1 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


2 
	#__ASM_GENERIC_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
120
3299
/home/john/Documents/Projects/BrainFarm/Base.h
/home/john/Documents/Projects/BrainFarm/Feed.h
/home/john/Documents/Projects/BrainFarm/Feeder.h
/home/john/Documents/Projects/BrainFarm/FlexrayC.h
/home/john/Documents/Projects/BrainFarm/IoJack.h
/home/john/Documents/Projects/BrainFarm/Lugar.h
/home/john/Documents/Projects/BrainFarm/Node.h
/home/john/Documents/Projects/BrainFarm/Org.h
/home/john/Documents/Projects/BrainFarm/Pop.h
/home/john/Documents/Projects/BrainFarm/flexray.c
/home/john/Documents/Projects/BrainFarm/flexray.h
/home/john/Documents/Projects/BrainFarm/main.cpp
/usr/include/curl/curl.h
/usr/include/inttypes.h
/usr/include/math.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/time.h
/usr/include/time.h
/usr/include/unistd.h
Base.h
Feed.h
Feeder.h
FlexrayC.h
IoJack.h
Lugar.h
Node.h
Org.h
Pop.h
flexray.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/sys/select.h
/usr/include/sys/socket.h
/usr/include/sys/types.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/predefs.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/xopen_lim.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/sys/sysmacros.h
/usr/include/sys/uio.h
/usr/include/asm/socket.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libc-lock.h
/usr/include/bits/local_lim.h
/usr/include/bits/sockaddr.h
/usr/include/bits/uio.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/asm-generic/socket.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/linux/limits.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm/sockios.h
/usr/include/bits/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/sockios.h
/usr/include/bits/sched.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
